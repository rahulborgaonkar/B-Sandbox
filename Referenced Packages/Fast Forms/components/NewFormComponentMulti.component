<apex:component controller="VisualAntidote.CKEditorNewFormMultiController" allowDML="true" id="cp">
    <link rel="stylesheet" href="{!URLFOR($Resource.sortable,'sortable/jquery-ui.css')}" />
    <!-- <script src="{!URLFOR($Resource.sortable,'sortable/jquery-1.8.3.js')}"></script> -->
    <script src="{!URLFOR($Resource.sortable,'sortable/jquery-ui.js')}"></script>
    <!--dialog script---->
    <link href="//www.google.com/fonts#UsePlace:use/Collection:Open+Sans" rel="stylesheet" type="text/css"/>
    <link rel="stylesheet" href="{!URLFOR($Resource.jquery_dialog,'jquery_dialog/jquery-ui.css')}"/>
    <!--- <script src="{!URLFOR($Resource.jquery_dialog,'jquery_dialog/jquery-1.9.1.js')}"></script>-->
    <script src="{!URLFOR($Resource.jquery_dialog,'jquery_dialog/jquery-ui.js')}"></script>
    <link rel="stylesheet" href="{!URLFOR($Resource.jScroll,'css/jquery.jscrollpane.css')}" />
     <link rel="stylesheet" href="{!URLFOR($Resource.jScroll,'css/customSelectBox.css')}" />
     <script src="{!URLFOR($Resource.jScroll,'js/jScrollPane.js')}"></script>
     <script src="{!URLFOR($Resource.jScroll,'js/jquery.mousewheel.js')}"></script>
     <link rel="stylesheet" href="{!URLFOR($Resource.select2,'select2.css')}" />
     <script src="{!URLFOR($Resource.select2,'select2.js')}"></script>
     <script>    

           


        </script>
  <style>
      .help {
            background-image: url("{!URLFOR($Resource.alpha,'button-sprite.png')}");
background-color: rgba(5,41,66,.10);
background-position: -332px -3px !important;
display: inline-block;
border: 1px solid rgba(5, 41, 66, 0.18);
border-radius: 50px;
height: 16px !important;
margin-left: 5px;
margin-top: 5px;
width: 16px !important;
      }
      .help:hover {
            background-color: rgba(5,41,66,.18);
            border: solid 1px rgba(18,136,197,.6);
      }
      .branchImage{
          margin-top:5px;
          height:19px;
      }
      .scroll-parent {
            float: left;
       }
       .ChildOption {
            background-color: #f1f6f8;
            border-top:1px solid #93d4fe;
       }
      
    .container > center {
        background-color: #F1F6F8;
        min-height: 200px;
        padding-top: 30px;
    }
    h1{
        font-size: 26px;
        font-weight: semi-bold;
        color:#052942;
    }
    H2{
        font-size: 20px;
        font-weight: regular;
    }
    H3{
        font-size: 18px;
        font-weight: regular;
    }
    H4{
        font-size: 14px;
        font-weight: regular;
    }
    H5{
        font-size:12px;
        font-weight: regular;
    }
    H6{
        font-size:10px;
        font-weight: regular;
   }
   .button {
   background: #1bc2b1;
   color: white;
   border:none;
   font-size: 14px;
   text-decoration: none;
   vertical-align: middle;
   }
  .button:hover {
   background: #1bc2b1;
   color: white;
   text-decoration: none;
   }
   #bodyCell table {
    text-align:left;
   }
   #bodyCell table td{
        height: 42px;
        vertical-align: middle;
        font-weight:bold;
   }
   .container{
            background-color:#f1f6f8;
            width:100%;left:0;
            height:125px;
     }
    .formName{    
        border-radius: 5px;
        background-color:#fff;
        border: 1px solid #CECECE;
        color:#052942;
        width:217px;
        padding: 10px; 
        font-family: 'Open Sans','sans-serif';
         
    }
    .formName:focus{
            outline:none;
            border-color:#33aefd;
    }
    .formName:disabled{
        background-color:#f1f6f8;
        border-color:#cecece;
    }
    .container table {
        padding-top: 7px !important;
    }
    .newBtn {
        padding: 6px;
        display: block;
        width: 121px !important;
        text-align: center;
    }
    .selectParent{
    width: 318px;
    overflow:hidden;
    border-radius: 5px;
   }
   .custom {
        top: -54px;
        position: fixed;
    }    
    .disabled{
        background: none repeat scroll 0 0 #cecece!important;
    }
    .disabled:hover{
        background: none repeat scroll 0 0 #cecece!important;
    }
    #newForm td{
        height: 35px !important;
        padding-right: 20px;
        line-height:2;
    }
    
    .customSelect .selectedValue {
        height: 18px;
        padding-left: 20px;
        padding-top: 10px;
        background:url('{!URLFOR($Resource.iconImages,'img-select.png')}') no-repeat 96% center #fff;
     }
     .customSelect .selectValueWrap .caret {
        position: absolute;
        top: 16px;
        display: none;
     }
     dd{
         height:18px;
         padding-bottom: 13px !important;
         padding-left: 20px !important;
     }
     .customSelect .selected {
         background-color : #FFF !important;
         background-image:none !important;
         color : black !important;
     }
     .customSelect .selectList dd.hovered {
            background-color: #FFF !important;
            background-image: none !important;
            color: black !important;
            border-left: 5px solid #33aefd;
            padding-left: 15px !important;//Change this in code
       }
     
      .select-open{
          z-index: 100 !important;
      }
      .requiredInput {
      
          font-family: 'Open Sans','sans-serif';
      }
      .customSelect{
      padding-top:2px;
          font-family: 'Open Sans','sans-serif';
      }
      .btnSaved {
        background: none repeat scroll 0 0 #CECECE !important;
        border-radius: 5px;
        color: #FFFFFF;
        font-size: 14px;
        font-weight: bold;
        min-width: 100px;
        text-decoration: none;
        vertical-align: middle;
        pointer-events:none;
    }
    .container{
        height:auto;
    }
    .relatedDiv{
        color: #444;
        font-weight: bold;
        padding: 5px;
        border-radius: 5px;
         
        border: dashed 1px #33aefd;
        display:none;
        text-align: center;
        width: 354px;
    }
    .relatedDiv:hover{
        background:#33aefd;
        border: solid 1px #33aefd;
    }
    #circle {  
        background-color: rgba(5,41,66,.10); 
        border: solid 1px rgba(5,41,66,.18);
        background-image: url("{!URLFOR($Resource.alpha,'button-sprite.png')}");
        -moz-border-radius: 50px; 
        -webkit-border-radius: 50px;
        background-position: -331px -3px;
        background-repeat: no-repeat;
        border: 1px solid rgba(5, 41, 66, 0.18);
        border-radius: 50px;
        float: left;
        height: 16px;
        margin-left: 10px;
        margin-top: 5px;
        width: 16px;
    }
    .tooltips > img {
        height: 18px;
        width: 18px;
    }
    .midTd {        
        min-width: 527px;
    }
    .bodr {
        border-left: 2px solid rgba(195, 195, 195, 0.5) !important;
        padding-left: 20px;
          vertical-align: top !important;
    }
    .firstTd,.midTd {
        vertical-align: top !important;
    }
    #hoverRelImg,#hoverRelSelectedImg,#hoverRelSelectedThirdImg {
        width: 25px;
        height: 25px;
        -moz-border-radius: 100px / 50px;
        -webkit-border-radius: 100px / 50px;
        border-radius: 12px / 12px;
        background-color: rgba(5,41,66,.10);
        border: solid 1px rgba(5,41,66,.18);
        background-image:url('{!URLFOR($Resource.alpha,'button-sprite.png')}');
        background-position: -200px -1px;
        
    }
    #hoverRelImg:hover,#hoverRelSelectedImg:hover,#hoverRelSelectedThirdImg:hover { 
        background-color: rgba(5,41,66,.18);
        border: solid 1px rgba(18,136,197,.6);
    }
    #hoverRelImg:active,#hoverRelSelectedImg:active,#hoverRelSelectedThirdImg:active{ 
        background-color: rgba(5,41,66,.25);
        border: solid 1px rgba(18,136,197,.6);
    } 
    .newForm {
    display:none;
    }
    .firstBlock {
    display:block;
    height:32px;
    padding-bottom:10px;
    }
    .firstBlock label{
    font-size: 14px;
    }
    .select-secondary-element-wrapper {
    float: left;
    padding-top: 8px;
    clear: left;
}
.select-secondary-element-wrapper .scroll-parent.add-related-obj {
 
    padding-left: 30px;
    padding-top: 23px;
    cursor: pointer;
    margin-top: -14px;
     clear:left;
    background-repeat: no-repeat;
    background-position: left -13px;
}
.select-secondary-element-wrapper .add-related-obj .add-related-item {
    color: #052942;
    font-weight: 600;
    padding: 5px;
    border-radius: 5px;
    line-height: 20px;
    border: dashed 1px #33aefd;
    text-align: center;
    width: 340px;
    font-family: 'Open Sans';
}
.secondary-object-block .scroll-parent {
    padding-left: 30px;
    padding-top: 23px;
    margin-top: -14px;
    clear:left;
    background-repeat: no-repeat;
    background-position: left -13px;
}
.secondary-object-block .delete-object-box .rel-object-delete:hover {
    display: block;
}
.secondary-object-block .delete-object-box .rel-object-delete {
    float: right;
    -moz-border-radius: 100px / 50px;
    -webkit-border-radius: 100px / 50px;
    border-radius: 12px / 12px;
    background-color: rgba(5, 41, 66, .10);
    border: solid 1px rgba(5, 41, 66, .18);
    background-position: -200px -1px !important;
    height: 25px;
    width: 25px;
    margin-top: 7px;
}
.secondary-object-block .delete-object-box {
  float: left;
    margin-left: 10px;
    margin-top: 5px;
    display: block;
}

</style>
<script>
var maxRelatedObject=9;
  var selectedPrimary="";
        var ffcommonResuorceUrl  = "{!URLFOR($Resource.ffcommon)}";
        var colorTagArray=['Z','A','B','C','D','E','F','G','H','I','J','K','L','M','N','O','P','Q','R','S','T','U','V','W','X','Y'];
          $(function() {
               <apex:outputText rendered="{!if(isFreemium,true,false)}">  
                         resetPrimaryForFreemium('select.drop-select'); 
                          </apex:outputText> 
                $("select.drop-select").select2();

                
           });
function OnChangePrimary(e)
{
  <apex:outputText rendered="{!if(isFreemium,true,false)}">
                      if(e.value != '' &&  $.inArray(e.value, validObjects())<0) 
                      {
                        
                         
                          upgradeNowMessage("Only Case, Account, Contact and Lead objects are available in Fast Forms free edition.","","http://visualantidote.com/fastforms#Subscribe");
console.log(' selectedPrimary: '+selectedPrimary);
$("select.drop-select").select2("val",selectedPrimary);
                    return false;
                      }
                      else{
                      </apex:outputText>

                      if(e.value == '' || $('.formName').val().trim().length ==0){
                          $('.newBtn').addClass('btnSaved'); 
                                               
                      }else{
                          $('.newBtn').removeClass('btnSaved');
                          
                      }
                      
                      if(e.value == '')
                      {
                        $('.select-secondary-element-wrapper').hide();  
                      }
                      else
                      {
                        
                        $('.select-secondary-element-wrapper').show();
                          $('.select-secondary-element-wrapper .secondary-object-block').remove();
                         
                      }
                       
                       
                      goToNextTourStop();
                      isFinalStep = true;
                       <apex:outputText rendered="{!if(isFreemium,true,false)}">
                    }/*else condition ends*/
                       </apex:outputText>
                       selectedPrimary=e.value;
}
           function isLookupOption(fistListId){
               return fistListId.indexOf('lookup') > -1;
           }
           
    $( document ).ready(function() {
        $('.newForm').hide();
        $('.newBtn').addClass('btnSaved'); 
               
    });
    function checkFormName(val){
        if($(val).val() == undefined || $(val).val().trim().length == 0 || $("Select.drop-select").select2('val') == ''){
              $('.newBtn').addClass('btnSaved'); 
              //$('.select-secondary-element-wrapper').hide(); 
          }else{
              $('.newBtn').removeClass('btnSaved'); 
             // $('.select-secondary-element-wrapper').show();                                                
          }
    }
    
     
    function showDiv(){
        $("select.drop-select").select2("val", "");
        $('[id$="formName"]').val('');
        
       /* $("#createNewForm").removeClass('button').addClass('btnSaved');*/      
    } 
    function fetchHiddenObjectValues(){
                        var hiddenObjects = '';
                      var seperator="";         
                                 $('.select-secondary-element-wrapper').find('.secondary-object-block').each(function(indx,selectParentElem){
                        var selectedValue=$(selectParentElem).find('select.select-secondary-element').val();
                      if(!isNullOrEmpty(selectedValue))
                      {
                       var objtype= $(selectParentElem).find('select.select-secondary-element').children().children(':selected').attr('name');
                        console.log(' selectedValue  '+selectedValue+'  objtype-'+objtype);
                        hiddenObjects+=seperator+selectedValue+'##'+objtype;
                        seperator=",";      
                      }

                    });
                        return hiddenObjects;
             }
    function callSaveForm(){             
             mixpanel.track('Create button clicked');
             Intercom('trackEvent', 'clicked-create');
             var formName = $('[id$="formName"]').val();
           <apex:outputText rendered="{!IF(!isFreemium || (isFreemium && (noOfForms<2)),true,false)}">
             var hiddenObject = fetchHiddenObjectValues();
                
                 
                var selectedObject = $('select.drop-select').select2('val');

                 var relatedObjectsJSON=[];
                     $('.select-secondary-element-wrapper').find('.secondary-object-block').each(function(indx,selectParentElem){
                        var selectedValue=$(selectParentElem).find('select.select-secondary-element').select2("val");
                      if(!isNullOrEmpty(selectedValue))
                      {
                        relatedObjectsJSON.push(createRelJSONObj(selectedValue));
                        console.log(' selectedValue  '+selectedValue+'  Index of Rel obj-'+indx);
                      }

                    });
                    
                                        var relatedObjectsXML='<relatedObjects>';
                                        $.each(relatedObjectsJSON, function (index, jsonitem) {
                                            if (relatedObjectsJSON[index].object!=null && relatedObjectsJSON[index].object!='') {
                                               relatedObjectsXML+='<object>'+ relatedObjectsJSON[index].object+'</object>';
                                            }
                                        });
                                        relatedObjectsXML+='</relatedObjects>';
   
                saveForm(formName,selectedObject,relatedObjectsXML,hiddenObject); 
                  </apex:outputText>
                  <apex:outputText rendered="{!IF(isFreemium && (1<noOfForms),true,false)}">

                          upgradeNowMessage("A maximum of two forms can be created in Fast Forms free edition.","","http://visualantidote.com/fastforms#Subscribe");
 
                  </apex:outputText>
    }
    function createRelJSONObj(relatedObjectName)
    {
        var data= { "object": relatedObjectName};
      return data;
    }
    
    function addRelatedObject(elemSource)
    {
      var selectedValue=$('select.drop-select').select2("val");      
      if(!isNullOrEmpty(selectedValue) )
      {
         <apex:outputText rendered="{!if(isFreemium,false,true)}">
        if($('.select-secondary-element-wrapper').find('.secondary-object-block').length==0)
        {
          toggleLoadingOnAddRelatedObj(true);
        remoteGetRelatedObjectsJS(selectedValue,elemSource);
        }
        else
        {
         var selectHTML= $('.select-secondary-element-wrapper').find('.secondary-object-block:first-child select').html();
           populateRelatedObject(elemSource,selectHTML);
        }
         </apex:outputText>
         <apex:outputText rendered="{!if(isFreemium,true,false)}">
         upgradeNowMessage("Related objects are only available for paid subscriptions.","","http://visualantidote.com/fastforms#Subscribe");
 
         </apex:outputText>
      }
      else
      {

      }
    }
    function toggleLoadingOnAddRelatedObj(show)
    {
      if(show)
      {
        $('.select-secondary-element-wrapper .scroll-parent.add-related-obj').hide();
       $('.select-secondary-element-wrapper .load-status-small').show();

      }
      else
      {
        $('.select-secondary-element-wrapper .scroll-parent.add-related-obj').show();
       $('.select-secondary-element-wrapper .load-status-small').hide(); 
      }
    }
    function populateRelatedObject(elemSource,selectHTML)
    {
       
        var parentWrapperDiv=$(elemSource).parents('.select-secondary-element-wrapper');
        $(parentWrapperDiv).find('div.scroll-parent.add-related-obj').hide();
        
            var relWrapElem=$('<div/>').html($('#relatedSelObjWrapperTEMP').html());
            
             
             
            if($(parentWrapperDiv).find('.secondary-object-block').length>0)
            {
            var lastDiv = $(parentWrapperDiv).find('.secondary-object-block').last();
            $( lastDiv ).after( $( relWrapElem).html() );
            }
            else
            {
                $( parentWrapperDiv ).prepend( $( relWrapElem).html() );
               
            }
            if($(parentWrapperDiv).find('.secondary-object-block').length>0)
            {
                var count=$(parentWrapperDiv).find('.secondary-object-block').length;
                var lastDiv = $(parentWrapperDiv).find('.secondary-object-block').last();
                $( lastDiv).find('select.select-secondary-element').removeClass('select-related-');
                $( lastDiv).find('select.select-secondary-element').addClass('select-related-'+count);
                $( lastDiv).find('select.select-secondary-element').attr('data-rel-index',count);
             restructureRelatedObjSelectElement($( lastDiv).find('select.select-secondary-element'), selectHTML);
            }
            else
            {
                var elementDiv=$(parentWrapperDiv).find('.secondary-object-block');
                $( elementDiv).find('select.select-secondary-element').removeClass('select-related-');
                $( elementDiv).find('select.select-secondary-element').addClass('select-related-1');
                $( elementDiv).find('select.select-secondary-element').attr('data-rel-index',1);
                
            }
            if($(parentWrapperDiv).find('.secondary-object-block').length<maxRelatedObject)
        {
            $(parentWrapperDiv).find('div.scroll-parent.add-related-obj').show();
        }
          disableSelectLookupOption();
    }
    function restructureRelatedObjSelectElement(selectElement,selecthtml)
    {
        var selectedValue=$(selectElement).val();
        var elemClass=$(selectElement).attr("class");
         if(isNullOrEmpty(selectedValue))
        {
          selectedValue="";
        }

        $(selectElement).empty();
        $(selectElement).append(selecthtml);
        
        $(selectElement).select2();
        $(selectElement).select2("val", selectedValue);
    }
    function disableSelectLookupOption()
    {
      var lookupSelected=[];
      $('.select-secondary-element-wrapper .secondary-object-block select').each(function (indx, selectElement) {
        if($(selectElement).find('option:selected').attr('name')=='lookup')
        {
         // lookupSelected.push({"order":indx,"svalue":$(selectElement).val()});
          lookupSelected.push($(selectElement).val());
        }
      });
      $('.select-secondary-element-wrapper .secondary-object-block select option').each(function (indx, optionelem) {
         var optgrpclass=$(optionelem).parent().attr('class');
        if(!isNullOrEmpty(optgrpclass) && optgrpclass=='LookupOption')
         {
          $(optionelem).removeAttr('disabled', 'disabled');
           $(optionelem).removeClass('display-none');
        }
      });
       
      $('.select-secondary-element-wrapper .secondary-object-block select').each(function (selindx, selectElement) {
      $(selectElement).find('optgroup').each(function (index, optgroup) {
        var optgrpclass=$(optgroup).attr('class');
         if(!isNullOrEmpty(optgrpclass) && optgrpclass=='LookupOption')
         {
        $(optgroup).find('option').each(function (indx, optionelem) {
console.log(' item found in array '+$.inArray($(optionelem).val(), lookupSelected))
            if(!$(optionelem).is(':selected') && $.inArray($(optionelem).val(), lookupSelected)>=0) {
                 
                 
                    $(optionelem).attr('disabled', 'disabled');
                       $(optionelem).addClass('display-none');
                    
            }
            else{
             // $(optionelem).removeAttr('disabled', 'disabled');
                      // $(optionelem).removeClass('display-none');
            }
        });
        }
    });
      
      });
    }
    function deleteRelatedObject(elemSource){
       var parentObjectElemDiv=$(elemSource).parents('.secondary-object-block');
       var relindx=$(parentObjectElemDiv).find('select.select-secondary-element').attr('data-rel-index');
       
       var relcount=1;
       $('.select-secondary-element-wrapper .secondary-object-block').each(function (indx,selectElemParentDiv) {
        var nextcount=relcount;
        nextcount++;
        var currentclass="select-related-"+relcount;
        var nextclass="select-related-"+nextcount;
        if($(selectElemParentDiv).find('select.select-secondary-element').hasClass(nextclass)){
            $(selectElemParentDiv).find('select.select-secondary-element').removeClass(nextclass);
            $(selectElemParentDiv).find('div.select2-container.select-secondary-element').removeClass(nextclass);
        }
        else if($(selectElemParentDiv).find('select.select-secondary-element').hasClass(currentclass)){
         $(selectElemParentDiv).find('select.select-secondary-element').removeClass(currentclass);   
         $(selectElemParentDiv).find('div.select2-container.select-secondary-element').removeClass(currentclass);  
        }
        
        $(selectElemParentDiv).find('select.select-secondary-element').attr('data-rel-index','0');
        relcount++;
       });
        $(parentObjectElemDiv).remove();
        var relcount=1;
        $('.select-secondary-element-wrapper .secondary-object-block').each(function (indx,selectElemParentDiv) {
         var currentclass="select-related-"+relcount;
        $(selectElemParentDiv).find('select.select-secondary-element').addClass(currentclass);
        $(selectElemParentDiv).find('div.select2-container.select-secondary-element').addClass(currentclass);
        $(selectElemParentDiv).find('select.select-secondary-element').attr('data-rel-index',relcount);
        relcount++;
       });
        updateRelatedSelectElements();
        if($('.select-secondary-element-wrapper').find('.secondary-object-block').length<maxRelatedObject)
        {
            $('.select-secondary-element-wrapper').find('div.scroll-parent.add-related-obj').show();
        }
    }
    function OnChangeRelObject(elemSource)
    {
      updateRelatedSelectElements();
      trackObjectSelected(elemSource.value, 'Related');
    }
    function updateRelatedSelectElements()
{
    $('.secondary-object-block .select2-container.select-secondary-element').each(function(indx,select2Elem){
        /*remove all classes starts with color-tag*/
        $(select2Elem).removeClass (function (index, css) {
            return (css.match (/(^|\s)color-tag-\S+/g) || []).join(' ');
        });
    });
    
      
    var childCount=1;   
     
    $('.select2-container.select-secondary-element a').find( ".branchImage" ).remove();;
    $('.secondary-object-block .scroll-parent').each(function (indx, selectElemParent) {
        var fistListVal = $(selectElemParent).find('select.select-secondary-element').val();
        var groupLabel = $(selectElemParent).find("select.select-secondary-element option[value='" + fistListVal + "']").parent().attr('label');
        var containerHtml = '';
        if (groupLabel == "Child Objects") {
            //containerHtml = '<img class="branchImage" src="' + urlResAlpha + colorTagArray[countChild] + '.png" />';
           containerHtml = '<img class="branchImage" src="'+ffcommonResuorceUrl+'/iconalpha/'+colorTagArray[childCount]+'.png" />';
            childCount += 1;
        }
        $(selectElemParent).find('.select2-container.select-secondary-element a').append(containerHtml);

    });
 disableSelectLookupOption();
}
function getRelatedObjSelectOptionHTML(selectOptionData){
        var htmlForSelect='';
                    console.log(' Fill select ');
                        var countObj=0;
                         
                        $.each(selectOptionData,function(indx,optionElem) {  
                                countObj++;
                                if(optionElem.FFText == '----Select Child Object----'){
                                        return false;
                                }  
                        });
                        var idx=0,newHtml='',newHtmlgrp='';
                        var sec=0;
                          $.each(selectOptionData,function(indx,optionElem) {  
                                idx++;
                                if(countObj > idx){
                                    // console.log(' here in if  lookup select val -' + $(this).val());
                                        if(idx != 1){
                                              newHtml += '<option name="lookup" value="' + extraSpaceSafe(optionElem.FFValue) + '">' + extraSpaceSafe(optionElem.FFText) + ' </option>';
                                        }
                                         
                                }
                                else{ 
                            //  console.log(' here in if  detail select val -' + $(this).val());
                                        sec++;
                                        if(sec != 1){
                                                newHtmlgrp += '<option class="childoption2" name="detail" value="' + optionElem.FFValue + '">' + optionElem.FFText + ' </option>';
                                        }
                                     
                                }
                        });
                             
                        htmlForSelect+='<option value="">----Select Object----</option>';
                        htmlForSelect+='<optgroup class="LookupOption" label="Lookup Objects" >' + newHtml + '</optgroup>' ;
                        htmlForSelect+='<optgroup class="ChildOption" label="Child Objects" >' + newHtmlgrp + '</optgroup>' ;
                        
                                
                     return htmlForSelect;    
                                
                }
                function extraSpaceSafe(elemValue)
                {
                    if(elemValue!==undefined && elemValue!=null && elemValue!='')
                    {
                        elemValue=elemValue.replace('  (',' (');
                    }
                    return elemValue;
                }
                function remoteGetRelatedObjectsJS(primaryobjectname,selectElemSource) {
                /*JAVASCRIPT Remoting Method to populate Email draft configuration xml */
                 console.log(' Call to remoteGetRelatedObjectsJS- primary object name: '+primaryobjectname);
                Visualforce.remoting.Manager.invokeAction(
                        '{!URLENCODE($RemoteAction.CKEditorNewFormMultiController.remoteGetRelatedObjects)}',
                        primaryobjectname,
                        function(result, event) {
                              if (event.status) {
                                  
                                  
                                  if (result != null && result.length > 0) {
                                    console.log(' remoteGetRelatedObjectsJS result HTML-' + result);
                                      for (i = 0; i < result.length; i++) {
                                          console.log(' Output -'+i+' -- '+ result[i]);   

                                      }
                                      var selectHTML =getRelatedObjSelectOptionHTML(result);
                                      toggleLoadingOnAddRelatedObj(false);
                                      populateRelatedObject(selectElemSource,selectHTML);

                                       
                                  } else {
                                       console.log('No account information found');
                                       toggleLoadingOnAddRelatedObj(false);
                                  }

                              } else if (event.type === 'exception') {
                                  //console.log(" Exception while getting available theme list- " + event.message + "<br/>\n<pre>" + event.where + "</pre>");
                              } else {
                                  //console.log(" unknown Exception while getting available themes- " + event.message);
                              }
                          },
                        {
                                escape: true
                        }
                );
        }

        function trackObjectSelected(objName,objType)
        {
          var metadata = {
            object_name: objName
          };          
          Intercom('trackEvent', 'selected-' + objType + '-object', metadata);          
        }
</script>
<apex:outputPanel id="newForm" styleClass="newForm" layout="block" >
<div class="container">
<apex:actionFunction immediate="true" name="saveForm" action="{!saveForm}" reRender="pg" status="status">
            <apex:param name="sForm" value="" assignTo="{!formName}" />
            <apex:param name="sObj" value="" assignTo="{!sobjectName}" />
             <apex:param name="relatedObjsXml" value="relatedObjsXml"  />
            <apex:param name="hiddenObject" value="" assignTo="{!hiddenSelectedObjects}" />
</apex:actionFunction>
 
  
<center>

<div class="new-form-block-wrapper" id="newForm">
 
<apex:outputPanel styleClass="new-form-block" layout="block"  >
<table >
 
     <tr>
        <td class="firstTd">        
            
              <div class="firstBlock">  <label style="display: block;padding-left:5px;font-family: 'Open Sans','sans-serif';">Form Name</label></div>
             <div class="requiredInput">   <div class="requiredBlock"></div>
                <apex:inputText value="{!formName}" onkeyup="checkFormName(this);" onblur="goToNextTourStop();" styleClass="formName" id="formName"/>
            </div>
        </td>
        <td class="midTd">
        <div class="firstBlock"> <label style="padding-left:5px;font-family: 'Open Sans','sans-serif';float: left;">Primary Object</label>
        <div >
        <a class="help blue-tooltip" href="#" tabindex="-1">

<span class="blue-tooltip-text -ml65 -mt85"> Your primary object is the main object you want to capture for your form. Once you select a primary object, you can choose other objects related to it. </span></a>
        </div> </div>
        
             <div class="scroll-parent">
                <select class="drop-select" id="mergeTypeSelect" onchange="mixpanel.track('First object selected', {'Object':this.value});trackObjectSelected(this.value, 'Primary');OnChangePrimary(this);">
                    <apex:repeat value="{!SobjectList}" var="modalList"> 
                        <apex:repeat value="{!modalList}" var="modal">           
                            <option value="{!modal.value}">{!modal.label}</option>
                        </apex:repeat>
                    </apex:repeat>
                </select>             
             </div>
             <br/>
               <div class="select-secondary-element-wrapper" style="display:none">
               <div class="scroll-parent add-related-obj" >
                                                                        <div class="add-related-item"   onclick="addRelatedObject(this);return false;"  >+ Add Related Object </div> 

                                                                        </div>
                   <div class="load-status-small"  style="display:none;margin:5px 30px;" >
                   <div class="dialogSmall"></div> 
                   </div>
               </div>

        </td>        
        <td class="bodr"><!--<br/>-->
        <div style="padding-top: 30px;min-height:90px;"><a href="javascript:void(0);" class="button newBtn" id="createBtn" onClick="callSaveForm();return false;">Create</a></div></td>
    </tr>    
</table>
</apex:outputPanel>
</div>

</center>
</div>
 
<div id="relatedSelObjWrapperTEMP" style="display:none">
                           <div        class="secondary-object-block" >
                        <div class="scroll-parent" >
                        <select data-selected="" data-rel-index="0"  class="select-secondary-element select-related-" onchange="OnChangeRelObject(this);"  > 

                        </select>
                         </div>
                         <div class="delete-object-box">
                          <a class="fffe-actions rel-object-delete"  onclick="deleteRelatedObject(this);return false;"></a> 
                           </div>
                           </div> 
                </div>

</apex:outputPanel>

</apex:component>