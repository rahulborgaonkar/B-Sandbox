<apex:page standardController="VisualAntidote__Previous_Form__c" extensions="VisualAntidote.FormEditorController" id="pg" title="Fast Forms" sidebar="false" tabStyle="FastForms__tab">  

 <head>
 <!-- Pure Chat Snippet no change -->
<script type='text/javascript'>
(function () { var done = false; var script = document.createElement('script'); script.async = true; script.type = 'text/javascript'; script.src = 'https://app.purechat.com/VisitorWidget/WidgetScript'; document.getElementsByTagName('HEAD').item(0).appendChild(script); script.onreadystatechange = script.onload = function (e) { if (!done && (!this.readyState || this.readyState == 'loaded' || this.readyState == 'complete')) { var w = new PCWidget({ c: '25d09910-b904-4399-b5f3-988100ad71bf', f: true }); done = true; } }; })();
</script>
<!-- End Pure Chat Snippet -->
 
     <meta http-equiv="X-UA-Compatible" content="IE=edge;" />     
     
      <link rel="stylesheet" href="{!URLFOR($Resource.ffcommon,'ffcommon.css')}" />  
      <link rel="stylesheet" href="{!URLFOR($Resource.formcss)}" /> 
    <link rel="stylesheet" href="{!URLFOR($Resource.jScroll,'css/jquery.jscrollpane.css')}" />     
     <link rel="stylesheet" href="{!URLFOR($Resource.sortable,'sortable/jquery-ui.css')}" />    
     <link rel="stylesheet" href="{!URLFOR($Resource.jquery_dialog,'jquery_dialog/jquery-ui.css')}"/>
     <link href="//www.google.com/fonts#UsePlace:use/Collection:Open+Sans" rel="stylesheet" type="text/css"/>
     <link rel="stylesheet" href="{!URLFOR($Resource.jScroll,'css/customSelectBox.css')}" />
     
     
 
     <script src="{!URLFOR($Resource.jScroll,'js/jquery.mousewheel.js')}"></script>       
     <script src="{!URLFOR($Resource.sortable,'sortable/jquery-ui.js')}"></script> 
      
     <apex:includeScript value="//code.jquery.com/jquery-1.10.2.min.js" /> 
     <apex:includeScript value="//maxcdn.bootstrapcdn.com/bootstrap/3.2.0/js/bootstrap.min.js" />
 
  
    
  
      
     <script src="{!URLFOR($Resource.sticky,'jquery.stickit.js')}"></script>
     <script src="{!URLFOR($Resource.jquery_dialog,'jquery_dialog/jquery-ui.js')}"></script>     
     <script src="{!URLFOR($Resource.Clipboard,'ZeroClipboard.js')}"></script>

       <link rel="stylesheet" href="{!URLFOR($Resource.foundation,'css/foundation.css')}" />     
    <script src="{!URLFOR($Resource.foundation,'js/foundation.min.js')}"></script>
    <script src="{!URLFOR($Resource.foundation,'js/foundation/foundation.joyride.js')}"></script>
     
    
      <script src="//cdnjs.cloudflare.com/ajax/libs/jquery-ui-timepicker-addon/1.4.5/jquery-ui-timepicker-addon.js"></script>
   
   <script src="//cdnjs.cloudflare.com/ajax/libs/jquery-ui-timepicker-addon/1.4.5/jquery-ui-sliderAccess.js"></script>
    
   
      <link href="//cdnjs.cloudflare.com/ajax/libs/jquery-ui-timepicker-addon/1.4.5/jquery-ui-timepicker-addon.css" rel="stylesheet">  </link>
    
     <script src="{!URLFOR($Resource.ruleEditorComponentJs)}"></script>
    <style>
 
.bootstrap-datetimepicker-widget>ul {

    padding-left: 0px !important;
}

.bootstrap-datetimepicker-widget .collapse .datepicker,
.bootstrap-datetimepicker-widget .collapse .timepicker{
display:none;
}
.bootstrap-datetimepicker-widget .collapse.in .datepicker,
.bootstrap-datetimepicker-widget .collapse.in .timepicker{
display:block;
}
.bootstrap-datetimepicker-widget .picker-switch .glyphicon
{
     display:block;
    width:20px;
    height:20px;
    background-image:url("{!URLFOR($Resource.ffcommon,'icon_freshereditor/glyphicons-halflings.png')}");
    margin: 0px auto;
   background-repeat: no-repeat;
}
.bootstrap-datetimepicker-widget .picker-switch .glyphicon-time 
{
   
  background-position: -48px -22px;
  
}
.bootstrap-datetimepicker-widget .picker-switch .glyphicon-calendar
{
    
  background-position: -192px -120px;
}
.bootstrap-datetimepicker-widget .timepicker .glyphicon-chevron-down{
    background-image:url("{!URLFOR($Resource.ffcommon,'icon_freshereditor/glyphicons-halflings.png')}");
    background-repeat: no-repeat;
background-position: -314px -120px;
}
   .bootstrap-datetimepicker-widget .timepicker .glyphicon-chevron-up{
    background-image:url("{!URLFOR($Resource.ffcommon,'icon_freshereditor/glyphicons-halflings.png')}");
    background-position: -288px -120px;
    background-repeat: no-repeat;
}
.bootstrap-datetimepicker-widget .timepicker td span{
    width: 14px;
  height: 14px;
}
.bootstrap-datetimepicker-widget .timepicker td {
    line-height: 14px;
}
.action-icons-right {
float:right;
margin-top:3px;
}
.action-icons-left{
float:left;
margin-top:5px;
margin-left:15px;
margin-right:10px;
width: 72%;
}

/*icon css*/
.action-icon{
width: 26px;
height: 24px;
margin-right: 15px;
float: left;
display: inline-block;
margin-top: 4px;
}
.action-icon.close-icon{
margin-right: 7px;
}

/**/
 

/* Wizard and bread crumb css*/

ul.nav-wizard {
    position: relative;
    overflow: hidden;
    margin:0px;
    padding-top:15px;
    padding-left:0px;
}
 

ul.nav-wizard li {
    position: relative;
    float: left;
    display: inline-block;
    text-align: middle;
    padding: 6px 20px;
    margin: 0;
    font-size: 20px;
    background:#f1f6f8;
    color: rgba(5,
    41,
    66,
    0.5);
    min-width:165px;
}
ul.nav-wizard li a {
    text-decoration:none !important;
    padding: 0px 0px 0px 20px;
    color: rgba(5,41,66,0.5);
font-weight: bold;
}
ul.nav-wizard li:hover {
    background:#e5edf0;
}
ul.nav-wizard li:before {
    position: absolute;
    display: block;
    border: 20px solid transparent;
    border-left: 20px solid #f1f6f8;
    border-right: 0;
    top: 0px;
    z-index: 10;
    content: '';
    right: -19px;
}
ul.nav-wizard li:after {
    position: absolute;
    display: block;
    border: 20px solid transparent;
    border-left: 20px solid #f1f6f8;
    border-right: 0;
    top: 0px;
    z-index: 10;
    content: '';
    right: -19px;
}
ul.nav-wizard li.active {
    background:#cfdde6;
    color:#052942;
}
ul.nav-wizard li.active:after {
    border-left: 20px solid #cfdde6;
}
ul.nav-wizard li.active a,
ul.nav-wizard li.active a:active,
ul.nav-wizard li.active a:visited,
ul.nav-wizard li.active a:focus {
    background:#cfdde6;
    color:#052942;
}
ul.nav-wizard .active ~ li:after {
    border-left: 20px solid #f1f6f8;
}
ul.nav-wizard li:hover:before,
ul.nav-wizard li:hover:after {
    border-left-color:#e5edf0;
}
ul.nav-wizard li.active:hover:before,
ul.nav-wizard li.active:hover:after {
    border-left-color: #cfdde6;
}
 

/**/

.mt30 {
    margin-top:30px;
}
.mb50 {
    margin-bottom:50px;
}
.debug-box {
    display: block;
    clear: left;
    overflow: hidden;
    padding: 5px;
    border: 1px solid silver;
    margin-bottom: 21px;
}
.cursorpointer{
cursor:pointer;
}
    
    
   
   .outerNoSidebar .noSidebarCell{
   padding:0px;
   }
   
   .form-information-wrapper-outer
{
 margin: 50px auto 20px auto;
width: 940px;
overflow: hidden;
display: block;
background-color: white;
border-radius: 5px;
box-shadow: 0 4px 6px rgba(8,52,80,.15);
border: 1px solid #E0E0E0;
}
.form-information-wrapper{
width: 940px;
overflow: hidden;
display: block;
background-color: white;
}
   .form-information{
   width: 58%;
float: left;
min-height:80px;
padding: 10px 20px 0px 15px;
display:block;


   }
   .grey-left-border10 {
   border-left:5px solid #e6ecef;
   min-height:10px;
   display:block;
   }
   .form-information h1{
   font-size:26px;
   color:#052942;
   font-family: 'Open Sans'; 
   }
   .form-information h4{
   font-size:14px;
   display: block;
color: #616161;
margin-top: 10px;
   font-weight:200;
   font-family: 'Open Sans'; 
    
   }
   .form-actions{
 float: right;
background-color:#e6ecef;
border-bottom-left-radius: 5px;
 width:100%;
height: 40px;

   }
   .form-settings-wrapper {
   float: right;
  clear: both;
margin-top: -15px;
padding-right: 15px;
margin-bottom: 10px;
 border-radius:6px;
   }
   .form-editor-title-box{
    min-width:42%;
float: right;
   }
   /* blue tooltip css*/
a.blue-tooltip,span.blue-tooltip {
outline:none;

     }
 
a.blue-tooltip:hover {text-decoration:none;} 
a.blue-tooltip span.blue-tooltip-text,
span.blue-tooltip  span.blue-tooltip-text{
    z-index:10;display:none; padding:4px 6px;
    margin-top:-20px; margin-left:-12px;
    max-width:150px;  
    font-size:10px;
    line-hight:12px;
    -webkit-transition:all 0.5s ease; /* For Safari 3.1 to 6.0 */
   transition: all 0.5s ease;
}
a.blue-tooltip span.blue-tooltip-text.-mt40,
span.blue-tooltip  span.blue-tooltip-text.-mt40{
 margin-top:-40px;  
}
a.blue-tooltip span.blue-tooltip-text.-ml40,
 span.blue-tooltip  span.blue-tooltip-text.-ml40
{
  margin-left:-40px;
}
a.blue-tooltip:hover span.blue-tooltip-text,
span.blue-tooltip:hover  span.blue-tooltip-text{
    display:inline; position:absolute; color:#fff;
    border-radius: 8px;
background-color: #052942;
}
.callout {z-index:20;position:absolute;top:0px;border:0;left:-12px;}
    
/*CSS3 extras*/
a.blue-tooltip span.blue-tooltip-text,
span.blue-tooltip  span.blue-tooltip-text
{
    border-radius:8px;
   
}

/**/

   /* bread crumb css*/
.bread-crumb ul.nav-wizard li{
line-height:28px;
font-family: 'Open Sans'; 
}
.bread-crumb ul.nav-wizard li{
background-color:#e5edf0;
text-align:center;
font-weight:bold;
}
.bread-crumb ul.nav-wizard li:before, .bread-crumb ul.nav-wizard li:after{
  border-left-color:#e5edf0;
}
.bread-crumb ul.nav-wizard li.active:before,
.bread-crumb ul.nav-wizard li.active:after,
.bread-crumb ul.nav-wizard li.active:hover:before,
.bread-crumb ul.nav-wizard li.active:hover:after {
border-left-color: #cfdde6;
}
.bread-crumb ul.nav-wizard li.active {
background: #cfdde6;
 
}

.bread-crumb ul.nav-wizard li:hover:before,
.bread-crumb ul.nav-wizard li:hover:after{
border-left-color: #d9e4e9;
}
 
.bread-crumb ul.nav-wizard .li-arrow-seperator{
min-width:1px;
}
.bread-crumb ul.nav-wizard .li-arrow-seperator+li{
margin-left:-40px;
}
.bread-crumb ul.nav-wizard li.li-arrow-seperator:before, .bread-crumb ul.nav-wizard li.li-arrow-seperator:after{
 border: 20px solid transparent;
border-left: 20px solid #c8d8e2;
border-right: 0;
top: 0px;
z-index: 9;
content: '';
right: 19px;
}
.bread-crumb ul.nav-wizard li a {
color:rgba(5,41,66,0.5);
font-weight:600;
text-align:center;
}
.bread-crumb ul.nav-wizard li.active a {
color:#cfdde6;
}
.bread-crumb ul.nav-wizard li:hover{
background-color:#d9e4e9;
}
.bread-crumb ul.nav-wizard li.active:hover{
background-color:#cfdde6;
}

.bread-crumb.navbar{
left: 0px;
position: absolute;
min-width: 600px;
margin-top:-10px;
}
/**/

/**/
.help-text-r{
position: absolute;
top: 0px;
display: block;
width: 45px;
height: 131px;
right: 0px;
background: #dcecf5;
}
.help-text-r a{
  margin-top: 48px;
/* text-align: center; */
margin-left: 12px;
display: inline-block;
    
}
    
    .button-draft{
    font-family: 'Open Sans';
    font-size: 14px;
font-weight: 600;
color: #33aefd;
background-color: #ffffff;
border-radius:15px;
text-decoration :none;
padding: 4px 8px 4px 15px;
-moz-box-shadow:0 0 1px 1px rgba(221, 221, 221, 0.30);
        -webkit-box-shadow: 0 0 1px 1px rgba(221, 221, 221, 0.30);
        box-shadow: 0 0 1px 1px rgba(221, 221, 221, 0.30);
     border:3px solid #e6ecef;
}

    .button-draft:hover {
  
color: #ffffff;
background-color: #139be1;
 
 
    }
   
    .action-icons-left .vabutton1{
    float:right;
    }
    .button-draft.draft-event.draft-saving,
    .button-draft.draft-event.draft-saved{
    color:grey; 
    margin-left: 10px;
margin-right: 10px;
font-size: 12px;
display: inline-block;
padding: 3px 12px 3px 12px
    }
    .button-draft.draft-event 
     {
    vertical-align: top;
    line-height:18px;
    }
    .button-draft.draft-event.draft-saving:hover,
    .button-draft.draft-event.draft-saved:hover{
    color: #grey;
background-color: #ffffff;
}
    .italic-text{
    font-style:italic;
     
    }
    
     .marginLRauto{
     margin-left:auto;
     margin-right:auto;
     }
     .text-align-center{
     text-align:center;
     }
     .display-inline-block{
     display:inline-block;
     }
     .mt20{
     margin-top:20px;
     }
     .mb20{
     margin-bottom:20px;
     }
     .ml50{
     margin-left:50px;
     }
     .w500 {
     width:500px;
     }
     .vff-success {
     padding: 10px;
    min-width:542px;
    max-width:850px;
    border-radius: 25px;
    height:50px;
    display:inline-block;
    background-color: #ffffff;
    text-align: center;
     
    margin: 5px auto;
    -webkit-box-shadow: -1px 2px 3px 1px rgba(4,4,4,.1);
           -moz-box-shadow:-1px 2px 3px 1px rgba(4,4,4,.1);
    box-shadow: -1px 2px 3px 1px rgba(4,4,4,.1);
    
     
    }
     .vff-success-msg{
      font-family:'Open Sans';
 font-size:14px;
 font-weight:600;
 color: #052942;
     }
     .vff-alert {
     padding: 10px;
    min-width:542px;
    max-width:850px;
    border-radius: 25px;
    height:50px;
    background-color: #d55555;
    text-align: center;
     
    margin: 5px auto;
    -webkit-box-shadow: 0 4px 6px rgba(8,52,80,.15);
           -moz-box-shadow: 0 4px 6px rgba(8,52,80,.15);
    box-shadow: 0 4px 6px rgba(8,52,80,.15);
    }
     .vff-alert-msg{
      font-family:'Open Sans';
 font-size:14px;
 color: #ffffff;
     }
     .publish-link-btn {
     z-index:100;
     }
     .ohidden {
overflow: hidden;
display: block;
}
/*css for disabled elements*/
.va-disabled {
 
pointer-events: none;
 
background: none repeat scroll 0 0 #cecece !important;
 border-color:#cecece !important;
color: #FFFFFF;
 text-decoration: none;
 
 
}
.va-disabled-items .button-draft ,
.va-disabled-items .vabutton1,
 .va-disabled-items .preview-icon,
  .va-disabled-items .close-icon,
.va-disabled-items .vabutton2 {
pointer-events: none;
  
 
}
.va-disabled-items .button-draft {
color:#cecece !important;
}
.va-disabled-items .vabutton1 {
background-color:#cecece !important;
border-color:#cecece !important;
}
.va-disabled-items .vabutton2 {
color:#cecece !important;
border-color:#cecece !important;
}
.va-disabled-items .vabutton2 .btnIcon{
background-position: -458px -1px;
}
 .va-disabled-items .preview-icon{
  background-position:-277px -71px;
 }
 .va-disabled-items .close-icon{
 
 background-position:-277px -180px;
 
}
.pt50 {
    padding-top:50px;
}
.form-setting-wrapper{
display:block;
width:100%;
 
overflow: hidden;
background: #e6ecef;
}
.form-row-group {
    margin:0px 120px;
    display:block;
    overflow:hidden;
}
.form-row-group .form-row {
    width:100%;
    display:block;
    overflow:hidden;
    padding-bottom:20px;
}
.form-row-group .label-for {
    float:left;
    display:inline-block;
    min-width:120px;
    color:#616161;
    font-size:14px;
    clear:left;
    margin-top:8px;
}
.form-row-group .col-label{
float:left;
width:190px;
font-weight:500;
font-family:'Open Sans';
}
.form-row-group .col-inputs{
float:left;

}
.silver-line-separator {
    border-top: 1px solid #a6a6a6;
    display: block;
    width: 90%;
    height: 2px;
    margin-top: 10px;
    margin-bottom: 30px;
    margin-left:auto;
    margin-right:auto;
    clear: both;
}

/* bootstrap tabs in form setting*/
.form-setting-wrapper .form-row-group .col-inputs{
margin-top:5px;

}
.form-setting-wrapper .vertical-tab-content.tab-content>.tab-pane {
        display: none;
        visibility: hidden;
    }
   .form-setting-wrapper  .vertical-tab-content.tab-content>.active {
        display: block;
        visibility: visible;
        margin-left:35px;
    }
    
    .nav {
        padding-left: 0;
        margin-bottom: 0;
        list-style: none;
    }
    .form-setting-wrapper .nav:before,
    .form-setting-wrapper .nav:after {
        display: table;
        content: " ";
        clear: both;
    }
    .form-setting-wrapper .vertical-tabs>li>a {
        color: #616161;
        font-size: 14px;
        font-family: 'Open Sans';
    }
    .form-setting-wrapper .vertical-tabs>li {
        display: block;
        margin-bottom: 15px;
        margin-left: 0px;
    }
    .form-setting-wrapper .vertical-tabs>li>a {
        text-decoration: none !important;
    }
    .form-setting-wrapper .vertical-tabs>li>a:hover {} .vertical-tabs>li.active>a,
    .form-setting-wrapper .vertical-tabs>li.active>a:hover,
    .form-setting-wrapper .vertical-tabs>li.active>a:focus {
        color: #555;
        cursor: default;
    }
/**/
 /* field info tooltip*/
 .sfff-field-info {
 float:left;
 margin-right:-18px;
 }
 span.field-info-icon {
 
     width: 18px;
  text-align: center;
  height: 18px;
  font-size: 11px;
  font-weight: 600;
  display: inline-block;
  float: left;
  background-color: rgba(5,41,66,.1);
  border: 1px solid rgba(5,41,66,.2);
  color: #33aefd;
  border-radius: 9px;
  margin-top: 9px;
}
a.field-info-tooltip,span.field-info-tooltip {
outline:none;

     }
 
a.field-info-tooltip:hover {text-decoration:none;} 
a.field-info-tooltip span.field-info-tooltip-text,
span.field-info-tooltip  span.field-info-tooltip-text{
    z-index:10;display:none; 
    padding: 5px 11px;
  margin-top: 0px;
  margin-left: 10px;
  width: 433px;
  font-size: 11px;
  font-weight: 300;
  -webkit-transition: all 0.5s ease;
  transition: all 0.5s ease;
  background-color: #C4D5E0;
}
 

a.field-info-tooltip:hover span.field-info-tooltip-text,
span.field-info-tooltip:hover  span.field-info-tooltip-text{
    display:inline; position:absolute; color:#052942;
  
}
 
.callout {z-index:20;position:absolute;top:0px;border:0;left:-12px;}
    

a.field-info-tooltip span.field-info-tooltip-text,
span.field-info-tooltip  span.field-info-tooltip-text
{
    border-radius:5px;
   
}
span.field-info-tooltip-text-inner {
paddiing-left:0px;
list-style-type:none;
}
span.field-info-tooltip-text-inner>span{
display: inline-block;
  float: left;
  margin-right: 22px;
  padding-top:5px;
  padding-bottom:5px;
  font-weight: 600;
  font-style: italic;
}
span.field-info-tooltip-text-inner span.fi-letter-icon{
height: 18px;
  width: 18px;
  background-color: #ffffff;
  text-align: center;
  border-radius: 50%;
  font-family: 'Open Sans';
  display: inline-block;
  font-size: 12px;
  margin-right: 5px;
  margin-top: 0px;
  font-weight: 600;
  font-style: normal;
  color: #052942;
}
 /**/
 .field-tooltip-block {
   margin-top: 28px;
  max-width: 500px;
  display:block;
  margin-left: auto;
  margin-right: auto;
  }
 .field-tooltip-block span.field-info-tooltip-text{
    z-index:10;
    display:inline-block; 
    padding: 5px 11px;
  margin-top: 0px;
  margin-left: 10px;
  width: 433px;
  font-size: 11px;
  font-weight: 300;
  -webkit-transition: all 0.5s ease;
  transition: all 0.5s ease;
  background-color: #C4D5E0;
  border-radius: 5px;
}
.scroll-parent .select2-container .select2-choice{
    width:340px !important;
 }
 .ExpandDiv .field-tooltip-block {
 display:none !important; /*css for Field info popup to disable it for now*/
 }
  
 /*
 
 .formUlLabel .fieldLi label.ff-label{
 margin-left:18px;
 }
  
 .addObjName{
 margin-left:18px;
 } */

 .secondary-object-block{

    clear:left;
   
}
 .secondary-object-block {
    margin-top:10px;
 }
.object-select-elements-block .scroll-parent{
     margin-bottom:20px;
}
    </style>

    <script type='text/javascript'>

        window.setInterval(autosaveTriggered, 3000);    

var ruleObjectsData=[];
        var formRelatedObjectXML='';
        var mapLookup=new Object();
        var newWin=null;
        var togSet=false;
        var RunOnces=0;
        var isError=true;
        var idCounter=0;
        var RunTag=true;
        var sectionCounter =  0;
        var ruleCounter = 0;
         var footerBtnHTMLPopulated = false;
        var isChangeFieldCallFromReteriveHtml = false;
        var isRequiredRemoved = false;
        //var imgUrl = "{!URLFOR($Resource.iconImages,'Edit.png')}";
        var imgUrl = "{!URLFOR($Resource.alpha,'blank.png')}";
        //var deleteImgUrl = "{!URLFOR($Resource.iconImages,'Close.png')}";
        var deleteImgUrl = "{!URLFOR($Resource.alpha,'blank.png')}";
        var editActiveImgUrl  = "{!URLFOR($Resource.iconImages,'EditActive.png')}";
        //var editImgUrl  = "{!URLFOR($Resource.iconImages,'Edit.png')}";
        var editImgUrl  = "{!URLFOR($Resource.alpha,'blank.png')}";
        var isChangesMadeInForm = false;
        var isFirstTimeFormEdit = "false";
        var limitValue='';
        
        
        $(function() { 
           $(document).foundation();

           $( document ).foundation({ joyride : {         
              tip_animation : 'fade',
              tip_animation_fade_speed: 500,          
              modal:false,
              expose: false,
              next_button: true,
              prev_button: false,
              cookie_monster: true,
              cookie_name: 'fastforms-joyride',
              cookie_domain: false,
              cookie_expires: 365,
              post_ride_callback: function() {
                $(document).foundation('joyride', 'destroy');
              }                    
              }
           });

           $(document).foundation('joyride', 'start');
            
            scrollAvailableDiv();           
            isFirstTimeFormEdit = "{!isFirstTimeFormEdit}";
            //initialize clipborad
            var clip = new ZeroClipboard( 
                $('.code'), {
                    moviePath: "{!URLFOR($Resource.Clipboard,'ZeroClipboard.swf')}"
                });
            clip.addEventListener('complete',function(client,text) {
                $("#dialog-confirm").html("<div class='dialogHeader'><div class='dialogIcon dialogIconOK'>&nbsp;</div></div><div class='dialogFont'><div class='primary'>Your embed code was copied to the clipboard! </div><br /><div class='secondary'>Simply paste the code into your website using <b>Command+V</b> on Mac or <b>Ctrl+V</b> on Windows.</div></div>");
               
                // Define the Dialog and its properties.
                $("#dialog-confirm").dialog({
                    resizable: false,
                    modal: true,
                    title: "Close",
                    height: "auto",
                    width: 413,
                    buttons:{
                                "Close":{
                                click: function () {
                                    $(this).dialog('close');
                                   
                                    
                                },
                                text: 'Close',
                                'class': 'vabutton2'
                                } 
                            }
 
                });
            });          
               
            $(".selValue").val('{!form.FastFormID__c}');            
            //$(".selValue").change();
           // callRetrieveHtmlService();
            retrieveHtmlService();
            makeJqueryTooltip();
            
            $("#deleteTemplateLink").hide();
            // Bind required checkbox onchange event to show and hide error message textbox and clear that textbox value
            $( "#requiredChk" ).change(function() {
                if($(this).prop('checked')== true){
                    $( "#dialog" ).dialog({ height: 380});
                    $("#errMsgForRequiredField").show();
                    $("#lblErrMsgForRequiredField").show();
                }else{
                    $( "#dialog" ).dialog({ height: 350});
                    $("#errMsgForRequiredField").hide();
                    $("#lblErrMsgForRequiredField").hide();
                    $("#errMsgForRequiredField").val('');
                }
            });
            
            //Hide/Show Form Information Section
            $( "#showFormLink" ).hide();
            $( "#showRuleLink" ).hide();
            
            $( "#hideFormLink" ).bind( "click", function() {
                $("#formInformationTbl").hide();
                $(this).hide();
                $("#showFormLink").show();
            });
            
            $( "#showFormLink" ).bind( "click", function() {
                $("#formInformationTbl").show();
                $(this).hide();
                $("#hideFormLink").show();
              
            });
            
            //Scroll to Top
            // Show or hide the sticky footer button 
            $(window).scroll(function() {
                if ($(this).scrollTop() > 220) {
                    $('.go-top').fadeIn(500);
                } else {
                    $('.go-top').fadeOut(500);
                }
            });
            
            // Animate the scroll to top
            $('.go-top').click(function(event) {
                event.preventDefault();               
                $('html, body').animate({scrollTop: 0}, 500);
            })
            
            
            $(document).click(function(e) {
                if($('#customfltype').next().html() == "Please provide comma-separated extensions (e.g. .doc, .txt)" || e.target.id == "customfltype" || e.target.className == 'css-label' || e.target.className == 'fancyheader' || e.target.className == 'ExCol' || e.target.className == 'css-checkbox flChk' || e.target.className == 'fancydropdownbottom' || e.target.className == 'fancydropdown'){  

                }else{
                    $('.fancyheader').removeClass('addFancy');
                    $('.fancyheader').next().hide();
                    $('.fancyheader').next().next().hide();
                }
                
                
            });
            
            //Bind change event of submitBehaviorOptions Select list
            bindMsgAndLinkFoucusEvent();
            $( "#createNewRule" ).bind( "click", function() {
                $("#hiddenSelectedRuleId").val('');
                var allFieldsLabel = [];
                var allFieldsName = [];
                var counter = 0;
                if($(".formUlLabel").has('li').length){
                    $(".formUlLabel").find('li').each(function(){
                        $(this).find('div:first').each(function(){
                            allFieldsLabel[counter] = $(this).attr('lblname');
                            counter++;
                        });
                    });
                }
                counter =0; 
                if($(".formUlField").has('li').length){
                    $(".formUlField").find('li').each(function(){
                        $(this).find('div:first').each(function(){
                            allFieldsName[counter] = $(this).attr('id').replace('divField','');
                            counter++;
                        });
                    });
                }
                
                var i =0;
                $("#selectOptionsIfFields option").remove(); // removes all options from the select element w
                $("#selectOptionsThenFields option").remove();
                
                for(i=0;i<allFieldsLabel.length && i<allFieldsName.length;i++){
                     
                    $("#selectOptionsIfFields").append('<option value="'+allFieldsName[i]+'" >'+ allFieldsLabel[i]+'</option>');
                    $("#selectOptionsThenFields").append('<option value="'+allFieldsName[i]+'" >'+ allFieldsLabel[i]+'</option>');
                }
                $( '#rulesDialog' ).dialog( 'open' );
                 
            });
            
            
            
            // Sucess Dialog 
            $( "#dialogSucess" ).dialog({
                height: "auto",
                width: 413,
                modal: true,
                autoOpen: false
            });
             
            $( "#dialog" ).dialog({
                height: "auto",
                width: 413,
                modal: true,
                autoOpen: false
            });
              
            //Button Dialog
            $( "#buttonDialog" ).dialog({
                height: "auto",
                width: 413,
                modal: true,
                autoOpen: false
            });
              
            //Preview Dialog
            $('#preview').dialog({
                autoOpen: false,

                width: 520,
                modal: true,
                title:"Form Preview",
                open: function( event, ui ) {
                    $('.ui-dialog :button').blur();
                },
                close: function (event, ui) {
                    closePrivewDialog();
                }
            }); 
              
            $('.formName').parent().parent().hide();
            $('.objectType').parent().parent().hide();
            $('#saveFormBtn').parent().parent().hide();
            $('[id$="pb2"]').hide();
            makeParentFormSortable();
            makeFormSortable();
                            
            isChangesMadeInForm = false; 
                  
        });
        function resetSavedButton(){
            isChangesMadeInForm  = true;
            if($("#btnSaved").hasClass('editorButton') == false){
                $("#btnSaved").removeAttr('disabled');
                $("#btnSaved").text('Publish Draft');
                $("#btnSaved").removeClass('btnSaved').addClass('editorButton');
                $("#btnSaved").removeClass('btnGreenClick');
            } 
             
        }

        
        function isNumber(n){
            return (parseFloat(n) == n);
        }
        //Dropdown
        function fancydropdowntoggle(dv){
            $('#limitValue').focus();           
            var myRegExp = /\.[0-9a-z]+$/i;
            if($('#customfltype').val() == ""){
                $(dv).next().toggle();
                $(dv).next().next().toggle();
            }else{                    
                if(myRegExp.test($('#customfltype').val())){
                    $(dv).next().toggle();
                    $(dv).next().next().toggle(); 
                     //isChangesMadeInForm = true;    
                }else{
                    $('.ExCol').attr('src',"{!URLFOR($Resource.iconImages,'SelectArrowDown.png')}");
                    $("#customfltype").next().remove();
                    $("#selectedfiletypes").val('');
                    $("#customfltype").after('<span style="color:red;">Please provide comma-separated extensions (e.g. .doc, .txt)</span>');
                    $("#customfltype").css('border','1px solid red'); 
                    $("#customfltype").focus();              
                } 
            } 
            
            if($('.fancydropdown').css('display') != 'none'){
                $('.fancyheader').addClass('addFancy');
                $('.fancydropdown').addClass('addFancyTop');
                $('.fancydropdownbottom').addClass('addFancyBottom');
                $('.ExCol').attr('src',"{!URLFOR($Resource.iconImages,'SelectArrowUp.png')}");                      
            }else{
                $('.fancyheader').removeClass('addFancy');
                $('#trForFileField td').removeAttr('style');
                $('.fancyheader').attr('title',$("#selectedfiletypes").val());
                $('.ExCol').attr('src',"{!URLFOR($Resource.iconImages,'SelectArrowDown.png')}");
            } 
                        
            
            //Dropdown
            $(".flChk").click(function(){
                var ck = '';
                var totCheck = 0;
                var getCheck = 0;
                $(".flChk").each(function(){
                    totCheck +=1;                  
                    if($(this).is(":checked")){
                        ck +=$(this).val()+",";
                    }else{
                        getCheck +=1;
                    }
                });
                if($('#customfltype').val() == ""){
                    $("#selectedfiletypes").val(ck.slice(0, -1));
                    $('.fancyheader span').text(ck.slice(0, -1))
                }else{ 
                    ck += $("#customfltype").val();
                    $("#selectedfiletypes").val(ck);
                    $('.fancyheader span').text(ck)
                }
                if(totCheck  == getCheck){
                    $('.fancyheader span').text("All");
                    $("#customfltype").val('');                    
                } 
                addLabel();
                resetSavedButton();
                
            });
            $("#customfltype").bind("change",function(){
                
                $("#selectedfiletypes").val($(this).val());
                $("#customfltype").css('border','none');
                $("#customfltype").next().remove();                
                var ck = '';
                var isGet= false;
                $(".flChk").each(function(){
                    if($(this).is(":checked")){
                        ck +=$(this).val()+",";
                        isGet=true;
                    }   
                });
                if($('.fancyheader span').text() == ""){
                    $('.fancyheader span').text("All");
                }
                var myRegExp = /\.[0-9a-z]+$/i;
                if($('#customfltype').val() == ""){                 
                    $("#selectedfiletypes").val(ck.slice(0, -1));
                }else{
                    if(myRegExp.test($('#customfltype').val())){
                        ck += $("#customfltype").val()+',';                  
                        $("#selectedfiletypes").val(ck.slice(0, -1));
                        $('.fancyheader span').text($("#selectedfiletypes").val()); 
                        isError=true;      
                        addLabel();
                        resetSavedButton();
                    }else{
                        $("#selectedfiletypes").val('');
                        $("#customfltype").after('<span style="color:red;">Please provide comma-separated extensions (e.g. .doc, .txt)</span>');
                        $("#customfltype").css('border','1px solid red'); 
                        $("#customfltype").focus();
                        isError=false;               
                    } 
                }             
            });
            
        }  
        ///added to fix the issue:#33 'Fields scrolling to top' on nov 24 2014- by balinder
        function scrollAvailableDiv(){
            //// var nav = $('.OuterContainer');
            // nav.offset().top + nav.height()-70;
            var isFixed = false;
            var $w = $(window);
            var sMargin=false;
            $w.scroll(function() {

                var navHomeY =$('#headerPanel').position().top+$('#headerPanel').outerHeight(true)+184;
                      
                var scrollTop = $w.scrollTop();
                var atBottom = (scrollTop + $w.height() == $(document).height());
                if (!atBottom){
                var shouldBeFixed = scrollTop > navHomeY;            
                if (shouldBeFixed && !isFixed) {  
                ///$('#availableFieldBox').css({ 'left': $('#availableFieldBox').position().left+15});
                ///$('#generalFieldBox').css({ 'left': $('#availableFieldBox').position().left+15});
                    $('#availableFieldBox').css({ 'position': 'fixed', 'top':'0','margin-top':'5px'});                        
                    $('#generalFieldBox').css({ 'position': 'fixed', 'top':$('#availableFieldBox').height()});
                                            
                    
                    isFixed = true;
                }
                else if (!shouldBeFixed && isFixed)
                {
                    $('#availableFieldBox').css({ 'position': 'relative','top':0,'margin-top':'0px'});
                    $('#generalFieldBox').css({ 'position': 'relative','top':0 });
                   /// $('#availableFieldBox').css({ 'left': ''});
               /// $('#generalFieldBox').css({ 'left': ''});
                 
                    if(sMargin){
                        $('#labelAndFieldDiv').css({'margin-top':'0'});
                    }
                    isFixed = false;
                }
                }
           
            });
            
        }   
         
        
        
      
        function bindMsgAndLinkFoucusEvent(){
            //this for disable testbox for message in button area
          
        }
      
        //JQuery  Tootlip 
        function makeJqueryTooltip(){         
            $( ".tooltipFieldType" ).tooltip({
                show: {
                    effect: "slideDown",
                    delay: 250
                }
            });
         
        }
        function makeParentFormSortable(){
            $( "#parentUlForm" ).sortable({
                dropOnEmpty: true,
                revert : 300,
                items: '> li:not(.addNewSection,.Ulbtn)',
                cancel:"select,option,textarea,input,.isFieldEdit,.editDelDiv,.editImg, .deleteField",
                update: function(event, ui) {
                    resetSavedButton();
                    //Run this code whenever an item is dragged and dropped into this list                     
                    if(ui.item.hasClass("fieldLi") ){

                        $( this ).sortable("cancel");
                        ui.sender.sortable("cancel");
                    }else{
                        if(ui.item.has('input[type="button"]').length){
                            ui.item.children().addClass( "sectionHeader");
                        }else{
                            ui.item.children().addClass( "sectionHeader");
                            $( "#parentUlForm li" ).removeClass('ui-state-default');
                        }
                    }
                   
                },
                activate: function( event, ui ) { 
                    ui.item.addClass('grabCursor');
                },
                deactivate: function( event, ui ) {
                    ui.item.removeClass('grabCursor');
                }
                
            });
            
            
        }
         /*updated this method on dec 10 2014*/
       function makeFormSortable() {
    $(".formUlLabel").sortable({
        items: "> li:not(.sectionDisabled)",
        connectWith: "#sortableForFields,#sortableForFieldsNew,#sortableForFieldsFourth,#sortableForFieldsThird,.formUlLabel",
        dropOnEmpty: true,
        zIndex: 9999,
        cancel: 'select,option,textarea,input,.isFieldEdit,.editDelDiv,.sectionDisabled',
        revert: 300,

        receive: function (ev, ui) {   
            goToNextTourStop();
        console.log('Recieving li item on sortable recieve event');     
            if (ui.item.hasClass("Ulbtn") || ui.item.hasClass("lbl") || ui.item.hasClass("sectionHeader")) {
                alert('Oops! Fields can only be added to sections. Please drop your field into an section or create a new section.');
                ui.sender.sortable("cancel");
            }
            //Run this code whenever an item is dragged and dropped into this list 
            if (ui.item.children().length > 1) {
                ui.item.find('div').show();
                ui.item.find('div:first').css('width', '40%');
                ui.item.removeClass('tooltip');
                $(".formUlLabel").children().removeClass('ui-state-default');
                ui.item.find('.deleteField').show();
                var dropLiId = ui.item.attr('id');
                ui.item.removeClass('ui-state-default');
                var str = ui.item.find('div').attr('id').replace('divLabel', '');
                str = str.substring(0, str.indexOf("."));
                ui.item.removeAttr('style');
                ui.item.unbind();
                var addObjName = '';
                //alert(ui.sender.attr("id"));
                if (ui.sender.attr("id") == 'sortableForFields') {
                    //addObjName = $('#sortableForFields li').attr('obj');
                    addObjName = $("#priName").text();
                    ui.item.find('label').after('<span class="listName" style="display:none">sortableForFields</span>');
                    ui.item.find('label').first().after('<br/><span class="addObjName"><i>From : ' + addObjName + '</i></span>');
                }
                if (ui.sender.attr("id") == 'sortableForFieldsNew') {
                    addObjName = $('#ListSecond').find('.objName').text().replace('Fields', 'Object');
                   
                    var txtImage = $("#ListSecond .objName").css('background-image');
                    var colorBar = '';
                    var lblName = ui.item.find('label').attr('id').replace('lbl', '');
                    if (txtImage != undefined && txtImage != 'none') {
                        if (txtImage.indexOf("A.png") >= 1) {
                            ui.item.addClass('A');
                          
                            
                            ui.item.find('label').attr('id', ui.item.find('label').attr('id') + 'A');
                            if (ui.item.find('input[type="textbox"]').attr('id') != undefined)
                                ui.item.find('input[type="textbox"]').attr('id', ui.item.find('input[type="textbox"]').attr('id') + 'A');
                            if (ui.item.find('input[type="select"]').attr('id') != undefined)
                                ui.item.find('input[type="select"]').attr('id', ui.item.find('input[type="select"]').attr('id') + 'A');
                            if (ui.item.find('textarea').attr('id') != undefined)
                                ui.item.find('textarea').attr('id', ui.item.find('textarea').attr('id') + 'A');
                            if (ui.item.find('select').attr('id') != undefined)
                                ui.item.find('select').attr('id', ui.item.find('select').attr('id') + 'A');
                            colorBar = 'A';
                        }
                    } else {
                        ui.item.removeClass('A');
                        var midName = '';
                        var str = ui.item.find('div').attr('id').replace('divLabel', '');
                        $("#sortableForFields").find('li').each(function () {
                            if ($("#ListSecond .objName").css('background-image') == 'none') {

                                if ($(this).attr("title") == "REFERENCE" && $('#ListSecond').css('display') != 'none' && $(this).find('div').attr('lblname') == $('#ListSecond').find('.objName').text().substring(0, $('#ListSecond').find('.objName').text().indexOf('(') - 1)) {
                                    midName = $(this).find('label').attr('id').replace('lbl', '');
                                }
                            }
                        });

                        var priObj = str.substring(0, str.indexOf('.') + 1);
                        var fldObj = str.substring(str.lastIndexOf('.'));
                        var inputIdStr = priObj + midName + fldObj;
                        //for change ID of TextBox;
                        if (ui.item.find('input[type="textbox"]').attr('id') != undefined) {
                            ui.item.find('input[type="textbox"]').attr('id', inputIdStr);
                            ui.item.find('input[type="textbox"]').attr('name', inputIdStr);
                        }
                        if (ui.item.find('input[type="select"]').attr('id') != undefined) {
                            ui.item.find('input[type="select"]').attr('id', inputIdStr);
                            ui.item.find('input[type="select"]').attr('name', inputIdStr);
                        }
                        if (ui.item.find('textarea').attr('id') != undefined) {
                            ui.item.find('textarea').attr('id', inputIdStr);
                            ui.item.find('textarea').attr('name', inputIdStr);
                        }
                        if (ui.item.find('select').attr('id') != undefined) {
                            ui.item.find('select').attr('id', inputIdStr);
                            ui.item.find('select').attr('name', inputIdStr);
                        }
                        //ui.item.attr('ondblclick', "openEditDialog('" + ui.item.attr('id') + "',true);");
                    }
                    ui.item.find('label').after('<span class="listName" style="display:none">sortableForFieldsNew ' + colorBar + '</span>');
                    ui.item.find('label').first().after('<br/><span class="addObjName"><i>From : ' + addObjName + '</i></span>');
                    ui.item.attr('id', ui.item.attr('id') + colorBar);
                    //ui.item.attr('ondblclick', "openEditDialog('" + ui.item.attr('id') + "',true);");
                    ui.item.find('.editImg').attr('onclick', "openEditDialog('" + ui.item.attr('id') + "',true);");
                    ui.item.find('.deleteField').attr('id', ui.item.attr('id'));

                    //Changes                           

                    ui.item.find('#isDefaultRequired' + lblName).attr('id', $('#isDefaultRequired' + lblName).attr('id') + colorBar);
                    ui.item.find('#isUserSelectedRequired' + lblName).attr('id', $('#isUserSelectedRequired' + lblName).attr('id') + colorBar);
                    ui.item.find('#errMsgForRequired' + lblName).attr('id', $('#errMsgForRequired' + lblName).attr('id') + colorBar);
                    ui.item.find('#defaultValue' + lblName).attr('id', $('#defaultValue' + lblName).attr('id') + colorBar);
                    ui.item.find('#hideField' + lblName).attr('id', $('#hideField' + lblName).attr('id') + colorBar);
                    ui.item.find('#isReadOnly' + lblName).attr('id', $('#isReadOnly' + lblName).attr('id') + colorBar);
                    ui.item.find('#upsertField' + lblName).attr('id', $('#upsertField' + lblName).attr('id') + colorBar);

                }
                if (ui.sender.attr("id") == 'sortableForFieldsThird') {
                    //set ID Header List
                    addObjName = $('#ListThird').find('.objName').text().replace('Fields', 'Object');
                    //addObjName = $('#ListThird').find('.objName').attr('id');
                    /*ui.item.find('label').after('<span class="listName" style="display:none">sortableForFieldsThird</span>');
                    ui.item.find('label').first().after('<br/><span class="addObjName"><i>From : '+addObjName+'</i></span>');*/
                    var txtImage = $("#ListThird .objName").css('background-image');
                    var lblName = ui.item.find('label').attr('id').replace('lbl', '');
                    var colorBar = '';
                    if (txtImage != undefined && txtImage != 'none') {
                        if (txtImage.indexOf("A.png") >= 1) {
                            ui.item.addClass('A');
                            /*ui.item.attr('ondblclick' , "openEditDialog('"+ (ui.item.attr('id')+'A') +"',true);");
                            ui.item.find('.editImg').attr('onclick' , "openEditDialog('"+ ui.item.attr('id')+"',true);");
                            ui.item.find('.deleteField').attr('id',ui.item.attr('id'));*/
                            ui.item.find('label').attr('id', ui.item.find('label').attr('id') + 'A');
                            if (ui.item.find('input[type="textbox"]').attr('id') != undefined)
                                ui.item.find('input[type="textbox"]').attr('id', ui.item.find('input[type="textbox"]').attr('id') + 'A');
                            if (ui.item.find('input[type="select"]').attr('id') != undefined)
                                ui.item.find('input[type="select"]').attr('id', ui.item.find('input[type="select"]').attr('id') + 'A');
                            if (ui.item.find('textarea').attr('id') != undefined)
                                ui.item.find('textarea').attr('id', ui.item.find('textarea').attr('id') + 'A');
                            if (ui.item.find('select').attr('id') != undefined)
                                ui.item.find('select').attr('id', ui.item.find('select').attr('id') + 'A');
                            colorBar = "A";
                        }
                        if (txtImage.indexOf("B.png") >= 1) {
                            ui.item.addClass('B');
                            /*ui.item.attr('ondblclick' , "openEditDialog('"+ (ui.item.attr('id')+'B') +"',true);");
                            ui.item.find('.editImg').attr('onclick' , "openEditDialog('"+ ui.item.attr('id')+"',true);");
                            ui.item.find('.deleteField').attr('id',ui.item.attr('id'));*/
                            ui.item.find('label').attr('id', ui.item.find('label').attr('id') + 'B');
                            if (ui.item.find('input[type="textbox"]').attr('id') != undefined)
                                ui.item.find('input[type="textbox"]').attr('id', ui.item.find('input[type="textbox"]').attr('id') + 'B');
                            if (ui.item.find('input[type="select"]').attr('id') != undefined)
                                ui.item.find('input[type="select"]').attr('id', ui.item.find('input[type="select"]').attr('id') + 'B');
                            if (ui.item.find('textarea').attr('id') != undefined)
                                ui.item.find('textarea').attr('id', ui.item.find('textarea').attr('id') + 'B');
                            if (ui.item.find('select').attr('id') != undefined)
                                ui.item.find('select').attr('id', ui.item.find('select').attr('id') + 'B');
                            colorBar = "B";
                        }
                    } else {
                        ui.item.removeClass('A');
                        var midName = '';
                        var str = ui.item.find('div').attr('id').replace('divLabel', '');
                        $("#sortableForFields").find('li').each(function () {
                            if ($("#ListThird .objName").css('background-image') == 'none') {
                                if ($(this).attr("title") == "REFERENCE" && $('#ListThird').css('display') != 'none' && $(this).find('div').attr('lblname') == $('#ListThird').find('.objName').text().substring(0, $('#ListThird').find('.objName').text().indexOf('(') - 1)) {
                                    midName = $(this).find('label').attr('id').replace('lbl', '');
                                }
                            }
                        });

                        var priObj = str.substring(0, str.indexOf('.') + 1);
                        var fldObj = str.substring(str.lastIndexOf('.'));
                        var inputIdStr = priObj + midName + fldObj;
                        //for change ID of TextBox;
                        if (ui.item.find('input[type="textbox"]').attr('id') != undefined) {
                            ui.item.find('input[type="textbox"]').attr('id', inputIdStr);
                            ui.item.find('input[type="textbox"]').attr('name', inputIdStr);
                        }
                        if (ui.item.find('input[type="select"]').attr('id') != undefined) {
                            ui.item.find('input[type="select"]').attr('id', inputIdStr);
                            ui.item.find('input[type="select"]').attr('name', inputIdStr);
                        }
                        if (ui.item.find('textarea').attr('id') != undefined) {
                            ui.item.find('textarea').attr('id', inputIdStr);
                            ui.item.find('textarea').attr('name', inputIdStr);
                        }
                        if (ui.item.find('select').attr('id') != undefined) {
                            ui.item.find('select').attr('id', inputIdStr);
                            ui.item.find('select').attr('name', inputIdStr);
                        }
                        //ui.item.attr('ondblclick', "openEditDialog('" + ui.item.attr('id') + "',true);");
                    }
                    ui.item.find('label').after('<span class="listName" style="display:none">sortableForFieldsThird ' + colorBar + '</span>');
                    ui.item.find('label').first().after('<br/><span class="addObjName"><i>From : ' + addObjName + '</i></span>');
                    ui.item.attr('id', ui.item.attr('id') + colorBar);
                    //ui.item.attr('ondblclick', "openEditDialog('" + ui.item.attr('id') + "',true);");
                    ui.item.find('.editImg').attr('onclick', "openEditDialog('" + ui.item.attr('id') + "',true);");
                    ui.item.find('.deleteField').attr('id', ui.item.attr('id'));

                    //Changes                           

                    ui.item.find('#isDefaultRequired' + lblName).attr('id', $('#isDefaultRequired' + lblName).attr('id') + colorBar);
                    ui.item.find('#isUserSelectedRequired' + lblName).attr('id', $('#isUserSelectedRequired' + lblName).attr('id') + colorBar);
                    ui.item.find('#errMsgForRequired' + lblName).attr('id', $('#errMsgForRequired' + lblName).attr('id') + colorBar);
                    ui.item.find('#defaultValue' + lblName).attr('id', $('#defaultValue' + lblName).attr('id') + colorBar);
                    ui.item.find('#hideField' + lblName).attr('id', $('#hideField' + lblName).attr('id') + colorBar);
                    ui.item.find('#isReadOnly' + lblName).attr('id', $('#isReadOnly' + lblName).attr('id') + colorBar);
                    ui.item.find('#upsertField' + lblName).attr('id', $('#upsertField' + lblName).attr('id') + colorBar);
                }
                if (ui.sender.attr("id") == 'sortableForFieldsFourth') {
                    //set ID Header List
                    addObjName = $('#ListFourth').find('.objName').text().replace('Fields', 'Object');
                    //addObjName = $('#ListFourth').find('.objName').attr('id');
                    /*ui.item.find('label').after('<span class="listName" style="display:none">sortableForFieldsFourth</span>');
                    ui.item.find('label').first().after('<br/><span class="addObjName"><i>From : '+addObjName+'</i></span>');*/
                    var txtImage = $("#ListFourth .objName").css('background-image');
                    var lblName = ui.item.find('label').attr('id').replace('lbl', '');
                    var colorBar = '';
                    if (txtImage != undefined && txtImage != 'none') {
                        if (txtImage.indexOf("A.png") >= 1) {
                            ui.item.addClass('A');
                            /*ui.item.attr('ondblclick' , "openEditDialog('"+ (ui.item.attr('id')+'A') +"',true);");
                            ui.item.find('.editImg').attr('onclick' , "openEditDialog('"+ ui.item.attr('id')+"',true);");
                            ui.item.find('.deleteField').attr('id',ui.item.attr('id'));*/
                            ui.item.find('label').attr('id', ui.item.find('label').attr('id') + 'A');
                            if (ui.item.find('input[type="textbox"]').attr('id') != undefined)
                                ui.item.find('input[type="textbox"]').attr('id', ui.item.find('input[type="textbox"]').attr('id') + 'A');
                            if (ui.item.find('input[type="select"]').attr('id') != undefined)
                                ui.item.find('input[type="select"]').attr('id', ui.item.find('input[type="select"]').attr('id') + 'A');
                            if (ui.item.find('textarea').attr('id') != undefined)
                                ui.item.find('textarea').attr('id', ui.item.find('textarea').attr('id') + 'A');
                            if (ui.item.find('select').attr('id') != undefined)
                                ui.item.find('select').attr('id', ui.item.find('select').attr('id') + 'A');
                            colorBar = "A";
                        }
                        if (txtImage.indexOf("B.png") >= 1) {
                            ui.item.addClass('B');
                            /*ui.item.attr('ondblclick' , "openEditDialog('"+ (ui.item.attr('id')+'B') +"',true);");
                            ui.item.find('.editImg').attr('onclick' , "openEditDialog('"+ ui.item.attr('id')+"',true);");
                            ui.item.find('.deleteField').attr('id',ui.item.attr('id'));*/
                            ui.item.find('label').attr('id', ui.item.find('label').attr('id') + 'B');
                            if (ui.item.find('input[type="textbox"]').attr('id') != undefined)
                                ui.item.find('input[type="textbox"]').attr('id', ui.item.find('input[type="textbox"]').attr('id') + 'B');
                            if (ui.item.find('input[type="select"]').attr('id') != undefined)
                                ui.item.find('input[type="select"]').attr('id', ui.item.find('input[type="select"]').attr('id') + 'B');
                            if (ui.item.find('textarea').attr('id') != undefined)
                                ui.item.find('textarea').attr('id', ui.item.find('textarea').attr('id') + 'B');
                            if (ui.item.find('select').attr('id') != undefined)
                                ui.item.find('select').attr('id', ui.item.find('select').attr('id') + 'B');
                            colorBar = "B";
                        }
                        if (txtImage.indexOf("C.png") >= 1) {
                            ui.item.addClass('C');
                            /*ui.item.attr('ondblclick' , "openEditDialog('"+ (ui.item.attr('id')+'C') +"',true);");
                            ui.item.find('.editImg').attr('onclick' , "openEditDialog('"+ ui.item.attr('id')+"',true);");
                            ui.item.find('.deleteField').attr('id',ui.item.attr('id'));*/
                            ui.item.find('label').attr('id', ui.item.find('label').attr('id') + 'C');
                            if (ui.item.find('input[type="textbox"]').attr('id') != undefined)
                                ui.item.find('input[type="textbox"]').attr('id', ui.item.find('input[type="textbox"]').attr('id') + 'C');
                            if (ui.item.find('input[type="select"]').attr('id') != undefined)
                                ui.item.find('input[type="select"]').attr('id', ui.item.find('input[type="select"]').attr('id') + 'C');
                            if (ui.item.find('textarea').attr('id') != undefined)
                                ui.item.find('textarea').attr('id', ui.item.find('textarea').attr('id') + 'C');
                            if (ui.item.find('select').attr('id') != undefined)
                                ui.item.find('select').attr('id', ui.item.find('select').attr('id') + 'C');
                            colorBar = "C";
                        }
                    } else {
                        ui.item.removeClass('A');
                        var midName = '';
                        var str = ui.item.find('div').attr('id').replace('divLabel', '');
                        $("#sortableForFields").find('li').each(function () {
                            if ($("#ListFourth .objName").css('background-image') == 'none') {
                                if ($(this).attr("title") == "REFERENCE" && $('#ListFourth').css('display') != 'none' && $(this).find('div').attr('lblname') == $('#ListFourth').find('.objName').text().substring(0, $('#ListFourth').find('.objName').text().indexOf('(') - 1)) {
                                    midName = $(this).find('label').attr('id').replace('lbl', '');
                                }
                            }
                        });

                        var priObj = str.substring(0, str.indexOf('.') + 1);
                        var fldObj = str.substring(str.lastIndexOf('.'));
                        var inputIdStr = priObj + midName + fldObj;
                        //for change ID of TextBox;
                        if (ui.item.find('input[type="textbox"]').attr('id') != undefined) {
                            ui.item.find('input[type="textbox"]').attr('id', inputIdStr);
                            ui.item.find('input[type="textbox"]').attr('name', inputIdStr);
                        }
                        if (ui.item.find('input[type="select"]').attr('id') != undefined) {
                            ui.item.find('input[type="select"]').attr('id', inputIdStr);
                            ui.item.find('input[type="select"]').attr('name', inputIdStr);
                        }
                        if (ui.item.find('textarea').attr('id') != undefined) {
                            ui.item.find('textarea').attr('id', inputIdStr);
                            ui.item.find('textarea').attr('name', inputIdStr);
                        }
                        if (ui.item.find('select').attr('id') != undefined) {
                            ui.item.find('select').attr('id', inputIdStr);
                            ui.item.find('select').attr('name', inputIdStr);
                        }
                        //ui.item.attr('ondblclick', "openEditDialog('" + ui.item.attr('id') + "',true);");
                    }
                    ui.item.find('label').after('<span class="listName" style="display:none">sortableForFieldsFourth ' + colorBar + '</span>');
                    ui.item.find('label').first().after('<br/><span class="addObjName"><i>From : ' + addObjName + '</i></span>');
                    ui.item.attr('id', ui.item.attr('id') + colorBar);
                    //ui.item.attr('ondblclick', "openEditDialog('" + ui.item.attr('id') + "',true);");
                    ui.item.find('.editImg').attr('onclick', "openEditDialog('" + ui.item.attr('id') + "',true);");
                    ui.item.find('.deleteField').attr('id', ui.item.attr('id'));

                    //Changes                           

                    ui.item.find('#isDefaultRequired' + lblName).attr('id', $('#isDefaultRequired' + lblName).attr('id') + colorBar);
                    ui.item.find('#isUserSelectedRequired' + lblName).attr('id', $('#isUserSelectedRequired' + lblName).attr('id') + colorBar);
                    ui.item.find('#errMsgForRequired' + lblName).attr('id', $('#errMsgForRequired' + lblName).attr('id') + colorBar);
                    ui.item.find('#defaultValue' + lblName).attr('id', $('#defaultValue' + lblName).attr('id') + colorBar);
                    ui.item.find('#hideField' + lblName).attr('id', $('#hideField' + lblName).attr('id') + colorBar);
                    ui.item.find('#isReadOnly' + lblName).attr('id', $('#isReadOnly' + lblName).attr('id') + colorBar);

                    ui.item.find('#upsertField' + lblName).attr('id', $('#upsertField' + lblName).attr('id') + colorBar);

                }
                ui.item.addClass(ui.sender.attr("id"));

                //Set Auto required message
                ui.item.find('.fieldDiv input').attr('data-requiredmessage', 'required');
                ui.item.find('.fieldDiv select').attr('data-requiredmessage', 'required');
                ui.item.find('.fieldDiv textarea').attr('data-requiredmessage', 'required');

                //Add required to hidden field
                var reqId = ui.item.attr('id');
                //$("#"+dropLiId+" label").attr('id').replace('lbl','');
                ui.item.find('#errMsgForRequired' + reqId).attr('Value', 'required');
                ui.item.unbind('dblclick');
                ui.item.attr('ondblclick', "openEditDialog('" + ui.item.attr('id') + "',true);");

                var isGen = false;
                if (dropLiId == "lblliGENERALTEXT") {
                    var i = Math.floor((Math.random() * 1000) + 1);
                    dropLiId = dropLiId + i;
                    ui.item.attr('id', dropLiId);
                    ui.item.find('label').attr('id', 'lblGENERALTEXT' + i);
                    isGen = true;
                }

                if (dropLiId == "lblliCAPTCHA") {
                    var i = Math.floor((Math.random() * 1000) + 1);
                    dropLiId = dropLiId + i;
                    ui.item.attr('id', dropLiId);
                    ui.item.find('label').attr('id', 'lblCAPTCHA' + i);
                    ui.item.find('#Captcha').attr('id', 'Captcha' + i);
                    isGen = true;
                }

                if (dropLiId == "lblliUPLOAD") {

                    <apex:outputText rendered="{!packageTier == 'Base'}">
                            showUpgradePrompt('File uploads are only available in Professional or Enterprise editions of Fast Forms.');                           
                            deleteField(dropLiId);
                    </apex:outputText>
                    
                    
                    <apex:outputText rendered="{!packageTier != 'Base'}">
                    var i = Math.floor((Math.random() * 1000) + 1);
                    dropLiId = dropLiId + i;
                    ui.item.attr('id', dropLiId);
                  /// change made to fix upload edit label issue
                   /* ui.item.find('label').attr('id', 'FileUpload' + i + '_Select');
                    ui.item.find('label').attr('for', 'FileUpload' + i);


                    ui.item.find('#FileUpload01').attr('name', 'FileUpload' + i);
                    ui.item.find('#FileUpload01').attr('id', 'FileUpload' + i);*/
                   /* ui.item.find('label').attr('id', 'FileUpload' + i + '_Select');
                    ui.item.find('label').attr('for', 'FileUpload' + i);
                   
                    ui.item.find('div[id^="divLabel"] label').attr('id', 'lblFileUpload' + i + '_Select');
                     


                    ui.item.find('#FileUpload01').attr('name', 'lblFileUpload' + i);
                    ui.item.find('#FileUpload01').attr('id', 'lblFileUpload' + i);*/
/* new code to fix file upload APril 13 2015*/

                     ui.item.find('label').attr('id', 'lblFileUpload' + i + '_Select');
                    ui.item.find('label').attr('for', 'FileUpload' + i);
                   
                    ui.item.find('div[id^="divLabel"] label').attr('id', 'lblFileUpload' + i + '_Select');
                     


                    ui.item.find('#FileUpload01').attr('name', 'FileUpload' + i);
                    ui.item.find('#FileUpload01').attr('id', 'FileUpload' + i);

/* new code ends */
                    //update Div
                    ui.item.find('#FileUploadAreaXX').attr('id', 'FileUploadArea' + i);
                    ui.item.find('#FileUploadDropAreaXX').attr('id', 'FileUploadDropArea' + i);
                    ui.item.find('#btnFileUploadAddXX').attr('id', 'btnFileUploadAdd' + i);
                    isGen = true;
                    </apex:outputText>
                }

                if (/RecordTypeId/i.test(dropLiId)) {
                    ui.item.find('label').addClass('grayLabel');
                }
                //ui.item.attr('ondblclick' , "openEditDialog('"+ ui.item.attr('id')+"',true);");
                var editDelDivHtml = '<div class="editDelDiv">';

                if (ui.item.find('.deleteField').length == 0 && ui.item.find('.editImg').length == 0) {

                    if (isGen) {
                        editDelDivHtml += '<img class="editImg" src="' + imgUrl + '" onclick="openEditDialog(\'' + dropLiId + '\',true);" />';
                        editDelDivHtml += '<img id="' + dropLiId + '" src="' + deleteImgUrl + '" class="deleteField" onclick="deleteField(this.id);"/>';
                    } else {
                        editDelDivHtml += '<img class="editImg" src="' + imgUrl + '" onclick="openEditDialog(\'' + ui.item.attr('id') + '\',true);" />';
                        editDelDivHtml += '<img id="' + ui.item.attr('id') + '" src="' + deleteImgUrl + '" class="deleteField" onclick="deleteField(this.id);"/>';
                    }
                }
                editDelDivHtml += '</div >';

                ui.item.append(editDelDivHtml);
                addRequiredMarkOnLabel();
                if (isFirstTimeFormEdit == "true") {
                    $(".dragDropInfoDiv").hide();
                    $(".arrowUpper").hide();
                    $(".addNewSection").css('margin-top', '0%');
                }

                if (ui.item.parent().attr('id') == 'labelformUlForAddNewSection') {
                    addNewSectionDetail();
                    var newAddedSectionId = sectionCounter - 1;
                    $("#labelformUl" + newAddedSectionId).append($("#labelformUlForAddNewSection").html());
                    $("#labelformUlForAddNewSection").html('');
                }


            }
            resetSavedButton(); 
            initScrollbar();
            $(this).parent().find('.ui-sortable-placeholder').removeClass('addNewSectionIcon');
            $(this).parent().find('.ui-sortable-placeholder').css("visibility", "hidden");
            $(this).parent().find('.ui-sortable-placeholder').remove('plusIcon');
            setHover();

        },
        activate: function (event, ui) {
        console.log(' makeFormSortable- '+ui.item.attr('class'));
            ui.item.css('height', 'auto');
            
            ui.item.addClass('grabCursor');
        },
        deactivate: function (event, ui) {
            resetSavedButton();
            $('#addSectionPlus').hide();
            //$("#sortableForFields.dropfields" ).sortable( "option", "disabled", false );
            ui.item.removeClass('grabCursor');
        },
        over: function (event, ui) {
            if ($(this).parent().hasClass('addNewSection')) {
                setTimeout(function () { $('#addSectionPlus').show() }, 100);
                if ($(this).parent().find('.ui-sortable-placeholder').length > 0) {
                    $(this).parent().find('.ui-sortable-placeholder').removeClass('addNewSectionIcon');
                    $(this).parent().find('.ui-sortable-placeholder').css("visibility", "hidden");
                    $(this).parent().find('.ui-sortable-placeholder').remove('plusIcon');
                } else {
                    $(this).parent().find('.placeholder').removeClass('addNewSectionIcon');
                    $(this).parent().find('.placeholder').css("visibility", "hidden");
                    $(this).parent().find('.placeholder').remove('plusIcon');
                }
            } else {
                $('#addSectionPlus').hide();
                if ($(this).parent().find('.ui-sortable-placeholder').length > 0) {
                    $(this).parent().find('.ui-sortable-placeholder').addClass('addNewSectionIcon');
                    $(this).parent().find('.ui-sortable-placeholder').css("visibility", "visible");
                    $(this).parent().find('.ui-sortable-placeholder').html('<div class="plusIcon">+</div>');
                } else {
                    $(this).parent().find('.placeholder').addClass('addNewSectionIcon');
                    $(this).parent().find('.placeholder').css("visibility", "visible");
                    $(this).parent().find('.placeholder').html('<div class="plusIcon">+</div>');
                }
            }

        }

    });
    }

       function setHover(){    
     //  getRemoteRuleFieldsInfoJs();        
    $('#parentUlForm li ul li').hover(
           function(){ 
               $(this).find('.addObjName').show();
               $(this).find('.addObjName img').remove();
               if($(this).hasClass('A')){
                   $(this).find('.addObjName').append('<img width="11px" height="11px" style="margin-left:5px;" src="{!URLFOR($Resource.VisualAntidote__alpha,'A.png')}"/>');
               }
               if($(this).hasClass('B')){
                   $(this).find('.addObjName').append('<img width="11px" height="11px" style="margin-left:5px;" src="{!URLFOR($Resource.VisualAntidote__alpha,'B.png')}"/>');
               }
               if($(this).hasClass('C')){
                   $(this).find('.addObjName').append('<img width="11px" height="11px" style="margin-left:5px;" src="{!URLFOR($Resource.VisualAntidote__alpha,'C.png')}"/>');
               }
              /* CODE FOR FIELD INFO POPUP
               clearFieldInfoPopupContent($(this));
               generateFieldInfoPopupContent($(this));
               $(this).find('.sfff-field-info ').removeClass('display-none');*/
                      
           },
           function(){ $(this).find('.addObjName').hide();
              /* $(this).find('.sfff-field-info ').addClass('display-none');*/
                  
                    
           }
                   
    );
            

            
     
            
    $('.hoverRelSelectedImg').bind('mouseover', function() {
        $(this).attr("src","{!URLFOR($Resource.VisualAntidote__iconImages,'ButtonSprites.png')}");
    });
    $('.hoverRelSelectedImg').bind('mouseout', function() {
        $(this).attr("src","{!URLFOR($Resource.VisualAntidote__iconImages,'ButtonSpritesActive.png')}");
    });  
                    
    
             
}
        function removePrimaryLookupField() {
    var primaryObjName = $("#priName").attr('data-object');
    //$("#ListFirst .objName").text();
    if ($("#ListSecond .objName").css('background-image') != undefined && $("#ListSecond .objName").css('background-image') != "none") {
        $("#sortableForFieldsNew li").each(function () {
            if ($(this).attr('title') == "REFERENCE" && $(this).find('label').attr('vaobj') != undefined && $(this).find('label').attr('vaobj') == primaryObjName) {
                $(this).hide();
            }
        });
    }
    if ($("#ListThird .objName").css('background-image') != undefined && $("#ListThird .objName").css('background-image') != "none") {
        $("#sortableForFieldsThird li").each(function () {
            if ($(this).attr('title') == "REFERENCE" && $(this).find('label').attr('vaobj') != undefined && $(this).find('label').attr('vaobj') == primaryObjName) {
                $(this).hide();
            }
        });
    }
    if ($("#ListFourth .objName").css('background-image') != undefined && $("#ListFourth .objName").css('background-image') != "none") {
        $("#sortableForFieldsFourth li").each(function () {
            if ($(this).attr('title') == "REFERENCE" && $(this).find('label').attr('vaobj') != undefined && $(this).find('label').attr('vaobj') == primaryObjName) {
                $(this).hide();
            }
        });
    }
    $("#parentUlForm li").each(function () {
        $(this).find('.formUlLabel').each(function () {
            $(this).find('li').each(function () {
                if ($(this).hasClass('lbl') == false && $(this).hasClass('sortableForFieldsNew')) {
                    $(this).find('.addObjName').html('<i>From : ' + $('#ListSecond .objName').text() + '</i>');
                }
            });
        });
    });
    $("#parentUlForm li").each(function () {
        $(this).find('.formUlLabel').each(function () {
            $(this).find('li').each(function () {
                if ($(this).hasClass('lbl') == false && $(this).hasClass('sortableForFieldsThird')) {
                    $(this).find('.addObjName').html('<i>From : ' + $('#ListThird .objName').text() + '</i>');
                }
            });
        });
    });
    $("#parentUlForm li").each(function () {
        $(this).find('.formUlLabel').each(function () {
            $(this).find('li').each(function () {
                if ($(this).hasClass('lbl') == false && $(this).hasClass('sortableForFieldsFourth')) {
                    $(this).find('.addObjName').html('<i>From : ' + $('#ListFourth .objName').text() + '</i>');
                }
            });
        });
    });
    }
     
        /*function callSaveForm(){
            var formName = $('[id$="formName"]').val();
            var formType = $('[id$="FromTypeOptions"]').val();
            if( formName.trim().length==0){
                alert('Form Name required.');
            }else{
                saveForm();
                
            }
        }*/
        function saveFormComplete(){
            ruleCounter = 0; 
            $('[id$="formName"]').attr("disabled", true);
            $('[id$="FromTypeOptions"]').attr("disabled", true);
            $('.formName').parent().parent().show();
            $('.objectType').parent().parent().show();
            $('#saveFormBtn').parent().parent().hide();
            $("#parentUlForm").html('');
            calcualteFormInformation();             
        }
         
        function sendComplete(){ 
            $(".expandBtnDiv").hide()  
            $( '#success').show();
            $( '#Processing' ).hide();
            if($('[id$="is500InternalError"]').val() == "true") {
                $('#ui-id-1').text('Error');
                $('#dialogSucess #success').hide();
                $('#dialogSucess #failure').show();
                 
            }else{
                $('#ui-id-1').text('Success');
                $('#dialogSucess #success').show();
                $('#dialogSucess #failure').hide();
                closeSavingDialog();
                if($('#hidePopup').val() !='true'){
                   /* showSaveFormInfo(); --removed by balinder after implementing message box to show update success*/
                }                 
                $("#btnSaved").text('Publish Draft');
            }                                              
        }
         
        function callRetrieveHtmlService(){
            var val= $('[id$="selectedPreFormID"]').val();
            $('#saveFormBtn').parent().parent().hide();
            $('#previewiframe').hide();
            if(val == 'none'){
                $("#editor1").val('');
                $('.formName').parent().parent().hide();
                $('.objectType').parent().parent().hide();
                $('[id$="pb2"]').hide();
                $("#deleteTemplateLink").hide();
            }else if(val == 'New Form'){
                $('.formName').parent().parent().show();
                $('#saveFormBtn').parent().parent().show();
                $('[id$="formName"]').attr("disabled", false);
                $('[id$="FromTypeOptions"]').attr("disabled", false);
                $('[id$="formName"]').val('');
                $('[id$="FromTypeOptions"]').val('none');
                $('.objectType').parent().parent().hide();
                $('[id$="pb2"]').hide();
                $("#deleteTemplateLink").hide();
            }else{
                retrieveHtmlService();
            }
        }
        function retrieveHtmlServiceComplete(){  
    ruleCounter = 0;
    $('.formName').parent().parent().hide();
    $('.objectType').parent().parent().show(); 
    $('#previewDiv').html( $('[id$="hiddenCkEditorValue"]').val());
    var htmlValForLabel = '';
    var htmlValForField = '';
    $("#parentUlForm").html('');
    var sectionIndex= 0;
    var prevLiHTML= '';
    var prevUlHTML= '';
    var beforeLiHTML=''
    var afterLiHTML=''
    var liIndex = 0;
    var index = 0;
    var headingHtml = '';
    var liWithUlHtml = '';
    var cssForAlign = '';
    var sectionClass = '';
    var lastUlEndTag = '</ul> </td></tr></table> </li>';
    var isFirstUlElement=true;
    var isUlElement=true;
    var sectionCount=0;
    var tdElementCount=$("#previewDiv").find('.td').length;
    var sectionElementCount=$("#previewDiv").find('.innerSecHeader').length;
    $("#previewDiv").find('.tr .td').find("div:first").show();
    var ulInnerSectionHeader = '';    
    console.log(' tdElementCount '+tdElementCount);
    $("#previewDiv").find('.td').each(function( tdIndex) {  
        console.log(' tdIndex  '+tdIndex);            
        if($(this).hasClass("sectionHeader")  ){
            var headingHtml = '';
            if($(this).has('input[type="button"]').length){
                idCounter++;
                $(this).children().parent().find('input[type="button"]').attr('id',idCounter+'sortableForButton');
                $(this).children().parent().find('input[type="button"]').addClass('sectionHeader');
                /*code added to fix footer area customization issue on Dec 19 2014 */
                var footernote='';
                if($(this).children().parent().has('label'))
                {
                    if($(this).children().parent().find('div .footnoteDiv'))
                    {
                       
                        footernote=$(this).children().parent().find('.footnoteDiv label').html();
                    }
                }
                        
                populateFooterFromFormHTML($(this).children().parent().find('input[type="button"]'),footernote);
                /**/
                headingHtml = '<li  class="Ulbtn sectionHeader"  id="'+idCounter+'sortableForLabelli" style="text-align:'+$(this).css('text-align')+'"  >'+$(this).children().parent().html()+'<div class="btnEditDiv"><img class="editImg" src="{!URLFOR($Resource.VisualAntidote__alpha,'blank.png')}" onclick="openBtnEditDialog(\''+idCounter+'sortableForLabelli\');" /></div></li>';
            } 
        }else if($(this).hasClass('innerSecHeader')){
            
            var liHTMLElement=''
            if(!isUlElement)
            {
                liHTMLElement=htmlValForLabel;
                htmlValForLabel='';
            }
            isUlElement=true;
            var localseccounter='';
            try{
                localseccounter=   $(this).find('label').attr('id').replace('sectionLabel','');
            }
            catch(err)
            {
                localseccounter=sectionIndex;
            }
            
            sectionIndex++;
            
            sectionClass='formUlLabel';
             
            idCounter++;
            //}
            if($(this).hasClass('hideFullSection'))
            {
                sectionClass="formUlLabel hideFullSection";
            }
            else
            {
                sectionClass='formUlLabel';
            }
            labelLiId = localseccounter+'sortableForLabelli';
            //Is Inner Section Header in Ul
            if(isFirstUlElement)
            {
                var ulInnerSectionHeader = '<li class="lbl sectionDisabled" style="text-align:'+ cssForAlign+';"  id="'+labelLiId+'" >'+$(this).children().parent().html();
                ulInnerSectionHeader += '<img src="'+deleteImgUrl+'" id="deleteFormUl'+localseccounter+'" class="deleteField" onclick="deleteSection(this.id);"/>';
                ulInnerSectionHeader += '<img class="editImg" src="{!URLFOR($Resource.VisualAntidote__alpha,'blank.png')}" onclick="openEditDialog(\''+labelLiId+'\',false);"></li>';
                liWithUlHtml += '<li><table class="mainTable" width="100%"><tr><td width="100%"><ul class="'+sectionClass+'" id="labelformUl'+ localseccounter+'" >'+ulInnerSectionHeader ;
                 
           
            }
            else{
                liWithUlHtml+=liHTMLElement;
                liWithUlHtml+=  lastUlEndTag;
                var ulInnerSectionHeader = '<li class="lbl sectionDisabled" style="text-align:'+ cssForAlign+';"  id="'+labelLiId+'" >'+$(this).children().parent().html();
                ulInnerSectionHeader += '<img src="'+deleteImgUrl+'" id="deleteFormUl'+localseccounter+'" class="deleteField" onclick="deleteSection(this.id);"/>';
                ulInnerSectionHeader += '<img class="editImg" src="{!URLFOR($Resource.VisualAntidote__alpha,'blank.png')}" onclick="openEditDialog(\''+labelLiId+'\',false);"></li>';
                liWithUlHtml += '<li><table class="mainTable" width="100%"><tr><td width="100%"><ul class="'+sectionClass+'" id="labelformUl'+ localseccounter+'" >'+ulInnerSectionHeader ;
                 
            }
            isFirstUlElement=false;
             
            sectionCount++;
        }else{
            var tableRowId = $(this).parent().attr('id');
            var fieldLiId = '';
            var labelLiId = '';
            if($(this).children().parent().html() != undefined){
                isUlElement=false;
                labelLiId = tableRowId.replace('divRowlbl','lblli');
                cssForAlign = '';
                if($(this).children().parent().has("h1,h2,h3").length){
                    if($(this).children().parent().find("h1,h2,h3").attr('align') != undefined)
                        cssForAlign = $("#labelDiv").find("h1,h2,h3").attr('align');
                    else if($("#labelDiv").find("h1,h2,h3").css('text-align') != "undefined")
                        cssForAlign = $("#labelDiv").find("h1,h2,h3").css('text-align');
                }                           
                if($(this).hasClass('innerSecHeader')){                               
                }else{
                    //is field li in Ul 
                    var classAddSort = $(this).children().parent().find('.addObjName').text().replace('From : ','');
                    classAddSort = classAddSort.replace(' Object','');
                  var  tempLiHtml = '<li class="fieldLi '+ $(this).children().parent().find('.listName').text() +'" style="text-align:'+ cssForAlign+'"  id="'+labelLiId+'"   title="'+$(this).attr('title') +'">'+$(this).children().parent().html();
                  tempLiHtml  += '<div class="editDelDiv"><img id="'+labelLiId+'" class="deleteField" onclick="deleteField(this.id);" src="'+deleteImgUrl+'"/><img class="editImg" src="{!URLFOR($Resource.VisualAntidote__alpha,'blank.png')}" onclick="openEditDialog(\''+labelLiId+'\',true);" /></div></li>';
               
                  if(sectionCount<sectionElementCount)
                    {
                       
                        /* before last section element add LIHTML  to temp variable which will be accessed by section block when it gets there */
                        htmlValForLabel+=tempLiHtml;
                    }
                    else
                    {
                      /* after last section element add LIHTML directly to outputhtml */
                        console.log(' sectionElementCount==sectionCount-  '+htmlValForLabel);

                        liWithUlHtml+=  tempLiHtml;
                    }
                }
            }
            
            index++;
                        
        }
    });
              
    liWithUlHtml+=  lastUlEndTag;
    //if(htmlValForLabel != '' || htmlValForField != ''){                   
    //liWithUlHtml = '<li><table class="mainTable" width="100%"><tr><td width="100%"><ul class="'+sectionClass+'" id="labelformUl'+ sectionIndex+'" >'+ulInnerSectionHeader + htmlValForLabel+'</ul> </td></tr></table> </li>';
    $("#parentUlForm").append(liWithUlHtml );                    
            
    //}
              
    $("#parentUlForm").append(headingHtml);
    makeFormSortable();
              
    isChangeFieldCallFromReteriveHtml = true;
    changeFields();
              
    $('#saveFormBtn').parent().parent().hide();
    $('[id$="pb2"]').show();
    calcualteFormInformation();
    $("#deleteTemplateLink").show();
              
}
     
    
        function populateFooterFromFormHTML(sendBtnElem,footnote){
        try{
         $("#btnTxt").val($(sendBtnElem).val()) ;
         $("#txtbxSubmitButtonLabel").val($(sendBtnElem).val()) ;
            $("#BtnMessage").val($(sendBtnElem).attr('btnmessage'));
            $("#txtareaThankyoumsg").val($(sendBtnElem).attr('btnmessage'));
             $("#btnFootnote").val(''+footnote);
            $("#btnUrl").val($(sendBtnElem).attr('btnurl')) ;
            $("#txtbxRedirectUrl").val($(sendBtnElem).attr('btnurl')) ;
            
            if ($("#txtbxRedirectUrl").val() != "")
            {
                $('a[href$="#formconfirmationRadio1"]').parent().removeClass('active');
                $('a[href$="#formconfirmationRadio2"]').parent().addClass('active')
                $('#formconfirmationRadio1').removeClass('active in');
                $('#formconfirmationRadio2').addClass('active in');            
            }   
            
            footerBtnHTMLPopulated=true;
            }
            catch(err)
            {
            console.log(' Error in populating footerHtml '+err);
            }
        }
        function addRequiredMarkOnLabel(){
        console.log(' add required label');
            $(".formUlLabel").find('li').each(function(){
                if($(this).hasClass('lbl') == false){
                    var lblLiId =  $(this).attr('id');
                    var fieldLiId = lblLiId.replace('lbl','');
                    var nameOfLabel = $("#"+lblLiId).find('label').attr('id').replace('lbl','');
                    var isRequired = $("#"+lblLiId).find('#isUserSelectedRequired'+nameOfLabel).val() == "true";
                    //Required Label Add onload                       
                       
                    $(this).attr('ondblclick' , "openEditDialog('"+ $(this).attr('id')+"',true);");
                    $(this).find('div:first').find('.requiredSpan').remove();
                       
                    if(isRequired == "true" || isRequired == true) {
                        $(this).find('div:first').find('label').after('<span class="requiredSpan ff-required-mark"  >*</span>');
                    }
                    if($(this).find("#isDefaultRequiredCAPTCHA").length > 0){
                        $(this).find('div:first').find('label').after('<span class="requiredSpan ff-required-mark"  >*</span>');
                    }
                    //Required Span
                    if($(this).find('[name="FileUploadArea"]').attr('data-isrequired')){
                        $(this).find('div:first').find('label').after('<span class="requiredSpan ff-required-mark"  >*</span>');
                    }                      
                    if($(this).find('[name="FileUploadArea"]').attr('data-isrequired') == false || $(this).find('[name="FileUploadArea"]').attr('data-isrequired') == "false"){
                        $(this).find('div:first').find('label').next().remove();
                    }                 
                }
            });              
        }
        function createHtml(){
            $("#sortableForFields").find('li').each(function(){
                $(this).find('div').each(function(index){
                    if(index==1){
                        $(this).html($(this).text());
                    }
                });
            });              
            $("#sortableForFieldsNew").find('li').each(function(){
                $(this).find('div').each(function(index){
                    if(index==1){
                        $(this).html($(this).text());
                    }
                });
            });
            $("#sortableForFieldsThird").find('li').each(function(){
                $(this).find('div').each(function(index){
                    if(index==1){
                        $(this).html($(this).text());
                    }
                });
            });              
            $("#sortableForFieldsFourth").find('li').each(function(){
                $(this).find('div').each(function(index){
                    if(index==1){
                        $(this).html($(this).text());
                    }
                });
            });              
        }
        function deleteDuplicateLi(){
            if(isChangeFieldCallFromReteriveHtml  == false){
                $("#parentUlForm").html('');
            }
            isChangeFieldCallFromReteriveHtml = false;              
            // Added X for non required field
            $(".formUlLabel").find('li').each(function(){
                if($(this).hasClass('sectionDisabled') == false){
                    if($(this).find('.requiredSpan').length>0){
                        if(/lblliCAPTCHA/i.test($(this).attr('id')) || /lblliUPLOAD/i.test($(this).attr('id'))){
                        }else{
                            $(this).find('.deleteField').remove();
                        }
                    }                       
                    $("#sortableForFields").find("#"+$(this).attr('id')).remove(); 
                    $("#sortableForFieldsNew").find("#"+$(this).attr('id')).remove(); 
                    $("#sortableForFieldsThird").find("#"+$(this).attr('id')).remove();
                    $("#sortableForFieldsFourth").find("#"+$(this).attr('id')).remove(); 
                       
                    var lblLiId =  $(this).attr('id');                       
                    var fieldLiId = lblLiId.replace('lbl','');
                 
                    var nameOfLabel = $("#"+lblLiId).find('label').attr('id').replace('lbl','');
                    var isRequired = $("#"+lblLiId).find('#isDefaultRequired'+nameOfLabel).val() == "true";
                }
            });
            //added all required field of current selected object in form section
            if($("#parentUlForm").has('.formUlLabel').length==0){
                addNewSectionDetail();
            }              
            createHtml();  
            //Line of code cut       
            addRequiredMarkOnLabel();               
            removeReference();
        }
        /* method to remove required reference  fields from Editor area */
        function isFieldReference(elem) {

    var returnflag =false;
        if ($("#ListSecond .objName").css('background-image') == 'none') {

            if ($(elem).attr("title") == "REFERENCE" && $('#ListSecond').css('display') != 'none' && $(elem).find('label').attr('vaobj') != undefined && $(elem).find('label').attr('vaobj') == $('#ListSecond').find('.objName').text().substring($('#ListSecond').find('.objName').text().indexOf('(') + 1, $('#ListSecond').find('.objName').text().indexOf(')'))) {
                returnflag = true;
            }
        }
        if ($(elem).attr("title") == "REFERENCE" && $('#ListSecond').css('display') != 'none' && $(elem).find('label').attr('vaobj') != undefined && $(elem).find('label').attr('vaobj') == $('#ListSecond').find('.objName').text()) {
             
            returnflag = true;
        }
        if ($("#ListThird .objName").css('background-image') == 'none') {
             
            if ($(elem).attr("title") == "REFERENCE" && $('#ListThird').css('display') != 'none' && $(elem).find('label').attr('vaobj') != undefined && $(elem).find('label').attr('vaobj') == $('#ListThird').find('.objName').attr('id').substring($('#ListThird').find('.objName').attr('id').indexOf('(') + 1, $('#ListThird').find('.objName').attr('id').indexOf(')'))) {
                returnflag = true;
            }
        }

        if ($(elem).attr("title") == "REFERENCE" && $('#ListThird').css('display') != 'none' && $(elem).find('label').attr('vaobj') != undefined && $(elem).find('label').attr('vaobj') == $('#ListThird').find('.objName').text()) {
            
            returnflag = true;
        }
        if ($("#ListFourth .objName").css('background-image') == 'none') {
            
            if ($(elem).attr("title") == "REFERENCE" && $('#ListFourth').css('display') != 'none' && $(elem).find('label').attr('vaobj') != undefined && $(elem).find('label').attr('vaobj') == $('#ListFourth').find('.objName').attr('id').substring($('#ListFourth').find('.objName').attr('id').indexOf('(') + 1, $('#ListFourth').find('.objName').attr('id').indexOf(')'))) {
                returnflag = true;
            }
        }
        if ($(elem).attr("title") == "REFERENCE" && $('#ListFourth').css('display') != 'none' && $(elem).find('label').attr('vaobj') != undefined && $(elem).find('label').attr('vaobj') == $('#ListFourth').find('.objName').text()) {
            returnflag = true;
        }
        return returnflag;
    }
        function removeReference() {
    $("#sortableForFields").find('li').each(function () {
        $(this).show();
    });
    $("#sortableForFields").find('li').each(function () {
        if ($("#ListSecond .objName").css('background-image') == 'none') {
            
            var listsecondtext = $('#ListSecond').find('.objName').text().substring($('#ListSecond').find('.objName').text().indexOf('(') + 1, $('#ListSecond').find('.objName').text().indexOf(')') );
            if ($(this).attr("title") == "REFERENCE" && $('#ListSecond').css('display') != 'none' && $(this).find('label').attr('vaobj') != undefined && $(this).find('label').attr('vaobj') == $('#ListSecond').find('.objName').text().substring($('#ListSecond').find('.objName').text().indexOf('(') + 1, $('#ListSecond').find('.objName').text().indexOf(')'))) {
                $(this).hide();
            }
        }
        if ($(this).attr("title") == "REFERENCE" && $('#ListSecond').css('display') != 'none' && $(this).find('label').attr('vaobj') != undefined && $(this).find('label').attr('vaobj') == $('#ListSecond').find('.objName').text()) {
            $(this).hide();
        }
        if ($("#ListThird .objName").css('background-image') == 'none') {
            if ($(this).attr("title") == "REFERENCE" && $('#ListThird').css('display') != 'none' && $(this).find('label').attr('vaobj') != undefined && $(this).find('label').attr('vaobj') == $('#ListThird').find('.objName').attr('id').substring($('#ListThird').find('.objName').attr('id').indexOf('(') + 1, $('#ListThird').find('.objName').attr('id').indexOf(')'))) {
                $(this).hide();
            }
        }

        if ($(this).attr("title") == "REFERENCE" && $('#ListThird').css('display') != 'none' && $(this).find('label').attr('vaobj') != undefined && $(this).find('label').attr('vaobj') == $('#ListThird').find('.objName').text()) {
            $(this).hide();
        }
        if ($("#ListFourth .objName").css('background-image') == 'none') {
            if ($(this).attr("title") == "REFERENCE" && $('#ListFourth').css('display') != 'none' && $(this).find('label').attr('vaobj') != undefined && $(this).find('label').attr('vaobj') == $('#ListFourth').find('.objName').attr('id').substring($('#ListFourth').find('.objName').attr('id').indexOf('(') + 1, $('#ListFourth').find('.objName').attr('id').indexOf(')'))) {
                $(this).hide();
            }
        }
        if ($(this).attr("title") == "REFERENCE" && $('#ListFourth').css('display') != 'none' && $(this).find('label').attr('vaobj') != undefined && $(this).find('label').attr('vaobj') == $('#ListFourth').find('.objName').text()) {
            $(this).hide();
        }
    });
    }


     
    
        var isCount=0;
        function resetSortable(){
            //prevent required field to removed from form with both label and field section
            $(".formUlField,.formUlLabel").bind('sortremove', function (e,ui) {
                var liId= ui.item.attr('id');
                var lblId = $("#"+liId).find("div:first").find('label').attr('id').replace('lbl','');
                var isRequired = $("#"+liId).find("div:first").find("#isDefaultRequired"+lblId ).val();
                if(isRequired =="true"){
                    if(ui.item.parent().attr('id') == 'sortableForFields'){
                        alert('Required field can\'t be removed from form.');
                        e.preventDefault();
                        console.log(' ui.item -'+ui.item.html())
                        isRequiredRemoved = true;
                    }
                }else
                    isRequiredRemoved = false;
                
            });
            
            var blockSort = false;
            $("#sortableForFields.dropfields, #sortableForFieldsNew.dropfields,#sortableForFieldsThird.dropfields,#sortableForFieldsFourth.dropfields").sortable({
                connectWith: ".formUlField,.formUlLabel",
                dropOnEmpty: true,
                revert: 300,
                appendTo: document.body,
                helper: "clone",     
                receive: function(event, ui) {  
                    var liId= ui.item.attr('id');
                    if(isRequiredRemoved == false){
                   /// deletefield method added to fix the issue drag and drop issue from main form to fields list [it was adding the dragged item to first list fields]- balinder
                    deleteField(liId);
                                                                     
                    }
                   /* resetSavedButton();*/
                    initScrollbar();                    
                    
                },
               
                activate: function( event, ui ) {
                   /* resetSavedButton();*/
                  
                    initScrollbar();       
                          ui.item.css('height','auto');
                    ui.item.addClass('grabCursor');
                },
                deactivate: function( event, ui ) {
                    ui.item.removeClass('grabCursor');
                }
            });

            /* General Fields Sortable */
            var dropCount=0;
            $('#generalSortableForFields.dropfields').sortable({
                connectWith : ".formUlLabel",
                helper: 'clone',
                placeholder: 'placeholder',
                appendTo: document.body,
                stop: function(event, ui) { 
                    var $uiItem = $(ui.item);
                    if ($uiItem.parent().is('#generalSortableForFields.dropfields')) $uiItem.remove();
                    $('#generalFieldBox li').unbind('dblclick');
                    $('#generalFieldBox li').dblclick(function() {  
                        resetSavedButton();
                        initScrollbar();                                               
                        var litem = $(this).clone();                                                    
                        litem=itemAdd(litem);                
                          
                        var dropLiId = litem.attr('id'); 
            <apex:outputText rendered="{!packageTier == 'Base'}">
            if (dropLiId == "lblliUPLOAD"){
            showUpgradePrompt('File uploads are only available in Professional or Enterprise editions of Fast Forms.');                                                       
            } else {
            </apex:outputText>                          
                        litem.appendTo($("#parentUlForm li:nth-last-child(3) .mainTable tr td ul"));  
                        
                        if(dropLiId == "lblliCAPTCHA"){
                            var i = Math.floor((Math.random() * 1000) + 1);
                            dropLiId = dropLiId + i ;
                            litem.attr('id',dropLiId);
                            litem.find('label').attr('id','lblCAPTCHA'+i);
                            litem.find('#Captcha').attr('id','Captcha'+i); 
                            litem.find('.deleteField').attr('id','lblliCAPTCHA'+i); 
                            litem.find('#divFieldCAPTCHA').removeAttr('style'); 
                                                                   
                        }
                        if(dropLiId == "lblliGENERALTEXT"){
                            var i = Math.floor((Math.random() * 1000) + 1);
                            dropLiId = dropLiId + i ;
                            litem.attr('id',dropLiId);
                            litem.find('label').attr('id','lblGENERALTEXT'+i);
                            litem.find('.deleteField').attr('id','lblliGENERALTEXT'+i);
                                                                        
                        }
                        if(dropLiId == "lblliUPLOAD"){                                 
                            var i = Math.floor((Math.random() * 1000) + 1);
                            dropLiId = dropLiId + i ;
                            litem.attr('id',dropLiId);
                          
                                    
                            
                             litem.find('label').attr('id','FileUpload'+i+'_Select');
                             litem.find('label').attr('for','FileUpload'+i);

                             //added one line  - while editing File upload label it updates the fileupload text itself as well
                              litem.find('div[id^="divLabel"] label').attr('id', 'lblFileUpload' + i + '_Select');
                                    
                            litem.find('#FileUpload01').attr('name','FileUpload'+i);
                            litem.find('#FileUpload01').attr('id','FileUpload'+i);
                            //update Div
                            litem.find('#FileUploadAreaXX').attr('id','FileUploadArea'+i);
                            litem.find('#FileUploadDropAreaXX').attr('id','FileUploadDropArea'+i);
                            litem.find('#btnFileUploadAddXX').attr('id','btnFileUploadAdd'+i);
                            litem.find('.deleteField').attr('id','lblliUPLOAD'+i);                                                      
                            
                        }
                        litem.addClass('grabCursor');
                        litem.css('height','auto');
                        litem.css('display','list-item');
                        litem.attr('ondblclick' , "openEditDialog('"+ litem.attr('id')+"',true);");                
                        litem.find('.editImg').attr('onclick' , "openEditDialog('"+ litem.attr('id')+"',true);");
                        addRequiredMarkOnLabel();
                        //Active Save Button
                        $("#btnSaved").removeAttr('disabled');
                       /* $("#btnSaved").text('Save & Publish');*/
                        $("#btnSaved").removeClass('btnSaved').addClass('editorButton');                            
                        $(".dragDropInfoDiv").hide();
                        $(".arrowUpper").hide();
                        $(".addNewSection").css('margin-top','0%');
                        setHover();  
                        
                <apex:outputText rendered="{!packageTier == 'Base'}">
                }
                </apex:outputText>                        
                        
                    });
                    $("#generalSortableForFields > li").each(function(){
                        if($(this).html()==$(this).next().html())
                            $(this).remove();
                    });
                    

                    
                    
                }             
            });

            $('#generalSortableForFields.dropfields').bind('sortstart', function(event, ui) {
                var $uiItem = $(ui.item); 
                $uiItem.clone().show().insertBefore($uiItem);                              
            });
            $(".formUlField,.formUlLabel,#parentUlForm").bind('sortreceive', function () {            
                blockSort = false;                    
            }); 
            var blockSortRequired = false;
            $( "#sortableForFields" ).bind('sortstop', function (e) {
                if (blockSort) {
                    var selfId = $(this).attr('Id'); 
                    if(selfId == 'sortableForFields'){
                        e.preventDefault();                            
                    }                        
                }
                blockSort = true;
            });            
            //Keep the editor hidden until the user selects an object in the 'Select Object' list
            if( $('[id$="mergeTypeSelect"]' ).val() != '')
                $('[id$="pb2"]' ).show();
            else
                $('[id$="pb2"]').hide();
            
            
            if($("#parentUlForm").find('.Ulbtn').length==0){
                openNewButtonDialog();
                saveButton();
            }
            makeAllLiHeightEqual();            
            addNewSectionLi();
            makeFormSortable();
           
             if(RunOnces == 0){
               /* callObject();
                callObjectSecond();
                callObjectThird();*/
                 if( isSecNameElemExistsByIndex(0))
             {
                 console.log('First Related object added Secondary objects count-'+$(".ObjectName span.secName").length);
                  CallFirstRelatedObjectEditor();
                  if(!isSecNameElemExistsByIndex(1))
                 {
                   // setTitleSortable();
                 }
              }
              else
              {
              console.log('No Related object added');
              setTitleSortable();
              }
               
                 
                //fillSelect();
            }
            
            
            initScrollbar();
            console.log(' RunOnces-'+RunOnces);
            
            toggleAvailableFieldsMenu(1,$(this));
            $('#ListFirst .availableHeaderDiv').addClass("activeTab");
              if(RunOnces > 0){
              unBindAvailableFieldListClick();
              
                
            }
              fieldsToggleBind();
            RunOnces++;
            /*$('.editImg').bind('mouseover', function() {
                if($(this).attr("src")=='{!URLFOR($Resource.iconImages,'Edit.png')}')
                    $(this).attr("src","{!URLFOR($Resource.iconImages,'EditHover.png')}");
            });
            $('.editImg').bind('mouseout', function() {
                if($(this).attr("src")=='{!URLFOR($Resource.iconImages,'EditHover.png')}')
                    $(this).attr("src","{!URLFOR($Resource.iconImages,'Edit.png')}");
            });
            
            $('.deleteField').bind('mouseover', function() {
                $(this).attr("src","{!URLFOR($Resource.iconImages,'CloseHover.png')}");
              });
            $('.deleteField').bind('mouseout', function() {
                $(this).attr("src","{!URLFOR($Resource.iconImages,'Close.png')}");
            });*/
            $('.addNewSection').bind('click', function() {
                addNewSectionDetail();
            });
            var isAlreadyAdd=false;
            $('#generalFieldBox li').unbind('dblclick');
            $('#generalFieldBox li').dblclick(function() {              
                resetSavedButton();
                initScrollbar();           
                var litem = $(this).clone();
                litem=itemAdd(litem); 
                isAlreadyAdd=true;           
                litem.appendTo($("#parentUlForm li:nth-last-child(3) .mainTable tr td ul"));    
                var dropLiId = litem.attr('id');
                if(dropLiId == "lblliCAPTCHA"){
                    var i = Math.floor((Math.random() * 1000) + 1);
                    dropLiId = dropLiId + i ;
                    litem.attr('id',dropLiId);
                    litem.find('label').attr('id','lblCAPTCHA'+i);
                    litem.find('#Captcha').attr('id','Captcha'+i); 
                    litem.find('.deleteField').attr('id','lblliCAPTCHA'+i); 
                    litem.find('#divFieldCAPTCHA').removeAttr('style');
                    litem.find('[name="Captcha"]').removeAttr('style');
                                                   
                }
                if(dropLiId == "lblliGENERALTEXT"){
                    var i = Math.floor((Math.random() * 1000) + 1);
                    dropLiId = dropLiId + i ;
                    litem.attr('id',dropLiId);
                    litem.find('label').attr('id','lblGENERALTEXT'+i);
                    litem.find('.deleteField').attr('id','lblliGENERALTEXT'+i);
                                                        
                }
                if(dropLiId == "lblliUPLOAD"){                
                    var i = Math.floor((Math.random() * 1000) + 1);
                    dropLiId = dropLiId + i ;
                    litem.attr('id',dropLiId);
                    litem.find('label').attr('id','lblUPLOAD'+i);
                    litem.find('label').attr('for','FileUpload'+i);
                    
                    //change Add Select 
                    /* addd lbl prefix for id - april 13 2015*/
                    litem.find('div:first label').attr('id','lblFileUpload'+i+'_Select');
                    litem.find('label').attr('for','FileUpload'+i);
                    litem.find('.fieldDiv').find('label').attr('id','FileUpload'+i+'_Select');

                    litem.find('#FileUpload01').attr('name','FileUpload'+i);
                    litem.find('#FileUpload01').attr('id','FileUpload'+i);
                    //update Div
                    litem.find('#FileUploadAreaXX').attr('id','FileUploadArea'+i);
                    litem.find('#FileUploadDropAreaXX').attr('id','FileUploadDropArea'+i);
                    litem.find('#btnFileUploadAddXX').attr('id','btnFileUploadAdd'+i);
                    litem.find('.deleteField').attr('id','lblliUPLOAD'+i);
                    litem.find('.fieldDiv').removeAttr('style');                                              
                }
                litem.css('height','auto');
                litem.css('display','list-item');
                litem.addClass('grabCursor');                
                litem.attr('ondblclick' , "openEditDialog('"+ litem.attr('id')+"',true);");                
                litem.find('.editImg').attr('onclick' , "openEditDialog('"+ litem.attr('id')+"',true);");
                
                addRequiredMarkOnLabel();
                //Active Save Button
                $("#btnSaved").removeAttr('disabled');
               /* $("#btnSaved").text('Save & Publish');*/
                $("#btnSaved").removeClass('btnSaved').addClass('editorButton');                
                $(".dragDropInfoDiv").hide();
                $(".arrowUpper").hide();
                $(".addNewSection").css('margin-top','0%');
                setHover();
            });            
            activeClick();
            $('.sectionDisabled').unbind('dblclick');
            $('.sectionDisabled').dblclick(function() {
                //var litem = $(this).clone();
                openEditDialog($(this).attr('id'),false);
            });
            $("#gnFldImg").css('opacity',0);
            $(".gnFldImg").css('opacity',0);
            $("#generalFields").hover(function(){
                $(this).find("#gnFldImg").stop(true,true).animate({opacity: 1}, 400);
                $(this).find(".gnFldImg").stop(true,true).animate({opacity: 1}, 400);
            }, function() {
                $(this).find("#gnFldImg").stop(true,true).animate({opacity: 0}, 400);
                $(this).find(".gnFldImg").stop(true,true).animate({opacity: 0}, 400);
            });
            //togSet=true;
        }
        function toggleGenToAvail(){
            if(($('#ListFirstToggle').css('display') == 'none' || $('#ListFirstToggle').css('display') == undefined) && ($('#ListSecondToggle').css('display') == 'none' || $('#ListSecondToggle').css('display') == undefined)&& ($('#ListThirdToggle').css('display') == 'none' || $('#ListThirdToggle').css('display') == undefined) && ($('#ListFourthToggle').css('display') == 'none' || $('#ListFourthToggle').css('display') == undefined)){
                $("#gnFldImg").attr("src", "{!URLFOR($Resource.iconImages,'expand.png')}");   
                console.log(' toggleGenToAvail ');            
                toggleGenFieldsSection();              
            }
        }
          
         function CallRelatedObjectEditorIfNeeded(senderCount)
         {
         
         if(senderCount==1 && $(".ObjectName span.secName").length==1)
             {
              setTitleSortable();
             }
             if(senderCount==2 && $(".ObjectName span.secName").length==2)
             {
              setTitleSortable();
             }
             if(senderCount==1 && isSecNameElemExistsByIndex(1))
             {
                 console.log('Second Related object added');
                 CallSecondRelatedObjectEditor(); 
                  
              }
              else if(senderCount==2 && isSecNameElemExistsByIndex(2))
              {
                 console.log('Third Related object added');
                 CallThirdRelatedObjectEditor();

              }
         }
                 
        function setAvailableFieldsHeight()
        {
                    //set Toggle tabs Height 
                    bottomListHeight = 21;
                    
                    if($('#ListThird .availableHeaderDiv') != undefined && $('#ListThird .availableHeaderDiv').height()!=null && $('#ListThird .availableHeaderDiv').height() !=0){
                        bottomListHeight += 20+$('#ListThird .availableHeaderDiv').height();
                    }
                    if($('#ListFourth .availableHeaderDiv') != undefined && $('#ListFourth .availableHeaderDiv').height() != null && $('#ListFourth .availableHeaderDiv').height() != 0){
                        bottomListHeight += 20+$('#ListFourth .availableHeaderDiv').height();                            
                    }
                    if($('#ListSecond').css('display') != "none" && $('#ListSecond .availableHeaderDiv') != undefined &&  $('#ListSecond .availableHeaderDiv').height() != null && $('#ListSecond .availableHeaderDiv').height() != 0)
                        bottomListHeight += 10+$('#ListSecond .availableHeaderDiv').height();
                            
                    if($('#ListFirst .availableHeaderDiv') != undefined)
                        bottomListHeight += $('#ListFirst .availableHeaderDiv').height();               
                    
                    if($("#ListFirstToggle") != undefined){
                        $("#ListFirstToggle").height((459-bottomListHeight)+'px');   
                        $('#ListFirstToggle').jScrollPane({
                            contentWidth: '0px',
                            stickToBottom: true,
                            maintainPosition: true,
                            verticalGutter: 0,
                            mouseWheelSpeed: 60                          
                        });                   
                    }
                    if($("#ListSecondToggle") != undefined){
                        $("#ListSecondToggle").height((459-bottomListHeight)+'px');   
                        $('#ListSecondToggle').jScrollPane({
                            contentWidth: '0px',                        
                            stickToBottom: true,
                            maintainPosition: true,
                            verticalGutter: 0,
                            mouseWheelSpeed: 60                          
                        });                   
                }
                    if($("#ListThirdToggle") != undefined){
                        $("#ListThirdToggle").height((459-bottomListHeight)+'px');   
                        $('#ListThirdToggle').jScrollPane({
                            contentWidth: '0px',                        
                            stickToBottom: true,
                            maintainPosition: true,
                            verticalGutter: 0,
                            mouseWheelSpeed: 60                          
                        });                   
                }
            if($("#ListFourthToggle") != undefined){
                $("#ListFourthToggle").height((459-bottomListHeight)+'px');   
                $('#ListFourthToggle').jScrollPane({
                    contentWidth: '0px',
                    stickToBottom: true,
                    maintainPosition: true,
                    verticalGutter: 0,
                    mouseWheelSpeed: 60                          
            });
            }   


        }

        function toggleAvailableFieldsMenu(menuNum,elem)
        {
            switch (menuNum) {
              case 1:
                var listId = "#ListFirstToggle";
                var inactiveListId1 = '#ListSecond';
                var inactiveListId2 = '#ListThird';
                var inactiveListId3 = '#ListFourth';
                break;
              case 2:
                var listId = "#ListSecondToggle";
                var inactiveListId1 = '#ListFirst';
                var inactiveListId2 = '#ListThird';
                var inactiveListId3 = '#ListFourth';                
                break;
              case 3:
                var listId = "#ListThirdToggle";
                var inactiveListId2 = '#ListFirst';
                var inactiveListId1 = '#ListSecond';                
                var inactiveListId3 = '#ListFourth';                
                break;
              case 4:
                var listId = "#ListFourthToggle";
                var inactiveListId2 = '#ListFirst';
                var inactiveListId1 = '#ListSecond';                
                var inactiveListId3 = '#ListThird';                 
                break;
            }                
            
                isSection=false;
                removePrimaryLookupField();                  
                    
            $(".availableHeaderDiv")
                .unbind('hover');
            $(".availableHeaderDiv")
                .hover(function() {
                    $(this)
                        .find("img")
                        .first()
                        .stop(true, true)
                        .animate({
                            opacity: 1
                        }, 400);
                }, function() {
                    $(this)
                        .find("img")
                        .first()
                        .stop(true, true)
                        .animate({
                            opacity: 0
                        }, 400);
                });
                            
                            
            if($(elem).hasClass('activeTab')){
                $(elem).removeClass('activeTab');
                $(elem).find('img').removeClass('togHoverActive');
                $(listId).slideUp(300);
                setTimeout(function(){toggleGenToAvail()},350);
            }else{
                $(inactiveListId1 + ' .availableHeaderDiv').removeClass('activeTab');
                $(inactiveListId2 + ' .availableHeaderDiv').removeClass('activeTab');
                $(inactiveListId3 + ' .availableHeaderDiv').removeClass('activeTab');
                
                $(inactiveListId1 + ' .availableHeader').removeClass('togHoverActive');
                $(inactiveListId2 + ' .availableHeader').removeClass('togHoverActive');
                $(inactiveListId3 + ' .availableHeader').removeClass('togHoverActive');
                                                     
                $(inactiveListId1 + "Toggle").slideUp(100);                    
                $(inactiveListId2 + "Toggle").slideUp(100);
                $(inactiveListId3 + "Toggle").slideUp(100);
                    
                $(elem).addClass('activeTab');
                $(elem).find('img').addClass('togHoverActive');
                    
                setAvailableFieldsHeight();
                   $("#gnFldImg").attr("src", "{!URLFOR($Resource.iconImages,'collapse.png')}");
                   toggleGenFieldsSection();
                $(listId).slideDown(300, function() {

                        $(listId).jScrollPane({
                            contentWidth: '0px',                        
                            stickToBottom: true,
                            maintainPosition: true,
                            verticalGutter: 0,
                            mouseWheelSpeed: 60                          
                        });                   
                        $(listId).css("width", 256);
                        $(listId).find('.jspContainer').css("width",254);
                });
                
                sort($(listId + ' ul').attr('id'));
            }
        }

function unBindAvailableFieldListClick(){  
    $('#ListFirst .availableHeaderDiv').unbind('click');
            
            //Toggle Available field
            $('#ListSecond .availableHeaderDiv').unbind('click');
            
            //Toggle Available field
            $('#ListThird .availableHeaderDiv').unbind('click');
            
            //Toggle Available field
            $('#ListFourth .availableHeaderDiv').unbind('click');
        }
        function fieldsToggleBind(){            
            $( "body" ).click(function(event) {
                if($(event.target).attr('class') == 'genSection'){
                    isSection=true;                
                }
            });   
            //Toggle Available field
              
            $('#ListFirst .availableHeaderDiv').bind('click', function() {
                toggleAvailableFieldsMenu(1,$(this));
            });
            
            //Toggle Available field
            $('#ListSecond .availableHeaderDiv').bind('click', function() { 
                toggleAvailableFieldsMenu(2,$(this));
            });
            
            //Toggle Available field
            $('#ListThird .availableHeaderDiv').bind('click', function() { 
                toggleAvailableFieldsMenu(3,$(this));
            });
            
            //Toggle Available field
            $('#ListFourth .availableHeaderDiv').bind('click', function() { 
                toggleAvailableFieldsMenu(4,$(this));
            });   
                    
            //Primary Tab click
            //$('#ListFirst .availableHeaderDiv').click();
        }
        function sort(sortList) {
            var sortableList = $('#'+sortList);
            var listitems = $('li', sortableList);        
            listitems.sort(function (a, b) {        
                return $(a).text().toUpperCase().localeCompare($(b).text().toUpperCase());
            });
            sortableList.append(listitems);        
        }
        function initScrollbar(){
            $('#ListFirstToggle').jScrollPane({  
                stickToBottom: true,
                maintainPosition: true,
                verticalGutter: 0,
                mouseWheelSpeed: 60                  
            });
            
            $('#ListSecondToggle').jScrollPane({
                stickToBottom: true,
                maintainPosition: true,
                verticalGutter: 0,
                mouseWheelSpeed: 60                 
            });
            
            $('#ListThirdToggle').jScrollPane({
                stickToBottom: true,
                maintainPosition: true,
                verticalGutter: 0,
                mouseWheelSpeed: 60                 
            });
            
            $('#ListFourthToggle').jScrollPane({
                stickToBottom: true,
                maintainPosition: true,
                verticalGutter: 0,
                mouseWheelSpeed: 60                 
            });
            
            $('#ListFirstToggle').css("width", 256);
            $('#ListFirstToggle').find('.jspContainer').css("width",254);
            //var dragBar = $('#ListFirstToggle').find('.jspDrag');
            //var origHeight = $(dragBar).height();
            //var newHeight = origHeight + 90;
            //$(dragBar).css("height",newHeight);
                        
            $('#ListSecondToggle').css("width", 256);
            $('#ListSecondToggle').find('.jspContainer').css("width",254);
            //var dragBar = $('#ListSecondToggle').find('.jspDrag');
            //var origHeight = $(dragBar).height();
            //var newHeight = origHeight + 90;
            //$(dragBar).css("height",newHeight );
            
            $('#ListThirdToggle').css("width", 256);
            $('#ListThirdToggle').find('.jspContainer').css("width",254);
            //var dragBar = $('#ListThirdToggle').find('.jspDrag');
            //var origHeight = $(dragBar).height();
            //var newHeight = origHeight + 90;
            //$(dragBar).css("height",newHeight );
            
            $('#ListFourthToggle').css("width", 256);
            $('#ListFourthToggle').find('.jspContainer').css("width",254);
            //var dragBar = $('#ListFourthToggle').find('.jspDrag');
            //var origHeight = $(dragBar).height();
            //var newHeight = origHeight + 90;
            //$(dragBar).css("height",newHeight )        
        }         
       
        /* updated on dec 10 2014 - by balinder (functionality added - isreadonly */
       function activeClick() {
    $('#sortableForFields li').unbind();
    $('#sortableForFieldsNew li').unbind();
    $('#sortableForFieldsThird li').unbind();
    $('#sortableForFieldsFourth li').unbind();
    $('#sortableForFields li').dblclick(function () {
        resetSavedButton();
        hideSection();
        var litem = $(this).clone();
        litem = itemAdd(litem);
        if (/RecordTypeId/i.test(litem.attr('id'))) {
            litem.find('label').addClass('grayLabel');
        }
        //var addObjName = $('#sortableForFields li').attr('obj');
        var addObjName = $("#priName").text();
        //Extra div for List Name
        litem.find('label').after('<span class="listName" style="display:none">sortableForFields</span>');
        litem.find('label').first().after('<br/><span class="addObjName"><i>From : ' + addObjName + '</i></span>');
        litem.addClass('sortableForFields');

        if ($(litem).attr("isrequired") == true || $(litem).attr("isrequired") == "true") {
            $(litem).find('.deleteField').remove();
        }
        litem.attr('ondblclick', "openEditDialog('" + litem.attr('id') + "',true);");
        litem.appendTo($("#parentUlForm li:nth-last-child(3) .mainTable tr td ul"));
        $(this).remove();
        setHover();
    });
    $('#sortableForFieldsNew li').dblclick(function () {
        resetSavedButton();
        hideSection();
        var litem = $(this).clone();
        litem = itemAdd(litem);
        if (/RecordTypeId/i.test(litem.attr('id'))) {
            litem.find('label').addClass('grayLabel');
        }
        var addObjName = $('#ListSecond').find('.objName').text().replace('Fields', 'Object');
        //Extra div for List Name
        /*litem.find('label').after('<span class="listName" style="display:none">sortableForFieldsNew</span>');
        litem.find('label').first().after('<br/><span class="addObjName"><i>From : '+addObjName+'</i></span>');
        litem.addClass('sortableForFieldsNew');*/
        var lblName = $(litem).find('label').attr('id').replace('lbl', '');
        var colorBar = '';
        litem.removeAttr('style');
        var txtImage = $("#ListSecond .objName").css('background-image');
        if (txtImage != undefined && txtImage != 'none') {
            if (txtImage.indexOf("A.png") >= 1) {
                litem.addClass('A');
                litem.attr('id', litem.attr('id') + 'A');
                litem.attr('ondblclick', "openEditDialog('" + (litem.attr('id') + 'A') + "',true);");
                litem.find('label').attr('id', litem.find('label').attr('id') + 'A');
                //for change ID of TextBox;
                if (litem.find('input[type="textbox"]').attr('id') != undefined)
                    litem.find('input[type="textbox"]').attr('id', litem.find('input[type="textbox"]').attr('id') + 'A');
                if (litem.find('input[type="select"]').attr('id') != undefined)
                    litem.find('input[type="select"]').attr('id', litem.find('input[type="select"]').attr('id') + 'A');

                if (litem.find('textarea').attr('id') != undefined)
                    litem.find('textarea').attr('id', litem.find('textarea').attr('id') + 'A');
                if (litem.find('select').attr('id') != undefined)
                    litem.find('select').attr('id', litem.find('select').attr('id') + 'A');

                litem.find('.editImg').attr('onclick', "openEditDialog('" + litem.attr('id') + "',true);");
                litem.find('.deleteField').attr('id', litem.attr('id'));
                colorBar = "A";
            }
        } else {
            litem.removeClass('A');
            var midName = '';
            var str = litem.find('div').attr('id').replace('divLabel', '');
            $("#sortableForFields").find('li').each(function () {
                if ($("#ListSecond .objName").css('background-image') == 'none') {
                    if ($(this).attr("title") == "REFERENCE" && $('#ListSecond').css('display') != 'none' && $(this).find('div').attr('lblname') == $('#ListSecond').find('.objName').text().substring(0, $('#ListSecond').find('.objName').text().indexOf('(') - 1)) {
                        midName = $(this).find('label').attr('id').replace('lbl', '');
                    }
                }
            });

            var priObj = str.substring(0, str.indexOf('.') + 1);
            var fldObj = str.substring(str.lastIndexOf('.'));
            var inputIdStr = priObj + midName + fldObj;
            //for change ID of TextBox;
            if (litem.find('input[type="textbox"]').attr('id') != undefined) {
                litem.find('input[type="textbox"]').attr('id', inputIdStr);
                litem.find('input[type="textbox"]').attr('name', inputIdStr);
            }
            if (litem.find('input[type="select"]').attr('id') != undefined) {
                litem.find('input[type="select"]').attr('id', inputIdStr);
                litem.find('input[type="select"]').attr('name', inputIdStr);
            }
            if (litem.find('textarea').attr('id') != undefined) {
                litem.find('textarea').attr('id', inputIdStr);
                litem.find('textarea').attr('name', inputIdStr);
            }
            if (litem.find('select').attr('id') != undefined) {
                litem.find('select').attr('id', inputIdStr);
                litem.find('select').attr('name', inputIdStr);
            }
            litem.attr('ondblclick', "openEditDialog('" + litem.attr('id') + "',true);");
        }

        litem.find('label').after('<span class="listName" style="display:none">sortableForFieldsNew ' + colorBar + '</span>');
        litem.find('label').first().after('<br/><span class="addObjName"><i>From : ' + addObjName + '</i></span>');
        litem.find('#isDefaultRequired' + lblName).attr('id', $('#isDefaultRequired' + lblName).attr('id') + colorBar);
        litem.find('#isUserSelectedRequired' + lblName).attr('id', $('#isUserSelectedRequired' + lblName).attr('id') + colorBar);
        litem.find('#errMsgForRequired' + lblName).attr('id', $('#errMsgForRequired' + lblName).attr('id') + colorBar);
        litem.find('#defaultValue' + lblName).attr('id', $('#defaultValue' + lblName).attr('id') + colorBar);
        litem.find('#hideField' + lblName).attr('id', $('#hideField' + lblName).attr('id') + colorBar);
        litem.find('#isReadOnly' + lblName).attr('id', $('#isReadOnly' + lblName).attr('id') + colorBar);
        litem.find('#upsertField' + lblName).attr('id', $('#upsertField' + lblName).attr('id') + colorBar);

        litem.addClass('sortableForFieldsNew');
        if ($(litem).attr("isrequired") == true || $(litem).attr("isrequired") == "true") {
            $(litem).find('.deleteField').remove();
        }

        litem.appendTo($("#parentUlForm li:nth-last-child(3) .mainTable tr td ul"));
        $(this).remove();
        setHover();
    });
    $('#sortableForFieldsThird li').dblclick(function () {
        resetSavedButton();
        hideSection();
        var litem = $(this).clone();
        litem = itemAdd(litem);
        if (/RecordTypeId/i.test(litem.attr('id'))) {
            litem.find('label').addClass('grayLabel');
        }
        var addObjName = $('#ListThird').find('.objName').text().replace('Fields', 'Object');
        //Extra div for List Name
        /*litem.find('label').after('<span class="listName" style="display:none">sortableForFieldsThird</span>');
        litem.find('label').first().after('<br/><span class="addObjName"><i>From : '+addObjName+'</i></span>');
        litem.addClass('sortableForFieldsThird');*/
        litem.removeAttr('style');
        var lblName = $(litem).find('label').attr('id').replace('lbl', '');
        var colorBar = '';
        var txtImage = $("#ListThird .objName").css('background-image');
        if (txtImage != undefined && txtImage != 'none') {
            if (txtImage.indexOf("A.png") >= 1) {
                litem.addClass('A');
                litem.attr('id', litem.attr('id') + 'A');
                litem.attr('ondblclick', "openEditDialog('" + (litem.attr('id') + 'A') + "',true);");
                litem.find('label').attr('id', litem.find('label').attr('id') + 'A');
                //litem.find('input').attr('id',litem.find('input').attr('id')+'A');
                if (litem.find('input[type="textbox"]').attr('id') != undefined)
                    litem.find('input[type="textbox"]').attr('id', litem.find('input[type="textbox"]').attr('id') + 'A');
                if (litem.find('input[type="select"]').attr('id') != undefined)
                    litem.find('input[type="select"]').attr('id', litem.find('input[type="select"]').attr('id') + 'A');
                if (litem.find('textarea').attr('id') != undefined)
                    litem.find('textarea').attr('id', litem.find('textarea').attr('id') + 'A');
                if (litem.find('select').attr('id') != undefined)
                    litem.find('select').attr('id', litem.find('select').attr('id') + 'A');



                litem.find('.editImg').attr('onclick', "openEditDialog('" + litem.attr('id') + "',true);");
                litem.find('.deleteField').attr('id', litem.attr('id'));
                colorBar = "A";
            }
            if (txtImage.indexOf("B.png") >= 1) {
                litem.addClass('B');
                litem.attr('id', litem.attr('id') + 'B');
                litem.attr('ondblclick', "openEditDialog('" + (litem.attr('id') + 'B') + "',true);");
                litem.find('label').attr('id', litem.find('label').attr('id') + 'B');
                //litem.find('input').attr('id',litem.find('input').attr('id')+'B');
                if (litem.find('input[type="textbox"]').attr('id') != undefined)
                    litem.find('input[type="textbox"]').attr('id', litem.find('input[type="textbox"]').attr('id') + 'B');
                if (litem.find('input[type="select"]').attr('id') != undefined)
                    litem.find('input[type="select"]').attr('id', litem.find('input[type="select"]').attr('id') + 'B');
                if (litem.find('textarea').attr('id') != undefined)
                    litem.find('textarea').attr('id', litem.find('textarea').attr('id') + 'B');
                if (litem.find('select').attr('id') != undefined)
                    litem.find('select').attr('id', litem.find('select').attr('id') + 'B');

                litem.find('.editImg').attr('onclick', "openEditDialog('" + litem.attr('id') + "',true);");
                litem.find('.deleteField').attr('id', litem.attr('id'));
                colorBar = "B";
            }
        } else {
            litem.removeClass('A');
            var midName = '';
            var str = litem.find('div').attr('id').replace('divLabel', '');
            $("#sortableForFields").find('li').each(function () {
                if ($("#ListThird .objName").css('background-image') == 'none') {
                    if ($(this).attr("title") == "REFERENCE" && $('#ListThird').css('display') != 'none' && $(this).find('div').attr('lblname') == $('#ListThird').find('.objName').text().substring(0, $('#ListThird').find('.objName').text().indexOf('(') - 1)) {
                        midName = $(this).find('label').attr('id').replace('lbl', '');
                    }
                }
            });

            var priObj = str.substring(0, str.indexOf('.') + 1);
            var fldObj = str.substring(str.lastIndexOf('.'));
            var inputIdStr = priObj + midName + fldObj;
            //for change ID of TextBox;
            if (litem.find('input[type="textbox"]').attr('id') != undefined) {
                litem.find('input[type="textbox"]').attr('id', inputIdStr);
                litem.find('input[type="textbox"]').attr('name', inputIdStr);
            }
            if (litem.find('input[type="select"]').attr('id') != undefined) {
                litem.find('input[type="select"]').attr('id', inputIdStr);
                litem.find('input[type="select"]').attr('name', inputIdStr);
            }
            if (litem.find('textarea').attr('id') != undefined) {
                litem.find('textarea').attr('id', inputIdStr);
                litem.find('textarea').attr('name', inputIdStr);
            }
            if (litem.find('select').attr('id') != undefined) {
                litem.find('select').attr('id', inputIdStr);
                litem.find('select').attr('name', inputIdStr);
            }
            litem.attr('ondblclick', "openEditDialog('" + litem.attr('id') + "',true);");
        }
        litem.find('label').after('<span class="listName" style="display:none">sortableForFieldsThird ' + colorBar + '</span>');
        litem.find('label').first().after('<br/><span class="addObjName"><i>From : ' + addObjName + '</i></span>');
        litem.addClass('sortableForFieldsThird');
        litem.find('#isDefaultRequired' + lblName).attr('id', $('#isDefaultRequired' + lblName).attr('id') + colorBar);
        litem.find('#isUserSelectedRequired' + lblName).attr('id', $('#isUserSelectedRequired' + lblName).attr('id') + colorBar);
        litem.find('#errMsgForRequired' + lblName).attr('id', $('#errMsgForRequired' + lblName).attr('id') + colorBar);
        litem.find('#defaultValue' + lblName).attr('id', $('#defaultValue' + lblName).attr('id') + colorBar);
        litem.find('#hideField' + lblName).attr('id', $('#hideField' + lblName).attr('id') + colorBar);
        litem.find('#isReadOnly' + lblName).attr('id', $('#isReadOnly' + lblName).attr('id') + colorBar);
        litem.find('#upsertField' + lblName).attr('id', $('#upsertField' + lblName).attr('id') + colorBar);


        if ($(litem).attr("isrequired") == true || $(litem).attr("isrequired") == "true") {
            $(litem).find('.deleteField').remove();
        }
        litem.attr('ondblclick', "openEditDialog('" + litem.attr('id') + "',true);");
        litem.appendTo($("#parentUlForm li:nth-last-child(3) .mainTable tr td ul"));
        $(this).remove();
        setHover();
    });

    $('#sortableForFieldsFourth li').dblclick(function () {
        resetSavedButton();
        hideSection();
        var litem = $(this).clone();
        litem = itemAdd(litem);
        if (/RecordTypeId/i.test(litem.attr('id'))) {
            litem.find('label').addClass('grayLabel');
        }
        var addObjName = $('#ListFourth').find('.objName').text().replace('Fields', 'Object');
        //Extra div for List Name
        /*litem.find('label').after('<span class="listName" style="display:none">sortableForFieldsFourth</span>');
        litem.find('label').first().after('<br/><span class="addObjName"><i>From : '+addObjName+'</i></span>');
        litem.addClass('sortableForFieldsFourth');*/
        litem.removeAttr('style');
        var lblName = $(litem).find('label').attr('id').replace('lbl', '');
        var colorBar = '';
        var txtImage = $("#ListFourth .objName").css('background-image');
        if (txtImage != undefined && txtImage != 'none') {
            if (txtImage.indexOf("A.png") >= 1) {
                litem.addClass('A');
                litem.attr('id', litem.attr('id') + 'A')
                litem.attr('ondblclick', "openEditDialog('" + (litem.attr('id') + 'A') + "',true);");
                litem.find('label').attr('id', litem.find('label').attr('id') + 'A');
                //litem.find('input').attr('id',litem.find('input').attr('id')+'A');
                if (litem.find('input[type="textbox"]').attr('id') != undefined)
                    litem.find('input[type="textbox"]').attr('id', litem.find('input[type="textbox"]').attr('id') + 'A');
                if (litem.find('input[type="select"]').attr('id') != undefined)
                    litem.find('input[type="select"]').attr('id', litem.find('input[type="select"]').attr('id') + 'A');
                if (litem.find('textarea').attr('id') != undefined)
                    litem.find('textarea').attr('id', litem.find('textarea').attr('id') + 'A');
                if (litem.find('select').attr('id') != undefined)
                    litem.find('select').attr('id', litem.find('select').attr('id') + 'A');

                litem.find('.editImg').attr('onclick', "openEditDialog('" + litem.attr('id') + "',true);");
                litem.find('.deleteField').attr('id', litem.attr('id'));
                colorBar = "A";
            }
            if (txtImage.indexOf("B.png") >= 1) {
                litem.addClass('B');
                litem.attr('id', litem.attr('id') + 'B')
                litem.attr('ondblclick', "openEditDialog('" + (litem.attr('id') + 'B') + "',true);");
                litem.find('label').attr('id', litem.find('label').attr('id') + 'B');
                //litem.find('input').attr('id',litem.find('input').attr('id')+'B');
                if (litem.find('input[type="textbox"]').attr('id') != undefined)
                    litem.find('input[type="textbox"]').attr('id', litem.find('input[type="textbox"]').attr('id') + 'B');
                if (litem.find('input[type="select"]').attr('id') != undefined)
                    litem.find('input[type="select"]').attr('id', litem.find('input[type="select"]').attr('id') + 'B');
                if (litem.find('textarea').attr('id') != undefined)
                    litem.find('textarea').attr('id', litem.find('textarea').attr('id') + 'B');
                if (litem.find('select').attr('id') != undefined)
                    litem.find('select').attr('id', litem.find('select').attr('id') + 'B');

                litem.find('.editImg').attr('onclick', "openEditDialog('" + litem.attr('id') + "',true);");
                litem.find('.deleteField').attr('id', litem.attr('id'));
                colorBar = "B";
            }
            if (txtImage.indexOf("C.png") >= 1) {
                litem.addClass('C');
                litem.attr('id', litem.attr('id') + 'C')
                litem.attr('ondblclick', "openEditDialog('" + (litem.attr('id') + 'C') + "',true);");
                litem.find('label').attr('id', litem.find('label').attr('id') + 'C');
                //litem.find('input').attr('id',litem.find('input').attr('id')+'C');
                if (litem.find('input[type="textbox"]').attr('id') != undefined)
                    litem.find('input[type="textbox"]').attr('id', litem.find('input[type="textbox"]').attr('id') + 'C');
                if (litem.find('input[type="select"]').attr('id') != undefined)
                    litem.find('input[type="select"]').attr('id', litem.find('input[type="select"]').attr('id') + 'C');
                if (litem.find('textarea').attr('id') != undefined)
                    litem.find('textarea').attr('id', litem.find('textarea').attr('id') + 'C');
                if (litem.find('select').attr('id') != undefined)
                    litem.find('select').attr('id', litem.find('select').attr('id') + 'C');

                litem.find('.editImg').attr('onclick', "openEditDialog('" + litem.attr('id') + "',true);");
                litem.find('.deleteField').attr('id', litem.attr('id'));
                colorBar = "C";
            }
        } else {
            litem.removeClass('A');
            var midName = '';
            var str = litem.find('div').attr('id').replace('divLabel', '');
            $("#sortableForFields").find('li').each(function () {
                if ($("#ListFourth .objName").css('background-image') == 'none') {
                    if ($(this).attr("title") == "REFERENCE" && $('#ListFourth').css('display') != 'none' && $(this).find('div').attr('lblname') == $('#ListFourth').find('.objName').text().substring(0, $('#ListFourth').find('.objName').text().indexOf('(') - 1)) {
                        midName = $(this).find('label').attr('id').replace('lbl', '');
                    }
                }
            });

            var priObj = str.substring(0, str.indexOf('.') + 1);
            var fldObj = str.substring(str.lastIndexOf('.'));
            var inputIdStr = priObj + midName + fldObj;
            //for change ID of TextBox;
            if (litem.find('input[type="textbox"]').attr('id') != undefined) {
                litem.find('input[type="textbox"]').attr('id', inputIdStr);
                litem.find('input[type="textbox"]').attr('name', inputIdStr);
            }
            if (litem.find('input[type="select"]').attr('id') != undefined) {
                litem.find('input[type="select"]').attr('id', inputIdStr);
                litem.find('input[type="select"]').attr('name', inputIdStr);
            }
            if (litem.find('textarea').attr('id') != undefined) {
                litem.find('textarea').attr('id', inputIdStr);
                litem.find('textarea').attr('name', inputIdStr);
            }
            if (litem.find('select').attr('id') != undefined) {
                litem.find('select').attr('id', inputIdStr);
                litem.find('select').attr('name', inputIdStr);
            }
            litem.attr('ondblclick', "openEditDialog('" + litem.attr('id') + "',true);");
        }
        litem.find('label').after('<span class="listName" style="display:none">sortableForFieldsFourth ' + colorBar + '</span>');
        litem.find('label').first().after('<br/><span class="addObjName"><i>From : ' + addObjName + '</i></span>');
        litem.addClass('sortableForFieldsFourth');
        litem.find('#isDefaultRequired' + lblName).attr('id', $('#isDefaultRequired' + lblName).attr('id') + colorBar);
        litem.find('#isUserSelectedRequired' + lblName).attr('id', $('#isUserSelectedRequired' + lblName).attr('id') + colorBar);
        litem.find('#errMsgForRequired' + lblName).attr('id', $('#errMsgForRequired' + lblName).attr('id') + colorBar);
        litem.find('#defaultValue' + lblName).attr('id', $('#defaultValue' + lblName).attr('id') + colorBar);
        litem.find('#hideField' + lblName).attr('id', $('#hideField' + lblName).attr('id') + colorBar);
        litem.find('#isReadOnly' + lblName).attr('id', $('#isReadOnly' + lblName).attr('id') + colorBar);
        litem.find('#upsertField' + lblName).attr('id', $('#upsertField' + lblName).attr('id') + colorBar);

        if ($(litem).attr("isrequired") == true || $(litem).attr("isrequired") == "true") {
            $(litem).find('.deleteField').remove();
        }
        litem.attr('ondblclick', "openEditDialog('" + litem.attr('id') + "',true);");
        litem.appendTo($("#parentUlForm li:nth-last-child(3) .mainTable tr td ul"));
        $(this).remove();
        setHover();
    });
    setLiHover();
    setHover();
    }
 function setLiHover() {
 $('#sortableForFieldsNew li').hover(
           function () {
               var txt = $("#ListSecond .objName").css('background-image');
               if (txt != undefined) {
                   if (txt.indexOf("A.png") >= 1) {
                       $(this).css('border-left', '3px solid #d9217d');
                      $(this).css('padding-left', '0px');
                   }
               }

           },
           function () {
               var txt = $("#ListSecond .objName").css('background-image');
               if (txt != undefined) {
                   if (txt.indexOf("A.png") >= 1) {
                       $(this).css('border-left', 'none');
                       $(this).css('padding-left', '3px');
                   }
               }
           }
    );
    $('#sortableForFieldsThird li').hover(
             function () {
                 var txt = $("#ListThird .objName").css('background-image');
                 if (txt != undefined) {
                     if (txt.indexOf("A.png") >= 1) {
                         $(this).css('border-left', '3px solid #d9217d');
                       $(this).css('padding-left', '0px');
                     }
                     if (txt.indexOf("B.png") >= 1) {
                         $(this).css('border-left', '3px solid #00cc00');
                       $(this).css('padding-left', '0px');
                     }
                 }

             },
             function () {
                 var txt = $("#ListThird .objName").css('background-image');
                 if (txt != undefined) {
                     if (txt.indexOf("A.png") >= 1) {
                         $(this).css('border-left', 'none');
                         $(this).css('padding-left', '3px');
                     }
                     if (txt.indexOf("B.png") >= 1) {
                         $(this).css('border-left', 'none');
                         $(this).css('padding-left', '3px');
                     }
                 }
             }
    );
    $('#sortableForFieldsFourth li').hover(
             function () {
                 var txt = $("#ListFourth .objName").css('background-image');
                 if (txt != undefined) {
                     if (txt.indexOf("A.png") >= 1) {
                         $(this).css('border-left', '3px solid #d9217d');
                        $(this).css('padding-left', '0px');
                     }
                     if (txt.indexOf("B.png") >= 1) {
                         $(this).css('border-left', '3px solid #00cc00');
                         $(this).css('padding-left', '0px');
                     }
                     if (txt.indexOf("C.png") >= 1) {
                         $(this).css('border-left', '3px solid #7d21d9');
                         $(this).css('padding-left', '0px');
                     }
                 }

             },
             function () {
                 var txt = $("#ListFourth .objName").css('background-image');
                 if (txt != undefined) {
                     if (txt.indexOf("A.png") >= 1) {
                         $(this).css('border-left', 'none');
                         $(this).css('padding-left', '3px');
                     }
                     if (txt.indexOf("B.png") >= 1) {
                         $(this).css('border-left', 'none');
                        $(this).css('padding-left', '3px');
                     }
                     if (txt.indexOf("C.png") >= 1) {
                         $(this).css('border-left', 'none');
                         $(this).css('padding-left', '3px');
                     }
                 }
             }
    );
 }
 function getColorCode(liElement) {
    var childElemClass = '';
    if ($(liElement).hasClass('A')) {
        childElemClass = 'A';
    }
    else if ($(liElement).hasClass('B')) {
        childElemClass = 'B';
    }
    else if ($(liElement).hasClass('C')) {
        childElemClass = 'C';
    }
    return childElemClass;
}
function getFormattedElemId(liElement) {
    var childElemClass = '';
    if ($(liElement).hasClass('A')) {
        childElemClass = 'A';
    }
    if ($(liElement).hasClass('B')) {
        childElemClass = 'B';
    }
    if ($(liElement).hasClass('C')) {
        childElemClass = 'C';
    }
    var elementName = '';
    $(liElement).find('.fieldDiv').find('input[type=text], input[type=textbox],input[type=checkbox],textarea,select').each(function (index) {
    if(index==0)
    {
        elementName = $(this).attr('name');
        
        return false;
        }
    });
    var finalElemId = elementName;
    if (childElemClass != '') {
        console.log(' finalElemId 1 ' + finalElemId);
        finalElemId = elementName.substring(0, elementName.lastIndexOf('.') );
         
        finalElemId = finalElemId + '.' + childElemClass + '.' + elementName.substring(elementName.lastIndexOf('.') + 1);

        
    }

    return finalElemId;
}
function getElementObjectType(liElement) {
    var objectType = '';
     
    if ($(liElement).hasClass('sortableForFields')) {
        objectType = 'PRIMARY';
    }
    else {
        if ($(liElement).hasClass('A') || $(liElement).hasClass('B') || $(liElement).hasClass('C')) {
            objectType = 'DETAIL';
        }
        else {
            objectType = 'LOOKUP';
        }
    }

    return objectType;
}
    
   /*call to save function */

function save(isPreview, isAutosave) {

    $('.button').removeClass('active');
    calcualteFormInformation();
    /*if ($("#" + $("#hiddenLiId").val()).find(".ExpandDiv").length > 0) {
        $("#" + $("#hiddenLiId").val()).find(".ExpandDiv").parent().find('.editImg').click();
    }*/
    if (!isPreview && !isAutosave) {
        $("#btnSaved").attr('disabled', "disabled");
        $("#btnSaved").text('Publishing...');
        $("#btnSaved").removeClass('va-disabled');
        /* $("#dialogSucess").dialog("open");*/
        $('#ui-id-1').text('Processing...');
        $("#success").hide();
        $("#Processing").show();
    } else if (isPreview) {
        $('#tabList tr td').find('.button').each(function () {
            if ($(this).text() == 'Preview') {
                $(this).addClass('active');
            }
        });
    }
    var resultHtml = '<div>';
    var finalResultHtml = '<div class="ff-form-main" >';
    var fieldsXml = '';
    fieldsXml += '<page>';
    var fieldsObjectXml = '';
    var grouprowIndex = 0;
    $("#parentUlForm li").each(function (liindex) {
        if ($(this).find("ul").length > 0) {
            /* IF li has ul element - means has section and field ends*/
            var counter = 0;
            var allLabels = [];
            var allFields = [];
            var sectionDetailList = [];
            var allLabelsId = [];
            var allFieldsId = [];
            var allFieldsVatt = [];
            var allFieldsTootTip = [];
            var allFieldsIsHide = [];
            var nameOfLabel;
            var maxLength;
            var checkboxDefaulVal;
            var fieldVatt = '';
            var opt = '';
            var nameOfLabeltmp = '';
            var fieldLabelVatt = '';
            var sectionId = '';
            var sectionClass = '';
            if ($(this).has(".formUlLabel").length) {
                $(this).find('.formUlLabel').each(function () {


                    if ($(this).find('li').length > 0) {
                        /*added on 25 feb 2015 by bal for conditional logic objects information */
                        var sectionlabel = '';
                        try {
                            sectionlabel = escape($(this).find('li.lbl').first().find('label').first().text());

                            //console.log(' Section names- ' + $(this).find('li.lbl').first().find('label').first().text());
                        }
                        catch (err) {

                        }

                        sectionId = $(this).attr('id').replace('labelformUl', 'ffSection');
                        fieldsXml += "<section id='" + sectionId + "' name='" + sectionlabel + "' >";
                    }
                    $(this).find('li').each(function () {
                        if ($(this).hasClass('lbl') == false) {
                                var objectname='';
                                            if ( $(this).hasClass('sortableForFields')) {
                                 objectname=  $('#ListFirst .objName').text() 
                                }
                                else if ( $(this).hasClass('sortableForFieldsNew')) {
                                  objectname= $('#ListSecond .objName').text() 
                                }
                                else if ( $(this).hasClass('sortableForFieldsThird')) {
                                  objectname= $('#ListThird .objName').text() 
                                }
                                else if ( $(this).hasClass('sortableForFieldsFourth')) {
                                  objectname= $('#ListFourth .objName').text() 
                                }
                                else
                                {
                                    objectname='General';
                                }
                            //if($(this).css('display') != 'none'){
                            //For label                                    
                            $("#tempLabelFieldDiv").html($(this).find('div:first').clone().wrap('<p>').parent().html());

                            var fieldTitle = $("#tempLabelFieldDiv").find('label').text().trim();/*added on 25 feb 2015 by bal for conditional logic objects information */
                            nameOfLabel = $("#tempLabelFieldDiv").find('label').attr('id');
                            nameOfLabeltmp = nameOfLabel;
                            //  console.log(' <br/>-----' + $("#tempLabelFieldDiv").html());
                            maxLength = $(document.getElementsByName($('#' + nameOfLabel).parent().attr('id').replace('divLabel', ''))[0]).attr('data-maxlength')

                            var inputId = $('#' + nameOfLabel).parent().attr('id').replace('divLabel', 'divField');



                            var newPreId = $('#' + nameOfLabel).parent().attr('id').replace('divLabel', '');
                            newPreIdnew = newPreId.substring(newPreId.lastIndexOf('.') + 1, newPreId.length);
                            //xml string check...                                    
                            realId = $(document.getElementById(inputId)).find(':input').attr('id');
                            opt = $(document.getElementById(realId)).html();

                            //$(document.getElementById(newPreId.replace(newPreIdnew,nameOfLabel.replace('lbl','')))).html();                                    
                            //opt=$(document.getElementById($('#'+nameOfLabel).parent().attr('id').replace('divLabel',''))).html();

                            nameOfLabel = nameOfLabel.replace('lbl', '');
                            fieldLabelVatt = $("#tempLabelFieldDiv").find('label').attr('vatt');

                            //hide lable and field li if field is hide == true 
                            var isHide = $("#hideField" + nameOfLabel).val();
                            if (isHide == "true") {
                                $("#tempLabelFieldDiv").find('div:first').hide();
                            } else {
                                $("#tempLabelFieldDiv").find('div:first').show();
                            }
                            $("#tempLabelFieldDiv").find('.deleteField').remove();
                            allLabels[counter] = $("#tempLabelFieldDiv").html();
                            allLabelsId[counter] = $(this).attr('id').replace('li', '');

                            /*Saving required and required messaged*/
                            fieldsXml += '<field>';

                            //fieldsXml +='<Object>'+ $("#tempLabelFieldDiv ").find('.addObjName').text() + '</Object>';

                            var setListName = $("#tempLabelFieldDiv").find('.listName').text();
                            setListName = setListName.replace('A', '');
                            setListName = setListName.replace('B', '');
                            setListName = setListName.replace('C', '');

                            fieldsXml += '<Object>' + setListName.trim() + '</Object>';
                            fieldsXml += '<objectName>' + objectname.trim() + '</objectName>';
                             fieldsXml += '<colorCode>' + getColorCode($(this)) + '</colorCode>';
                            
                            if (setListName.trim() != '') {
                                fieldsXml += '<objectType>' + getElementObjectType($(this)) + '</objectType>';
                            }
                            else {
                                fieldsXml += '<objectType>GENERAL</objectType>';
                            }
                            fieldsXml += '<label>' + escape(fieldTitle) + '</label>';/*added on 25 feb 2015 by bal for conditional logic objects information */
                            var tmpAttrID = '';
                            if (nameOfLabel.indexOf('_Select') >= 0) {
                                //file upload xml
                                tmpAttrID = nameOfLabel.replace('FileUpload', 'FileUploadArea');
                                tmpAttrID = tmpAttrID.replace('_Select', '');

                                 fieldsXml += '<elemId>' + tmpAttrID+ '</elemId>';
                                fieldsXml += '<name>' + escape(nameOfLabel.replace('_Select', '')) + '</name>';
                                fieldsXml += '<type>STRING</type>';
                                /* code modified - dec 9 2014 by balinder ends*/
                                if ($('#' + tmpAttrID).attr('data-allowedfiletypes') == undefined || $('#' + tmpAttrID).attr('data-allowedfiletypes') == '') {
                                    fieldsXml += '<allowedFileTypes></allowedFileTypes>';
                                }
                                else {
                                    fieldsXml += '<allowedFileTypes>' + $('#' + tmpAttrID).attr('data-allowedfiletypes') + '</allowedFileTypes>';
                                }
                                if ($('#' + tmpAttrID).attr('data-uploadtochatter') == undefined || $('#' + tmpAttrID).attr('data-uploadtochatter') == '') {
                                    fieldsXml += '<uploadToChatter>false</uploadToChatter>';
                                }
                                else {
                                    fieldsXml += '<uploadToChatter>' + $('#' + tmpAttrID).attr('data-uploadtochatter') + '</uploadToChatter>';
                                }
                                /* code modified - dec 9 2014 by balinder ends*/

                                fieldsXml += '<maxFiles>' + $('#' + tmpAttrID).attr('data-maxfiles') + '</maxFiles>';
                            }
                            else if (opt != '') {
                                var mainelem = $(this).find('.fieldDiv').find('input[type=textbox],input[type=text],input[type=checkbox],textarea,select').first();
                                /* fieldsXml += '<elemId>' + mainelem.attr("id") + '</elemId>';added on 25 feb 2015 by bal for conditional logic objects information */
                                
                                fieldsXml += '<elemId>' + getFormattedElemId($(this)) + '</elemId>';/*added on Mar 9,2015 by bal for conditional logic objects information */
                                
                                 
                                fieldsXml += '<name>' + escape(nameOfLabel) + '</name>';
                                fieldsXml += '<type>' + fieldLabelVatt + '</type>';
                                fieldsXml += '<picklistValues>';

                                $(opt + " option").each(function () {
                                    if ($(this).val() != '')
                                        fieldsXml += '<picklistValue><value>' + escape($(this).val()) + '</value></picklistValue>';
                                });
                                fieldsXml += '</picklistValues>';

                            } else {

                                var mainelem = $(this).find('.fieldDiv').find('input[type=textbox],input[type=text],input[type=checkbox],textarea,select').first();
                                /*fieldsXml += '<elemId>' + mainelem.attr("id") + '</elemId>';added on 25 feb 2015 by bal for conditional logic objects information */
                                if(fieldLabelVatt!='CAPTCHA')
                                {
                                      if(setListName.trim() == '' && fieldLabelVatt=='STRING')
                                    {
                                        /*element id for general fields*/
                                    fieldsXml += '<elemId>' + escape(nameOfLabel) + '</elemId>'; 
                                    }
                                    else
                                    {
                                      fieldsXml += '<elemId>' + getFormattedElemId($(this)) + '</elemId>';/*added on Mar 9,2015 by bal for conditional logic objects information */
                                    }
                                }
                                else
                                {
                                /*element id for captcha */
                                fieldsXml += '<elemId>' + nameOfLabel + '</elemId>';
                                }
                                fieldsXml += '<name>' + escape(nameOfLabel) + '</name>';
                                fieldsXml += '<type>' + fieldLabelVatt + '</type>';
                            }

                            if ($("#tempLabelFieldDiv").find('[vatt="REFERENCE"]').attr('id') != undefined || $("#tempLabelFieldDiv").find('.grayLabel').attr('id') != undefined) {
                                fieldsXml += '<hiddenField>true</hiddenField>';
                            } else {
                                fieldsXml += '<hiddenField>false</hiddenField>';
                            }

                            if ($("#tempLabelFieldDiv ").find('#isReadOnly' + nameOfLabel).val() == true || $("#tempLabelFieldDiv ").find('#isReadOnly' + nameOfLabel).val() == "true") {
                                fieldsXml += '<readOnly>true</readOnly>';
                            } else {
                                fieldsXml += '<readOnly>false</readOnly>';
                            }

                            if ($("#tempLabelFieldDiv ").find('#upsertField' + nameOfLabel).val() == true || $("#tempLabelFieldDiv ").find('#upsertField' + nameOfLabel).val() == "true") {
                                fieldsXml += '<upsert>true</upsert>';
                            } else {
                                fieldsXml += '<upsert></upsert>';
                            }

                            if ($("#tempLabelFieldDiv ").find('#defaultValue' + nameOfLabel).val() == undefined)
                                fieldsXml += '<defaultValue></defaultValue>';
                            else if ($("#tempLabelFieldDiv ").find('[vatt="REFERENCE"]').length > 0) {
                                var lookId = $("#tempLabelFieldDiv ").find('[vatt="REFERENCE"]').parent().attr('id');
                                lookId = lookId.replace('divLabel', '') + 'hidden';
                                fieldsXml += '<defaultValue>' + escape($(document.getElementById(lookId)).val()) + '</defaultValue>';
                            } else
                                fieldsXml += '<defaultValue>' + escape($("#tempLabelFieldDiv ").find('#defaultValue' + nameOfLabel).val()) + '</defaultValue>';



                            if (maxLength == undefined)
                                fieldsXml += '<maxLength></maxLength>';
                            else
                                fieldsXml += '<maxLength>' + maxLength + '</maxLength>';

                            $("#tempLabelFieldDiv").find('input[type="hidden"]').each(function (index) {
                                if (index == 1)
                                    fieldsXml += '<required>' + $(this).val() + '</required>';
                                if (index == 2) {
                                    if ($("#errMsgForRequired" + nameOfLabel).val() == "") {
                                        fieldsXml += '<requiredMessage>required</requiredMessage>';
                                    } else {
                                        if (nameOfLabel.indexOf('_Select') >= 0) {
                                            fieldsXml += '<requiredMessage>' + escape($('#' + tmpAttrID).attr('data-requiredmessage')) + '</requiredMessage>';
                                        } else {
                                            fieldsXml += '<requiredMessage>' + escape($(this).val()) + '</requiredMessage>';
                                        }
                                    }
                                }
                            });
                            fieldsXml += '</field>';
                            //For Field
                            allFieldsTootTip[counter] = $(this).attr('title');

                            //Set data-isrequired for Input 
                            $(this).find('.fieldDiv').find('select').attr('data-isrequired', $("#isUserSelectedRequired" + nameOfLabel).val());
                            $(this).find('.fieldDiv').find('input').attr('data-isrequired', $("#isUserSelectedRequired" + nameOfLabel).val());
                            $(this).find('.fieldDiv').find('textarea').attr('data-isrequired', $("#isUserSelectedRequired" + nameOfLabel).val());

                            //Set readonly att for Hidden
                            $(this).find('.fieldDiv').find('[vatt="REFERENCE"]').attr("readonly", true);

                            if ($(this).find("#hideField" + nameOfLabel).val() == "true") {
                                $(this).find('.fieldDiv').find('input').attr("hidefield", true);
                                $(this).find('.fieldDiv').find('textarea').attr("hidefield", true);
                                $(this).find('.fieldDiv').find('select').attr("hidefield", true);
                            }

                            if ($(this).find("#isReadOnly" + nameOfLabel).val() == "true") {
                                $(this).find('.fieldDiv').find('input').attr("disabled", true);
                                $(this).find('.fieldDiv').find('textarea').attr("disabled", true);
                                $(this).find('.fieldDiv').find('select').attr("disabled", true);

                            }
                            else {
                                $(this).find('.fieldDiv').find('input').removeAttr("disabled");
                                $(this).find('.fieldDiv').find('textarea').removeAttr("disabled");
                                $(this).find('.fieldDiv').find('select').removeAttr("disabled");
                            }

                            //Set data-requiredmessage Default
                            if ($(this).find("#errMsgForRequired" + nameOfLabel).val() == "") {
                                $(this).find('.fieldDiv').find('select').attr('data-requiredmessage', 'required');
                                $(this).find('.fieldDiv').find('input').attr('data-requiredmessage', 'required');
                                $(this).find('.fieldDiv').find('textarea').attr('data-requiredmessage', 'required');
                            } else {
                                $(this).find('.fieldDiv').find('select').attr('data-requiredmessage', $("#errMsgForRequired" + nameOfLabel).val());
                                $(this).find('.fieldDiv').find('input').attr('data-requiredmessage', $("#errMsgForRequired" + nameOfLabel).val());
                                $(this).find('.fieldDiv').find('textarea').attr('data-requiredmessage', $("#errMsgForRequired" + nameOfLabel).val());
                            }


                            if ($(this).find('.fieldDiv').find('#CAPTCHAINPUT').length > 0) {
                                $(this).find('.fieldDiv').find('#CAPTCHAINPUT').attr('data-requiredmessage', 'Please enter the text shown in the image above');
                            }

                            //401 Check Value with Error Message
                            if ($(this).find('.fieldDiv').find('#FileUploadArea').length > 0) {
                                $(this).find('.fieldDiv').find('.uploadboxarea').attr('data-allowedfiletypes', selFileType);

                                $(this).find('.fieldDiv').find('.uploadboxarea').attr('data-maxfiles', limitValue);
                            }

                            $("#tempLabelFieldDiv").html($(this).find('.fieldDiv').clone().wrap('<p>').parent().html());
                            //hide lable and field li if field is hide == true 

                            if (isHide == "true") {
                                allFieldsIsHide[counter] = true;
                            } else {
                                allFieldsIsHide[counter] = false;
                            }

                            // Set data-isrequired and data-requiredmessage property of  field
                            try {
                                $("#tempLabelFieldDiv").children().attr('data-isrequired', $("#isUserSelectedRequired" + nameOfLabel).val());
                                $("#tempLabelFieldDiv").children().attr('data-requiredmessage', $("#errMsgForRequired" + nameOfLabel).val());
                                $("#tempLabelFieldDiv").find('.deleteField').remove();
                            }
                            catch (err) {
                                console.log('Save function jQuery code error- ' + err.message);
                            }
                            allFields[counter] = $("#tempLabelFieldDiv").html();
                            allFieldsId[counter] = $(this).attr('id').replace('li', '');
                            //}
                        } else {
                            //For section header
                            $("#tempLabelFieldDiv").html($(this).html());
                            allLabels[counter] = $("#tempLabelFieldDiv").find('label').clone().wrap('<p>').parent().html();
                            var lblid=$(this).attr('id').replace('li', '');
                            allLabelsId[counter] = lblid;

                            console.log(' THIS id-' + $(this).attr('id'));
                            if ($(this).parent('.formUlLabel').hasClass('hideFullSection')) {
                                sectionClass = 'hideFullSection';
                            }
                            else {
                                sectionClass = '';
                            }
                            sectionDetailList.push(createJSONSectionObj(lblid, sectionClass));
                            allFields[counter] = ''
                            allFieldsId[counter] = $(this).attr('id').replace('li', '');
                            allFieldsIsHide[counter] = false;
                        }
                        counter++;
                    });

                    if ($(this).find('li').length > 0) {

                        console.log(' Section names- ' + $(this).find('li.lbl').first().find('label').first().text());
                        fieldsXml += '</section>';
                    }

                }); /*formUlLabel close tag*/
            }/*if Form canvas has formUlLabel class ends */

            var i = 0;
            var groupcounter = 0;

            if (counter > 0) {
                console.log(' COunter > 0' + counter + ' sectionClass ' + sectionClass);
                if (sectionClass != '') {
                    finalResultHtml += '<div style="display:none" class="ff-group-row group-' + grouprowIndex + '" id="' + sectionId + '" >';
                }
                else {
                    finalResultHtml += '<div class="ff-group-row group-' + grouprowIndex + '" id="' + sectionId + '" >';
                }
            }

            /*label fields loop starts*/
            for (i = 0; i < allLabels.length && i < allFields.length; i++) {
                resultHtml += '<div id="divRow' + allLabelsId[i] + '" class="tr" >';


                $("#tempLabelFieldDiv").html(allLabels[i]);

                if ($("#tempLabelFieldDiv").find('label').text() != "") {
                    var sectionstart = '';/// '<div class="ff-group-row group-1"  >';
                    var sectionends = '';// '</div>';

                    if (allFields[i] == '') {
                        groupcounter = groupcounter + 1;
                        grouprowIndex = grouprowIndex + 1;
                        if (groupcounter > 1 && i < (allLabels.length - 1) && i < (allFields.length - 1)) {
                            finalResultHtml += '</div>';
                            finalResultHtml += '<div class="ff-group-row group-' + groupcounter + '" id="' + sectionId + '"    >';

                        }
                        //  sectionstart = '<div class="ff-group-row group-'+groupcounter+'"   >';


                    }
                    else {

                    }
                    if (allFieldsIsHide[i] == true)
                        finalResultHtml += '<div class="ff-item-row" style="display:none;">';
                    else
                        finalResultHtml += '<div class="ff-item-row"  >';
                    // Is Inner Section header in ul
                    if (allFields[i] == '') {
                        var sectionclass = '';
                        
                        $.each(sectionDetailList, function (index, jsonitem) {
                            if (sectionDetailList[index].id == allLabelsId[i]) {
                                sectionclass = '' + sectionDetailList[index].class;
                            }
                        });
                        resultHtml += '<div id="divCollbl' + allLabelsId[i] + '" class="td innerSecHeader ' + sectionclass + '" title="' + allFieldsTootTip[i] + '">' + allLabels[i] + '';
                        finalResultHtml += '<div  class="ff-col-1 ff-section-col"  >';
                        finalResultHtml += allLabels[i] + '</div>';
                    } else {
                        //Is field li in ul
                        resultHtml += '<div id="divCollbl' + allLabelsId[i] + '" class="td" title="' + allFieldsTootTip[i] + '">' + allLabels[i] + '';

                        if (/^lblGENERALTEXT.*$/.test($("#tempLabelFieldDiv").find('div:first').find('label').attr('id'))) {
                            finalResultHtml += '<div class="ff-col-1 ff-general-text"  >';
                        }
                        else {
                            finalResultHtml += '<div  class="ff-col-1"   >';
                        }

                        finalResultHtml += $("#tempLabelFieldDiv").find('div:first').find('label').clone().wrap('<p>').parent().html();

                        if ($("#tempLabelFieldDiv").find('div:first').find('.requiredSpan').length > 0)
                            finalResultHtml += $("#tempLabelFieldDiv").find('div:first').find('.requiredSpan').clone().wrap('<p>').parent().html();
                        finalResultHtml += '</div>';

                        $("#tempLabelFieldDiv").html(allFields[i]);
                        resultHtml += allFields[i];
                        $("#tempLabelFieldDiv").html(allFields[i]);
                        if ($("#tempLabelFieldDiv").find('.lookupInput').length > 0) {
                            $("#tempLabelFieldDiv").find('.lookupInput').find('input[type="textbox"]').attr('value', $("#tempLabelFieldDiv").find('.lookupInput').find('input[type="hidden"]').val());
                            $("#tempLabelFieldDiv").find('.lookupInput').find('input[type="hidden"]').remove();
                            $("#tempLabelFieldDiv").find('.lookupInput').find('a').remove();
                            var a = $("#tempLabelFieldDiv").find('div:first').find(':input').attr('id');
                            if (a != undefined) {
                                a = '.' + a.substring(a.length, a.length - 1);
                                if (a == '.A' || a == '.B' || a == '.C') {
                                    var reString = $("#tempLabelFieldDiv").find('div:first').find(':input').attr('id');
                                    reString = reString.substring(0, reString.length - 1);
                                    reString = reString.substring(reString.lastIndexOf('.') + 1);

                                    var finalString = $("#tempLabelFieldDiv").find('div:first').find(':input').attr('id');
                                    finalString = finalString.substring(0, finalString.lastIndexOf('.'));

                                    $("#tempLabelFieldDiv").find('div:first').find(':input').attr('name', finalString + a + '.' + reString);
                                    $("#tempLabelFieldDiv").find('div:first').find(':input').attr('id', finalString + a + '.' + reString);
                                }
                            }
                            finalResultHtml += '<div  class="ff-col-2"  style="float:left;width:217px;padding: 5px;">' + $("#tempLabelFieldDiv").find('div:first').find('.lookupInput').html() + '</div>';
                        } else {
                            if ($("#tempLabelFieldDiv #CAPTCHAINPUT").length > 0) {
                                var setCapId = $('#tempLabelFieldDiv [name="Captcha"]').attr('id');
                                finalResultHtml += '<div  class="ff-col-2 ff-captcha"  ><div id="' + setCapId + '" name="Captcha" data-isrequired="true" data-requiredmessage="Please enter the text shown in the image above"></div></div>';
                                $("#tempLabelFieldDiv img").remove();
                                $("#tempLabelFieldDiv input").remove();
                                $('#tempLabelFieldDiv [name="Captcha"]').remove();
                            } else if ($("#tempLabelFieldDiv #divFieldGENERALTEXT").length > 0) {
                                $("#tempLabelFieldDiv #divFieldGENERALTEXT").remove();
                            } else {
                                var a = $("#tempLabelFieldDiv").find('div:first').find(':input').attr('id');
                                if (a != undefined) {
                                    a = '.' + a.substring(a.length, a.length - 1);
                                    if (a == '.A' || a == '.B' || a == '.C') {
                                        var reString = $("#tempLabelFieldDiv").find('div:first').find(':input').attr('id');
                                        reString = reString.substring(0, reString.length - 1);
                                        reString = reString.substring(reString.lastIndexOf('.') + 1);
                                        //reString=$("#tempLabelFieldDiv").find('div:first').find(':input').attr('id').replace('Id',a);

                                        var finalString = $("#tempLabelFieldDiv").find('div:first').find(':input').attr('id');
                                        finalString = finalString.substring(0, finalString.lastIndexOf('.'));

                                        $("#tempLabelFieldDiv").find('div:first').find(':input').attr('name', finalString + a + '.' + reString);
                                        $("#tempLabelFieldDiv").find('div:first').find(':input').attr('id', finalString + a + '.' + reString);
                                        //$("#tempLabelFieldDiv").find('div:first').find(':input').attr('id',reString.substring(0,reString.length-1));                                            
                                        finalResultHtml += '<div  class="ff-col-2" >' + $("#tempLabelFieldDiv").find('div:first').html() + '</div>';
                                    } else {
                                        finalResultHtml += '<div class="ff-col-2"  >' + $("#tempLabelFieldDiv").find('div:first').html() + '</div>';
                                    }
                                }
                            }
                        }
                    }
                    finalResultHtml += '</div>';


                }

                $(finalResultHtml).find('.ff-group-row').each(function (index) {
                    if ($(this).has("div")) {
                    }
                    else {
                        $(this).remove();
                    }


                });




                $("#tempLabelFieldDiv").html(allFields[i]);
                resultHtml += '</div>';
                resultHtml += '</div>';
                ///finalResultHtml += '</div>';


            }/*label fields loop ends*/
            if (counter > 0) {
                finalResultHtml += '</div>';
            }
        }/* IF li has ul element - means has section and field ends*/
        else if ($(this).hasClass("addNewSection") == false) {
            /* footer section div */
            $("#tempLabelFieldDiv").html($(this).clone().wrap('<p>').parent().html());
            $("#tempLabelFieldDiv").find('img').remove('img');
            if ($(this).hasClass('sectionHeader') && $(this).find('label ,input[type="button"]')) {
                $("#tempLabelFieldDiv").find('.deleteField').remove();
                resultHtml += '<div class="tr" >';
                finalResultHtml += '<div  class="ff-footer-group"   >';
                finalResultHtml += '<div  class="ff-item-row ff-footer-row"   >';
                var textAlign = '';
                if ($(this).hasClass('Ulbtn')) {
                    resultHtml += '<div class="td sectionHeader" style="text-align:right;" >' + $("#tempLabelFieldDiv").find('div:first').clone().wrap('<p>').parent().html() + $("#tempLabelFieldDiv").find('div:nth-child(2)').clone().wrap('<p>').parent().html() + '</div>';
                    resultHtml += '</div>';
                    finalResultHtml += '<div  class="ff-submit-btn"  >' + $("#tempLabelFieldDiv").find('div:first').clone().wrap('<p>').parent().html() + $("#tempLabelFieldDiv").find('div:nth-child(2)').clone().wrap('<p>').parent().html() + '</div>';

                } else {
                    if ($(this).find("h1,h2,h3").length > 0) {
                        if ($(this).find("h1,h2,h3").attr('align') != undefined)
                            textAlign = $("#labelDiv").find("h1,h2,h3").attr('align');
                        else if ($("#labelDiv").find("h1,h2,h3").css('text-align') != "undefined")
                            textAlign = $("#labelDiv").find("h1,h2,h3").css('text-align');
                    } else {
                        textAlign = $("#labelDiv").find('div:first').css('text-align');
                    }
                    if (textAlign == '' || textAlign == undefined)
                        textAlign = 'left';
                    resultHtml += '<div class="td sectionHeader" style="text-align:' + textAlign + '; " >' + $("#tempLabelFieldDiv").find('.lblDiv').html() + '</div>';
                    resultHtml += '</div>';
                    finalResultHtml += '<div class="ff-item-row ff-text"  style="text-align:' + textAlign + '; ">' + $("#tempLabelFieldDiv").find('.lblDiv').html() + '</div>';

                }
                finalResultHtml += '</div>';///ff-item-row ff-footer-row ends
                finalResultHtml += '</div>';///ff-footer-group ends
            }
        }/* footer section div ends */
    });
    /* main form canvas li loop ends */
    fieldsXml += '</page>';
    //BACKEND Data XML Working
    var data = fieldsXml;
    var xml = $.parseXML('<root>' + data + '</root>');
    var $xml = $(xml);


    //Reference fields XML
    fieldsObjectXml += '<object>';
    fieldsObjectXml += '<name>' + $('#priName').attr('class') + '</name>';
    fieldsObjectXml += '<objectType>Primary</objectType>';
    fieldsObjectXml += '<relationshipType></relationshipType>';
    fieldsObjectXml += '<relatedField></relatedField>';
    //Add fieldsXml String
    fieldsObjectXml += '<fields>';

    $xml.find('field').each(function () {
        //check if the object name matches so we know where to put the field
        //we also check if there is no object name - this denotes a general field e.g. file upload
        //which should be included with the primary object anyway            
        //if($(this).find('Object').text().replace('From : ','') == $('#ListFirst').find('.objName').text().replace(' Fields','')+' Object'){
        //if($(this).find('Object').text().replace('From : ','') == $('#ListFirst').find('.objName').text()){
        if ($(this).find('Object').text().trim() == "sortableForFields") {
            fieldsObjectXml += '<field>';
            fieldsObjectXml += '<name>' + $(this).find("name").text() + '</name>';
            fieldsObjectXml += '<type>' + $(this).find("type").text() + '</type>';
            fieldsObjectXml += '<hiddenField>' + $(this).find("hiddenField").text() + '</hiddenField>';

            fieldsObjectXml += '<readOnly>' + $(this).find("readOnly").text() + '</readOnly>';
            fieldsObjectXml += '<upsert>' + $(this).find("upsert").text() + '</upsert>';
            fieldsObjectXml += '<defaultValue>' + $(this).find("defaultValue").text() + '</defaultValue>';
            fieldsObjectXml += '<maxLength>' + $(this).find("maxLength").text() + '</maxLength>';
            fieldsObjectXml += '<required>' + $(this).find("required").text() + '</required>';
            fieldsObjectXml += '<requiredMessage>' + $(this).find("requiredMessage").text() + '</requiredMessage>';
            fieldsObjectXml += '<picklistValues>';
            $(this).find('picklistValues').find("value").each(function () {
                fieldsObjectXml += '<picklistValue><value>' + $(this).text() + '</value></picklistValue>';
            });
            fieldsObjectXml += '</picklistValues>';
            fieldsObjectXml += '</field>';
        }
        if ($(this).find('object').text() == '') {
            if ($(this).find('type').text() == "CAPTCHA") {
                fieldsObjectXml += '<field>';
                fieldsObjectXml += '<name>' + $(this).find("name").text() + '</name>';
                fieldsObjectXml += '<type>CAPTCHA</type>';
                fieldsObjectXml += '<required>' + $(this).find("required").text() + '</required>';
                fieldsObjectXml += '<requiredMessage>' + $(this).find("requiredMessage").text() + '</requiredMessage>';
                fieldsObjectXml += '</field>';
            }
            if ($(this).find('maxFiles').text() != '') {
                fieldsObjectXml += '<field>';
                fieldsObjectXml += '<name>' + $(this).find("name").text() + '</name>';
                fieldsObjectXml += '<type>FILEUPLOAD</type>';
                fieldsObjectXml += '<allowedFileTypes>' + $(this).find("allowedFileTypes").text() + '</allowedFileTypes>';
                fieldsObjectXml += '<uploadToChatter>' + $(this).find("uploadToChatter").text() + '</uploadToChatter>';
                fieldsObjectXml += '<maxFiles>' + $(this).find("maxFiles").text() + '</maxFiles>';
                fieldsObjectXml += '<required>' + $(this).find("required").text() + '</required>';
                fieldsObjectXml += '<requiredMessage>' + $(this).find("requiredMessage").text() + '</requiredMessage>';
                fieldsObjectXml += '</field>';
            }
        }
    });
    fieldsObjectXml += '</fields>';
    fieldsObjectXml += '</object>';

    /// for first related object      
    if (isSecNameElemExistsByIndex(0)) {
        var secondaryObjectId=selectSecNameIdByIndex(0);
        fieldsObjectXml += '<object>';
        fieldsObjectXml += '<name>' + secondaryObjectId.substring(secondaryObjectId.indexOf('(') + 1, secondaryObjectId.indexOf(')')) + '</name>';
        fieldsObjectXml += '<objectType>Secondary</objectType>';
var getImg = $('#ListSecond').find('.objName').css('background-image');
        if(getImg!== undefined)
        {
        getImg = getImg.substring(getImg.lastIndexOf('.') - 1, getImg.lastIndexOf('.'));
    }
        if ($('#ListSecond').find('.objName').text().indexOf('-') > 0) {
            fieldsObjectXml += '<relationshipType>Master</relationshipType>';
        } else {
            //if(getImg != undefined){
            if ($('#ListSecond').find('.objName').css('background-image') != "none") {
                fieldsObjectXml += '<relationshipType>Detail</relationshipType>';
                //fieldsObjectXml +='<relatedField>'+ $('#ListFirst').find('.objName').text() +'Id</relatedField>';                                            
                fieldsObjectXml += '<relatedField>' + mapLookup[$('#ListSecond').find('.objName').text()] + '</relatedField>';
            } else {
                fieldsObjectXml += '<relationshipType>Lookup</relationshipType>';
                $("#sortableForFields").find('li').each(function () {
                    if ($("#ListSecond .objName").css('background-image') == 'none') {
                        if ($(this).attr("title") == "REFERENCE" && $('#ListSecond').css('display') != 'none' && $(this).find('div').attr('lblname') == $('#ListSecond').find('.objName').text().substring(0, $('#ListSecond').find('.objName').text().indexOf('(') - 1)) {
                            fieldsObjectXml += '<relatedField>' + $(this).find('label').attr('id').replace('lbl', '') + '</relatedField>';
                        }
                    }
                });
            }
        }




        //Add fieldsXml String
        fieldsObjectXml += '<fields>';
        $xml.find('field').each(function () {
            //if($(this).find('Object').text().replace('From : ','') == $('#ListSecond').find('.objName').text().replace(' Fields','')+' Object'){
            //if($(this).find('Object').text().replace('From : ','') == $('#ListSecond').find('.objName').text()){
            if ($(this).find('Object').text().trim() == "sortableForFieldsNew") {
                /*var fldXml = $(this).html();
                fldXml = fldXml.substring(fldXml.indexOf("<name>"),fldXml.length);
                fieldsObjectXml +='<field>' + fldXml + '</field>';*/

                if ($('#ListSecond').find('.objName').css('background-image') != "none") {
                    if (getImg == $(this).find("name").text().substring($(this).find("name").text().length - 1)) {
                        fieldsObjectXml += '<field>';
                        fieldsObjectXml += '<name>' + $(this).find("name").text().substring(0, $(this).find("name").text().length - 1) + '</name>';
                        fieldsObjectXml += '<type>' + $(this).find("type").text() + '</type>';
                        fieldsObjectXml += '<hiddenField>' + $(this).find("hiddenField").text() + '</hiddenField>';
                        fieldsObjectXml += '<readOnly>' + $(this).find("readOnly").text() + '</readOnly>';
                        fieldsObjectXml += '<upsert>' + $(this).find("upsert").text() + '</upsert>';
                        fieldsObjectXml += '<defaultValue>' + $(this).find("defaultValue").text() + '</defaultValue>';
                        fieldsObjectXml += '<maxLength>' + $(this).find("maxLength").text() + '</maxLength>';
                        fieldsObjectXml += '<required>' + $(this).find("required").text() + '</required>';
                        fieldsObjectXml += '<requiredMessage>' + $(this).find("requiredMessage").text() + '</requiredMessage>';
                        fieldsObjectXml += '<picklistValues>';
                        $(this).find('picklistValues').find("value").each(function () {
                            fieldsObjectXml += '<picklistValue><value>' + $(this).text() + '</value></picklistValue>';
                        });
                        fieldsObjectXml += '</picklistValues>';
                        fieldsObjectXml += '</field>';
                    }
                } else {
                    fieldsObjectXml += '<field>';

                    fieldsObjectXml += '<name>' + $(this).find("name").text() + '</name>';
                    fieldsObjectXml += '<type>' + $(this).find("type").text() + '</type>';
                    fieldsObjectXml += '<hiddenField>' + $(this).find("hiddenField").text() + '</hiddenField>';
                    fieldsObjectXml += '<readOnly>' + $(this).find("readOnly").text() + '</readOnly>';
                    fieldsObjectXml += '<upsert>' + $(this).find("upsert").text() + '</upsert>';
                    fieldsObjectXml += '<defaultValue>' + $(this).find("defaultValue").text() + '</defaultValue>';
                    fieldsObjectXml += '<maxLength>' + $(this).find("maxLength").text() + '</maxLength>';
                    fieldsObjectXml += '<required>' + $(this).find("required").text() + '</required>';
                    fieldsObjectXml += '<requiredMessage>' + $(this).find("requiredMessage").text() + '</requiredMessage>';
                    fieldsObjectXml += '<picklistValues>';
                    $(this).find('picklistValues').find("value").each(function () {
                        fieldsObjectXml += '<picklistValue><value>' + $(this).text() + '</value></picklistValue>';
                    });
                    fieldsObjectXml += '</picklistValues>';
                    fieldsObjectXml += '</field>';
                }
            }
        });
        fieldsObjectXml += '</fields>';
        fieldsObjectXml += '</object>';
    }/// for first related object  ends

    /// for second related object
    if (isSecNameElemExistsByIndex(1)) {
        
       var secondaryObjectId=selectSecNameIdByIndex(1);
        fieldsObjectXml += '<object>';
        fieldsObjectXml += '<name>' + secondaryObjectId.substring(secondaryObjectId.indexOf('(') + 1, secondaryObjectId.indexOf(')')) + '</name>';
        fieldsObjectXml += '<objectType>Secondary</objectType>';
        var getImg = $('#ListThird').find('.objName').css('background-image');
        if(getImg!== undefined)
        {
        getImg = getImg.substring(getImg.lastIndexOf('.') - 1, getImg.lastIndexOf('.'));
    }
        if ($('#ListThird').find('.objName').text().indexOf('-') > 0) {
            fieldsObjectXml += '<relationshipType>Master</relationshipType>';
        } else {
            //if(getImg != undefined){
            if ($('#ListThird').find('.objName').css('background-image') != "none") {
                fieldsObjectXml += '<relationshipType>Detail</relationshipType>';
                //fieldsObjectXml +='<relatedField>'+ $('#ListFirst').find('.objName').text() +'Id</relatedField>';                                            
                //fieldsObjectXml +='<relatedField>'+ $('#priName').attr('class') +'</relatedField>';
                fieldsObjectXml += '<relatedField>' + mapLookup[$('#ListThird').find('.objName').text()] + '</relatedField>';
            } else {
                fieldsObjectXml += '<relationshipType>Lookup</relationshipType>';
                //fieldsObjectXml +='<relatedField>'+ $('#ListThird').find('.objName').attr('id').replace(' Fields','').substring($('#ListThird').find('.objName').attr('id').indexOf('(')+1,$('#ListThird').find('.objName').attr('id').indexOf(')')).trim() +'Id</relatedField>'; 
                $("#sortableForFields").find('li').each(function () {
                    if ($("#ListThird .objName").css('background-image') == 'none') {
                        if ($(this).attr("title") == "REFERENCE" && $('#ListThird').css('display') != 'none' && $(this).find('div').attr('lblname') == $('#ListThird').find('.objName').text().substring(0, $('#ListThird').find('.objName').text().indexOf('(') - 1)) {
                            fieldsObjectXml += '<relatedField>' + $(this).find('label').attr('id').replace('lbl', '') + '</relatedField>';
                        }
                    }
                });
            }
        }




        //Add fieldsXml String
        fieldsObjectXml += '<fields>';
        $xml.find('field').each(function () {

            if ($(this).find('Object').text().trim() == "sortableForFieldsThird") {

                if ($('#ListThird').find('.objName').css('background-image') != "none") {
                    if (getImg == $(this).find("name").text().substring($(this).find("name").text().length - 1)) {
                        fieldsObjectXml += '<field>';
                        fieldsObjectXml += '<name>' + $(this).find("name").text().substring(0, $(this).find("name").text().length - 1) + '</name>';
                        fieldsObjectXml += '<type>' + $(this).find("type").text() + '</type>';
                        fieldsObjectXml += '<hiddenField>' + $(this).find("hiddenField").text() + '</hiddenField>';
                        fieldsObjectXml += '<readOnly>' + $(this).find("readOnly").text() + '</readOnly>';
                        fieldsObjectXml += '<upsert>' + $(this).find("upsert").text() + '</upsert>';
                        fieldsObjectXml += '<defaultValue>' + $(this).find("defaultValue").text() + '</defaultValue>';
                        fieldsObjectXml += '<maxLength>' + $(this).find("maxLength").text() + '</maxLength>';
                        fieldsObjectXml += '<required>' + $(this).find("required").text() + '</required>';
                        fieldsObjectXml += '<requiredMessage>' + $(this).find("requiredMessage").text() + '</requiredMessage>';
                        fieldsObjectXml += '<picklistValues>';
                        $(this).find('picklistValues').find("value").each(function () {
                            fieldsObjectXml += '<picklistValue><value>' + $(this).text() + '</value></picklistValue>';
                        });
                        fieldsObjectXml += '</picklistValues>';
                        fieldsObjectXml += '</field>';
                    }
                } else {
                    fieldsObjectXml += '<field>';
                    fieldsObjectXml += '<name>' + $(this).find("name").text() + '</name>';
                    fieldsObjectXml += '<type>' + $(this).find("type").text() + '</type>';
                    fieldsObjectXml += '<hiddenField>' + $(this).find("hiddenField").text() + '</hiddenField>';
                    fieldsObjectXml += '<readOnly>' + $(this).find("readOnly").text() + '</readOnly>';
                    fieldsObjectXml += '<upsert>' + $(this).find("upsert").text() + '</upsert>';
                    fieldsObjectXml += '<defaultValue>' + $(this).find("defaultValue").text() + '</defaultValue>';
                    fieldsObjectXml += '<maxLength>' + $(this).find("maxLength").text() + '</maxLength>';
                    fieldsObjectXml += '<required>' + $(this).find("required").text() + '</required>';
                    fieldsObjectXml += '<requiredMessage>' + $(this).find("requiredMessage").text() + '</requiredMessage>';
                    fieldsObjectXml += '<picklistValues>';
                    $(this).find('picklistValues').find("value").each(function () {
                        fieldsObjectXml += '<picklistValue><value>' + $(this).text() + '</value></picklistValue>';
                    });
                    fieldsObjectXml += '</picklistValues>';
                    fieldsObjectXml += '</field>';
                }
            }
        });
        fieldsObjectXml += '</fields>';
        fieldsObjectXml += '</object>';

    } /// for second related object ends


    /// for third related object
    if (isSecNameElemExistsByIndex(2)) {
        var secondaryObjectId=selectSecNameIdByIndex(2);
        fieldsObjectXml += '<object>';
        fieldsObjectXml += '<name>' + secondaryObjectId.substring(secondaryObjectId.indexOf('(') + 1, secondaryObjectId.indexOf(')')) + '</name>';
        fieldsObjectXml += '<objectType>Secondary</objectType>';
        var getImg = $('#ListFourth').find('.objName').css('background-image');
        if(getImg!== undefined)
        {
        getImg = getImg.substring(getImg.lastIndexOf('.') - 1, getImg.lastIndexOf('.'));
    }
        if ($('#ListFourth').find('.objName').text().indexOf('-') > 0) {
            fieldsObjectXml += '<relationshipType>Master</relationshipType>';
        } else {
            //if(getImg != undefined){
            if ($('#ListFourth').find('.objName').css('background-image') != "none") {
                fieldsObjectXml += '<relationshipType>Detail</relationshipType>';
                //fieldsObjectXml +='<relatedField>'+ $('#ListFirst').find('.objName').text() +'Id</relatedField>';
                //fieldsObjectXml +='<relatedField>'+ $('#priName').attr('class') +'</relatedField>'; 
                fieldsObjectXml += '<relatedField>' + mapLookup[$('#ListFourth').find('.objName').text()] + '</relatedField>';
            } else {
                fieldsObjectXml += '<relationshipType>Lookup</relationshipType>';
                //fieldsObjectXml +='<relatedField>'+ $('#ListFourth').find('.objName').attr('id').replace(' Fields','').substring($('#ListFourth').find('.objName').attr('id').indexOf('(')+1,$('#ListFourth').find('.objName').attr('id').indexOf(')')).trim() +'Id</relatedField>';
                $("#sortableForFields").find('li').each(function () {
                    if ($("#ListFourth .objName").css('background-image') == 'none') {
                        if ($(this).attr("title") == "REFERENCE" && $('#ListFourth').css('display') != 'none' && $(this).find('div').attr('lblname') == $('#ListFourth').find('.objName').text().substring(0, $('#ListFourth').find('.objName').text().indexOf('(') - 1)) {
                            fieldsObjectXml += '<relatedField>' + $(this).find('label').attr('id').replace('lbl', '') + '</relatedField>';
                        }
                    }
                });
            }
        }



        //Add fieldsXml String
        fieldsObjectXml += '<fields>';
        $xml.find('field').each(function () {
            //if($(this).find('Object').html().replace('From : ','') == $('#ListFourth').find('.objName').text().replace(' Fields','')+' Object'){
            //if($(this).find('Object').html().replace('From : ','') == $('#ListFourth').find('.objName').text()){
            if ($(this).find('Object').text().trim() == "sortableForFieldsFourth") {

                /*var fldXml = $(this).html();
                fldXml = fldXml.substring(fldXml.indexOf("<name>"),fldXml.length);
                fieldsObjectXml +='<field>' + fldXml + '</field>';*/
                if ($('#ListFourth').find('.objName').css('background-image') != "none") {
                    if (getImg == $(this).find("name").text().substring($(this).find("name").text().length - 1)) {
                        fieldsObjectXml += '<field>';
                        fieldsObjectXml += '<name>' + $(this).find("name").text().substring(0, $(this).find("name").text().length - 1) + '</name>';
                        fieldsObjectXml += '<type>' + $(this).find("type").text() + '</type>';
                        fieldsObjectXml += '<hiddenField>' + $(this).find("hiddenField").text() + '</hiddenField>';
                        fieldsObjectXml += '<readOnly>' + $(this).find("readOnly").text() + '</readOnly>';
                        fieldsObjectXml += '<upsert>' + $(this).find("upsert").text() + '</upsert>';
                        fieldsObjectXml += '<defaultValue>' + $(this).find("defaultValue").text() + '</defaultValue>';
                        fieldsObjectXml += '<maxLength>' + $(this).find("maxLength").text() + '</maxLength>';
                        fieldsObjectXml += '<required>' + $(this).find("required").text() + '</required>';
                        fieldsObjectXml += '<requiredMessage>' + $(this).find("requiredMessage").text() + '</requiredMessage>';
                        fieldsObjectXml += '<picklistValues>';
                        $(this).find('picklistValues').find("value").each(function () {
                            fieldsObjectXml += '<picklistValue><value>' + $(this).text() + '</value></picklistValue>';
                        });
                        fieldsObjectXml += '</picklistValues>';
                        fieldsObjectXml += '</field>';
                    }
                } else {
                    fieldsObjectXml += '<field>';
                    fieldsObjectXml += '<name>' + $(this).find("name").text() + '</name>';
                    fieldsObjectXml += '<type>' + $(this).find("type").text() + '</type>';
                    fieldsObjectXml += '<hiddenField>' + $(this).find("hiddenField").text() + '</hiddenField>';
                    fieldsObjectXml += '<readOnly>' + $(this).find("readOnly").text() + '</readOnly>';
                    fieldsObjectXml += '<upsert>' + $(this).find("upsert").text() + '</upsert>';
                    fieldsObjectXml += '<defaultValue>' + $(this).find("defaultValue").text() + '</defaultValue>';
                    fieldsObjectXml += '<maxLength>' + $(this).find("maxLength").text() + '</maxLength>';
                    fieldsObjectXml += '<required>' + $(this).find("required").text() + '</required>';
                    fieldsObjectXml += '<requiredMessage>' + $(this).find("requiredMessage").text() + '</requiredMessage>';
                    fieldsObjectXml += '<picklistValues>';
                    $(this).find('picklistValues').find("value").each(function () {
                        fieldsObjectXml += '<picklistValue><value>' + $(this).text() + '</value></picklistValue>';
                    });
                    fieldsObjectXml += '</picklistValues>';
                    fieldsObjectXml += '</field>';
                }
            }
        });

        fieldsObjectXml += '</fields>';
        fieldsObjectXml += '</object>';
    }/// for third related object ends 

    //$('[id$="selectedPreFormID"]').val();
    resultHtml += '</div>';
    finalResultHtml += '</div>';//// main form div ends

    //Changes for Button HTML            
    finalResultHtml = finalResultHtml.replace('<a class="tooltip" href="#"><span><h6>This option will redirect the person filling out the form to another website after they submit their form</h6></span></a>', htmlForButton)
    finalResultHtml = finalResultHtml.replace('style="float:left;margin-left:18px;"', 'class="btnDiv"');
    finalResultHtml = finalResultHtml.replace($(finalResultHtml).find('.btnDiv input').attr('id'), 'btnsubmit');

    $('#previewDiv').html(finalResultHtml);
    //Set hidden fields for Form 

    //alert(fieldsObjectXml);
    $('[id$="hiddenCkEditorValue"]').val(resultHtml);
    $('[id$="finalResultHtml"]').val(finalResultHtml);
    $('[id$="fieldsObjectXml"]').val(fieldsObjectXml);
    $('[id$="fieldsXml"]').val(fieldsXml);

    if (isPreview == false) {
        var listFirst = '', listSecond = '', listThird = '';
        if ($('#ListSecond').css('display') != 'none' && $('#ListSecond').css('display') != undefined) {
            listFirst = $('#ListSecond').find('.objName').text().replace('Fields', '').trim();
        }
        if ($('#ListThird').css('display') != 'none' && $('#ListThird').css('display') != undefined) {
            listSecond = $('#ListThird').find('.objName').text().replace('Fields', '').trim();
        }
        if ($('#ListFourth').css('display') != 'none' && $('#ListFourth').css('display') != undefined) {
            listThird = $('#ListFourth').find('.objName').text().replace('Fields', '').trim();
        }
        var opfirst = getSelectedDropdownVal(1);
        var opsecond = getSelectedDropdownVal(2);
        var opthird = getSelectedDropdownVal(3);
        if (isAutosave) {
            callAutosave(listFirst, listSecond, listThird, opfirst, opsecond, opthird, $('[id$="fieldsXml"]').val(), $('[id$="fieldsObjectXml"]').val(), $('[id$="finalResultHtml"]').val(), $('[id$="hiddenCkEditorValue"]').val(), fetchHiddenObjectValues());
            /*alert('Saved!');*/
        }
        else {
            callSave(listFirst, listSecond, listThird, opfirst, opsecond, opthird, $('[id$="fieldsXml"]').val(), $('[id$="fieldsObjectXml"]').val(), $('[id$="finalResultHtml"]').val(), $('[id$="hiddenCkEditorValue"]').val(), fetchHiddenObjectValues());
        }

    } else {
        $('#btnSaved').removeClass('btnGreenClick');
        $("#preview").html("<center></center><div style='cursor:pointer;float:right;height:24px;padding-right: 10px;padding-top: 6px;padding-bottom: 10px;'><img src='{!URLFOR($Resource.iconImages,'Close.png')}' onmouseover='changeImg(this);' onmouseout='rechangeImg(this);' onclick='closePrivewDialog();'/></div><div style='width:100%;border-bottom:1px solid #ccc;clear:both;'></div><!--<h3>Form Preview</h3>--><div id='formPreview'>" + finalResultHtml + "</div><div style='position: relative;bottom: 0;width:100%;clear:both;height:20px'></div>");
        $('#preview').dialog('open');

        //Add Label for Remove
        //$("#preview .ff-fileupload-drop-area").after('<h5><div id="removeFiles" style="float:right;line-height: 25px;margin-top: 10px;">File Name  <div style="padding-left: 20px;color:#33aefd;float: right;">Remove</div><br/>File Name  <div style="padding-left: 20px;color:#33aefd;float: right;">Remove</div><br/>File Name  <div style="padding-left: 20px;color:#33aefd;float: right;">Remove</div><br/></div></h5>');
        $('#preview [name="Captcha"]').after('<img src="http://www.powiat.chelm.pl/userfiles/captcha/9fa79129af6c581f26dc8d8c6d96906b.png" /><br/><input type="textbox" id="CAPTCHAINPUT" name="CAPTCHAINPUT" vatt="CAPTCHA" data-formatmessage="" data-maxlength="50" data-maxlengthmessage="Maximum 50 characters" maxlength="50" />');
    }
}

function escape(s) {
  var escaped = {
    '&': '&amp;',
    "'": '&#39;',
    '"': '&quot;'
  };
  return s.replace(/[&<>'"]/g, function (m) {
    return escaped[m];
  });
}


/*call to save function ends*/
function createJSONSectionObj(sectionlabelid, sectionclass) {
    var dataobj = { "id": sectionlabelid, "class": sectionclass };


    return dataobj;
}



        function fetchHiddenObjectValues(){
            var hiddenObjects = '';
            if(IsSelectVisible('levelFirst') && isSelectedItemIsvalid('levelFirst') && $('#pg\\:frm\\:dropSelectFirst').val() != undefined && $('#pg\\:frm\\:dropSelectFirst').val().trim().length >0)
                hiddenObjects = $('#pg\\:frm\\:dropSelectFirst').val()+'##'+$('#pg\\:frm\\:dropSelectFirst').children().children(':selected').attr('name');
            if(IsSelectVisible('levelSecond') && isSelectedItemIsvalid('levelSecond') && $('#pg\\:frm\\:dropSelectSecond').val() != undefined && $('#pg\\:frm\\:dropSelectSecond').val().trim().length >0)
                hiddenObjects += ','+$('#pg\\:frm\\:dropSelectSecond').val()+'##'+$('#pg\\:frm\\:dropSelectSecond').children().children(':selected').attr('name');
            if(IsSelectVisible('levelThird') && isSelectedItemIsvalid('levelThird') && $('#pg\\:frm\\:dropSelectThird').val() != undefined && $('#pg\\:frm\\:dropSelectThird').val().trim().length >0)
                hiddenObjects += ','+$('#pg\\:frm\\:dropSelectThird').val()+'##'+$('#pg\\:frm\\:dropSelectThird').children().children(':selected').attr('name');
                
            return hiddenObjects;
        }
        function fetchHiddenObjectValuesORIGINAL(){
            var hiddenObjects = '';
            if(IsSelectVisible('levelFirst') && $('#pg\\:frm\\:dropSelectFirst').val() != undefined && $('#pg\\:frm\\:dropSelectFirst').val().trim().length >0)
                hiddenObjects = $('#pg\\:frm\\:dropSelectFirst').val()+'##'+$('#pg\\:frm\\:dropSelectFirst').children().children(':selected').attr('name');
            if(IsSelectVisible('levelSecond') && $('#pg\\:frm\\:dropSelectSecond').val() != undefined && $('#pg\\:frm\\:dropSelectSecond').val().trim().length >0)
                hiddenObjects += ','+$('#pg\\:frm\\:dropSelectSecond').val()+'##'+$('#pg\\:frm\\:dropSelectSecond').children().children(':selected').attr('name');
            if(IsSelectVisible('levelThird') && $('#pg\\:frm\\:dropSelectThird').val() != undefined && $('#pg\\:frm\\:dropSelectThird').val().trim().length >0)
                hiddenObjects += ','+$('#pg\\:frm\\:dropSelectThird').val()+'##'+$('#pg\\:frm\\:dropSelectThird').children().children(':selected').attr('name');
                
            return hiddenObjects;
        }
        
         function getSelectedDropdownVal(senderSelectcount) {

    var selectelem = '';
    var returnVal = '';
    if(senderSelectcount>0)
    if(senderSelectcount==1)
    {
        selectelem = "select.dropFirst";
    }
    if (senderSelectcount == 2) {
        selectelem = "select.dropSecond";
    }
    if (senderSelectcount ==3) {
        selectelem = "select.dropThird";
    }
    if (selectelem != '') {
        var selectElemVal = $(selectelem).select2("val");

        if (selectElemVal == "") {

        } else {
            try{
                returnVal = selectElemVal.replace('Id', '');
            }catch(err){

            }

        }
    }
    return returnVal;
    }   
        function IsSelectVisible(selectlevelID)
        {
        
            var returnflag=true;
            if($('#'+selectlevelID+' .scroll-parent').css('display') == 'none'){
                returnflag=false;
            }
            return returnflag;
        }
        function isSelectedItemIsvalid(selectlevelID)
        {
        
            var returnflag=true;
            if($('#'+selectlevelID+' .scroll-parent .select2-container a.select2-choice .select2-chosen').text() == '----Select Object----'){
                returnflag=false;
            }
            return returnflag;
        }
         
         
        
         
        String.prototype.replaceAll = function(search, replacement) {
            var target = this;
            return target.split(search).join(replacement);
        };
        
        function redirectToAdvanceFilter(){
            var res = confirm('Are you sure for navigate to Advanced Editor ?');
            if(res)
                window.location.href = '/apex/Ckeditor';
        }
         
        // Make all Li of fields and label make equals
        function makeAllLiHeightEqual(){
            var heightOfAllLi = [];
            var i = 0;
            $(".formUlLabel").find('li').each(function(){
                heightOfAllLi[i] = $(this).height();
                i++;
            });
            i = 0;
            $(".formUlField").find('li').each(function(){
                if(i<heightOfAllLi.length )
                    $(this).height(heightOfAllLi[i]);
                i++;
            });
             
        }
         
        // Open new Label Dialog
        function openNewLabelDialog(){
            $('#hiddenLiId').val('');
            $("#tblForRequirdBlock").hide();
            window.frames['FormatToolbar'].document.getElementById('editor').innerHTML = '';
            $( "#dialog" ).dialog({ height: 280});
            $('#dialog').dialog('option', 'position', 'center');
            $('#dialog').dialog('open');
        }
        function resetEditDivOpacity()
        {
            ////to hide arrow/delete button on click on any editpanel's arrow button
            $('#parentUlForm').find('.editImg').removeAttr('style');
            $('#parentUlForm').find('.deleteField').show();
                
        }
        var selFileType='';
        var isShowLabel=false;
       
         /*here go  openEditDialog()*/
    function openEditDialog(liId, isFieldLabel) {
    ////to fix issue: Delete button missing / arrow not hiding issue-- added on nov 26 2014 by balinder
    resetEditDivOpacity();

    $(".editImg").removeClass('togHoverActive');
    //resetSavedButton();
    isError = true;
    isShowLabel = false;
    var dHide = $("#" + liId + " .deleteField").attr('id');
    if ($("#hiddenLiId").val() == liId && $("#" + $("#hiddenLiId").val()).find(".ExpandDiv").length > 0) {
        
        //addLabel();
        if (/lblliUPLOAD/i.test(liId)) {
            if ($('#customfltype').next().html() == "Please provide comma-separated extensions (e.g. .doc, .txt)") {
                isError = false;
                $('#customfltype').focus();
            } else {
                $(".ui-icon-closethick").click();
                var RE = /^-{0,1}\d*\.{0,1}\d+$/;
                $("#limitValue").next().remove();
                if (RE.test($("#limitValue").val())) {
                    if ($("#limitValue").val() > 99 || $("#limitValue").val() <= 0) {
                        isError = false;
                        $("#limitValue").css('border', '1px solid red');
                        $("#limitValue").after('<span style="color:red;">Please enter a numeric value<span>');
                        $("#limitValue").focus();
                    } else {
                        limitValue = $("#limitValue").val();
                        $("#" + liId).find(".uploadboxarea").attr('data-maxfiles', limitValue);
                        isError = true;
                    }
                } else {
                    isError = false;
                    $("#limitValue").css('border', '1px solid red');
                    $("#limitValue").after('<span style="color:red;">Please enter a numeric value<span>');
                    $("#limitValue").focus();
                }
            }

        }
        if (isError) {
            limitValue = $("#limitValue").val();
            $("#" + liId).find(".uploadboxarea").attr('data-maxfiles', limitValue);
            selFileType = $("#selectedfiletypes").val();
            $(".ExpandDiv").slideUp('300', function() {
                    goToNextTourStop();
                });
            setTimeout(function () { $(".ExpandDiv").remove() }, 300);
            $("#" + liId + " .deleteField").show();

            $("#" + liId + " .editImg").removeAttr('style');
            /*setTimeout(function(){
                $(".editImg").attr('src',editImgUrl);
                setHover();
            }, 100);*/
            $("#" + dHide).show();
            $(".formUlLabel").sortable("option", "disabled", false);
            $("#parentUlForm").sortable("option", "disabled", false);
                    

        }
        console.log(' autosave hit');
        save(false, true);
        isChangesMadeInForm = false;
        $("#" + liId).parent().parent().parent().parent().parent().removeClass('isFieldEdit');
    } else {
        
        $("#" + liId + " .editImg").addClass('togHoverActive');
        //if ($("#" + $("#hiddenLiId").val()).find(".ExpandDiv").length > 0) {
        //    addLabel();
        //}
        var tempDialogHtml = $("#tempDialogHtml").html();
        if ($("#tempDialogHtml").find('table').length > 0) {
            $("#dialog").html($("#tempDialogHtml").html());
        }
        $("iframe").remove();
        $(".ExpandDiv").remove();
        $("#hiddenLiId").val(liId);
        $("#hiddenLiLabelId").val($("#" + liId).find('label').attr('id'));
        var labelLIId = $("#hiddenLiLabelId").val();
        var dialogHtml = $('#dialog').html();
        $("#tempDialogHtml").html(dialogHtml);
        $("#" + liId).find('.ExpandDiv').remove();

        $("#" + liId).append('<div class="ExpandDiv" id="ExpandDiv' + liId + '">' + dialogHtml + '</div>');

        $("#" + liId).find('.ExpandDiv').find('table tbody').prepend('<tr><td colspan="2"><iframe  onload="formatIframeLoaded(\'' + liId + '\',\'' + labelLIId + '\',' + isFieldLabel + ');" frameborder="0"  id="FormatToolbar" name="FormatToolbar" src="/apex/FormatToolbarForEditor" title="Content" scrolling="no" width="90%"></iframe></td></tr>');

        var nameOfLabel = labelLIId.replace('lbl', '');
        //set iFrame height
        $('#FormatToolbar').css('height', '101px');

        $('.arrowUp').bind("click", function () {
            openEditDialog(liId, true);
        });

        if (isFieldLabel) {
            $(".fieldTd").show();
            
            $("#trForSectionInformation").hide();
            $("#trForDefaultValue").find('td:last').html($("#" + liId).find('.fieldDiv').html());

            $("#trForDefaultValue").find('td:last').find('select').attr('id', 'defaultValue');
            $("#trForDefaultValue").find('td:last').find('input').attr('id', 'defaultValue');
/*added datetimepicker to for default valueapril 1 2015*/
             if ($("#trForDefaultValue").find('td:last').find('input').size() > 0){
                var inputElem = $("#trForDefaultValue").find('td:last').find('input');
                if ($(inputElem).attr('vatt') == 'DATE'){
                    $(inputElem).datetimepicker({
                            showTimepicker: false,
                            addSliderAccess: true,
                            sliderAccessArgs: { touchonly: false },
                            changeMonth: true,
                            changeYear: true,
                            yearRange: "-100:+10",
                            onSelect: function(dateText) {
                                addLabel();
                                resetSavedButton();
                            }      
                        });
                } else if ($(inputElem).attr('vatt') == 'DATETIME'){
                    $(inputElem).datetimepicker({
                            addSliderAccess: true,
                            sliderAccessArgs: { touchonly: false },
                            changeMonth: true,
                            changeYear: true,
                            yearRange: "-100:+10",
                            onSelect: function(dateText) {
                                addLabel();
                                resetSavedButton();
                            }                            
                        });
                }
                
            }

            $("#trForDefaultValue").find('td:last').find('textarea').attr('id', 'defaultValue');

            $("#trForDefaultValue").find('td:last').find('textarea').attr('name', $('.ExpandDiv').prev().prev().find('textarea').attr('id'));

            $("#trForDefaultValue").find('td:last').find('.css-label').attr('for', 'defaultValue');
            $("#tblForRequirdBlock").show();
            //setTimeout(function(){$('#FormatToolbar').contents().find('#arrowSection').css('display','none')}, 2000);


            $("#" + liId).find('#defaultValue').removeAttr('readonly');

            //Set default true for hide field if field type is reference and disable hide checkbox
            if ($("#" + liId).find('.lookupInput').length > 0) {
                $('#hideField').prop("disabled", true);
                $('#hideField').prop("checked", true);
                $('#hideField').parent().find('label').addClass('checkboxdisabled');
                $("#trForDefaultValue").find('td:last').find('input[type="hidden"]').attr('id', 'defaultValueHidden');
            }
            //Disable required checkbox 
            if ($("#" + liId).find('#isDefaultRequired' + nameOfLabel).val() == "true" || $("#" + liId).find('#isDefaultRequired' + nameOfLabel).val() == true) {
                $('#requiredChk').prop("disabled", true);
                $('#requiredChk').parent().find('label').addClass('checkboxdisabled');
            } else {
                $('#requiredChk').prop("disabled", false);
                $('#requiredChk').parent().find('label').removeClass('checkboxdisabled');;
            }
            if ($("#" + liId).find('#upsertField' + nameOfLabel).val() == "true" || $("#" + liId).find('#upsertField' + nameOfLabel).val() == true) {
                $('#upsertField').prop('checked', true);
            } else {
                $('#upsertField').prop('checked', false);
            }

            if ($("#" + liId).find('#isUserSelectedRequired' + nameOfLabel).val() == "true" || $("#" + liId).find('#isUserSelectedRequired' + nameOfLabel).val() == true) {
                $('#requiredChk').prop('checked', true);
                $('#hideField').prop('checked', false);
                //$('#hideField').next().css('pointer-events','none');
            } else {
                $('#hideField').next().removeAttr('style');
                $('#requiredChk').prop('checked', false);
            }
            var defaultValue = $("#" + liId).find('#defaultValue' + nameOfLabel).val();
            var hideField = $("#" + liId).find('#hideField' + nameOfLabel).val();

            var defaultChekboxVal;
            if ($("#trForDefaultValue").find('td:last').find('input[type="checkbox"]').length > 0) {
                if (defaultValue == 'true')
                    $("#trForDefaultValue").find('td:last').find('input[type="checkbox"]').prop('checked', true);
                else
                    $("#trForDefaultValue").find('td:last').find('input[type="checkbox"]').prop('checked', false);
            } else
                $('#defaultValue').val(defaultValue);

            if (hideField == "true" || hideField == true) {
                $('#hideField').prop('checked', true);
                isShowLabel = true;
            }
            var readOnlyField = $("#" + liId).find('#isReadOnly' + nameOfLabel).val();
            if (readOnlyField == "true" || readOnlyField == true) {
                $('#readOnlyField').prop('checked', true);
                $('#defaultValue').removeAttr('disabled');
            }
            else {
                $('#readOnlyField').prop('checked', false);
                $('#defaultValue').removeAttr('disabled');
            }
            $('#errMsgForRequiredField').val($("#" + liId).find('#errMsgForRequired' + nameOfLabel).val());

            //limit check
            $('#limitValue').val($(".uploadboxarea").attr('data-maxfiles'));

            //default value
            var lblName = $("#" + liId).find('label').attr('id').replace('lbl', '');
            var reval = $("#defaultValue").attr('name');
            var revalString = $("#defaultValue").attr('name');
            revalString = revalString.substring($("#defaultValue").attr('name').lastIndexOf('.') + 1, revalString.length);
            reval = $("#defaultValue").attr('name').replace(revalString, lblName);
            //alert(reval);
            var mainLabelElem = $('#defaultValue').parents('div[class="ExpandDiv"]').parent().find('div:first-child > label:first-child');
            if (document.getElementById('defaultValue').addEventListener) {
                document.getElementById('defaultValue').addEventListener("keyup", function () {
                    document.getElementById(reval).value = $('#defaultValue').val();
                    if ($('#defaultValue').val().trim() == "") {
                        $(mainLabelElem).removeClass('grayLabel');
                        /* $('.grayLabel').removeClass('grayLabel');*//* removed by balinder (dec 10 2014)  to fix issue - empty value as default value in config panel causes all hidden fields to show up on form */
                        $('#hideField').prop('checked', false);
                        $('#hideField').attr('disabled', '');
                        $('#hideField').next().css('pointer-events', 'none');
                        $('#hideField').next().addClass('checkboxdisabled');
                    } else {
                        $('#hideField').removeAttr('disabled');
                        $('#hideField').next().removeAttr('style');
                        $('#hideField').next().removeClass('checkboxdisabled');
                    }

                }, false);
            } else {
                document.getElementById('defaultValue').attachEvent("onkeyup", function () {
                    document.getElementById(reval).value = $('#defaultValue').val();
                    if ($('#defaultValue').val().trim() == "") {
                        $(mainLabelElem).removeClass('grayLabel');
                        /* $('.grayLabel').removeClass('grayLabel');*//* removed by balinder (dec 10 2014)  to fix issue - empty value as default value in config panel causes all hidden fields to show up on form */
                        $('#hideField').prop('checked', false);
                        $('#hideField').attr('disabled', '');
                        $('#hideField').next().css('pointer-events', 'none');
                        $('#hideField').next().addClass('checkboxdisabled');
                    } else {
                        $('#hideField').removeAttr('disabled');
                        $('#hideField').next().removeAttr('style');
                        $('#hideField').next().removeClass('checkboxdisabled');
                    }

                });
            }

            if (document.getElementById('defaultValue').addEventListener) {
                document.getElementById('defaultValue').addEventListener("change", function () {
                    addLabel();
                    resetSavedButton();
                    document.getElementById(reval).value = $('#defaultValue').val();
                    if ($('#defaultValue').val().trim() == "") {

                        $(mainLabelElem).removeClass('grayLabel');
                        /* $('.grayLabel').removeClass('grayLabel');*//* removed by balinder (dec 10 2014)  to fix issue - empty value as default value in config panel causes all hidden fields to show up on form */
                        $('#hideField').prop('checked', false);
                        $('#hideField').attr('disabled', '');
                        $('#hideField').next().css('pointer-events', 'none');
                        $('#hideField').next().addClass('checkboxdisabled');
                    } else {
                        $('#hideField').removeAttr('disabled');
                        $('#hideField').next().removeAttr('style');
                        $('#hideField').next().removeClass('checkboxdisabled');
                    }

                }, false);
            } else {
                document.getElementById('defaultValue').attachEvent("onchange", function () {
                    addLabel();
                    resetSavedButton();
                    document.getElementById(reval).value = $('#defaultValue').val();
                    if ($('#defaultValue').val().trim() == "") {
                        $(mainLabelElem).removeClass('grayLabel');
                        /* $('.grayLabel').removeClass('grayLabel');*//* removed by balinder (dec 10 2014)  to fix issue - empty value as default value in config panel causes all hidden fields to show up on form */
                        $('#hideField').prop('checked', false);
                        $('#hideField').attr('disabled', '');
                        $('#hideField').next().css('pointer-events', 'none');
                        $('#hideField').next().addClass('checkboxdisabled');
                    } else {
                        $('#hideField').removeAttr('disabled');
                        $('#hideField').next().removeAttr('style');
                        $('#hideField').next().removeClass('checkboxdisabled');
                    }
                });
            }
            if ($('#trForDefaultValue').find('.lookupInput input').attr('id') != undefined) {
                $('#hideField').prop('checked', true);
                $('#requiredChk').attr('disabled', '');
                $('#requiredChk').next().css('pointer-events', 'none');
                $('#hideField').attr('disabled', '');
                $('#hideField').next().css('pointer-events', 'none');
                $('#hideField').next().addClass('checkboxdisabled');
            }
            //$("#requiredChk").change();

            if (/lblliUPLOAD/i.test(liId)) {
                $("#trForDefaultValue").hide();
                $("#trForHideField").hide();
                $("#trForReadOnlyField").hide();

                $("#trForFileField").show();
                $("#trForLimitField").show();
                $("#trForUploadToChatterField").show();
                $("#trForUpsertField").hide();

                var tempId = liId.replace('lblliUPLOAD', 'FileUploadArea');
                $("#limitValue").val($("#" + tempId).attr('data-maxfiles'));

                $("#selectedfiletypes").val($("#" + tempId).attr('data-allowedfiletypes'));
                $(".fancyheader  span").html($("#selectedfiletypes").val());
                if ($("#selectedfiletypes").val() == "") {
                    $(".fancyheader  span").html("All");
                }
                if ($("#selectedfiletypes").val().indexOf(".jpg") >= 0) {
                    $("#imgType").prop('checked', true);
                }
                if ($("#selectedfiletypes").val().indexOf(".doc") >= 0) {
                    $("#docType").prop('checked', true);
                }
                if ($("#selectedfiletypes").val().indexOf(".xls") >= 0) {
                    $("#xlsType").prop('checked', true);
                }
                if ($("#selectedfiletypes").val().indexOf(".zip") >= 0) {
                    $("#zipType").prop('checked', true);
                }
                if ($("#selectedfiletypes").val().indexOf(".pdf") >= 0) {
                    $("#pdfType").prop('checked', true);
                }
                if ($("#selectedfiletypes").val().indexOf(".mp3") >= 0) {
                    $("#multiType").prop('checked', true);
                }

                $("#errMsgForRequiredField").val($("#" + tempId).attr('data-requiredmessage'));

                if ($("#" + tempId).attr('data-isrequired')) {
                    $('#requiredChk').prop('checked', true);
                }
                if ($("#" + tempId).attr('data-isrequired') == false || $("#" + tempId).attr('data-isrequired') == "false") {
                    $('#requiredChk').prop('checked', false);
                }
                if ($("#" + tempId).attr('data-uploadtochatter')) {
                    $('#chkUploadToChatter').prop('checked', true);
                }
                if ($("#" + tempId).attr('data-uploadtochatter') == false || $("#" + tempId).attr('data-uploadtochatter') == "false") {
                    $('#chkUploadToChatter').prop('checked', false);
                }

            } else {
                $("#trForDefaultValue").show();
                $("#trForHideField").show();
                $("#trForReadOnlyField").show();
                if ($("#" + liId).find('.lookupInput').length > 0) {
                    $("#trForUpsertField").hide();
                } else {
                    $("#trForUpsertField").show();
                }
                $("#trForFileField").hide();
                $("#trForLimitField").hide();
                $("#trForUploadToChatterField").hide();
                console.log(' here to add tooltip in edit drawer');
                 $("#" + liId).find('.expandDiv').find('.field-tooltip-block').remove();
              /*   var tooltiphtml = $("<div  />").append($("#" + liId).find('.field-info-tooltip-text').clone()).html();
                tooltiphtml="<span  class='field-tooltip-block'>"+tooltiphtml+"</span>";
               $("#" + liId).find('#tblForRequirdBlock').before(tooltiphtml);-disable field info popup*/
            }

            if (/lblliCAPTCHA/i.test(liId)) {
                $(".fieldTd").hide();
                $("#tblForRequirdBlock").slideDown('300');
            } else if (/lblliGENERALTEXT/i.test(liId)) {
                $(".fieldTd").hide();
                $("#tblForRequirdBlock").slideDown('300');
            } else {
                $(".ExpandDiv").hide();
                $(".ExpandDiv").slideDown('300', function() {
                    goToNextTourStop();
                });
            }

            if (/RecordTypeId/i.test(liId)) {
                $('#hideField').next().addClass('checkboxdisabled');
                $('#hideField').attr('disabled', true);
                $('#hideField').prop('checked', true);
            }

            $("#" + liId + " .deleteField").hide();
            $("#" + liId + " .editImg").css('opacity', '1');
            $(".formUlLabel").sortable("option", "disabled", true);
            $("#parentUlForm").sortable("option", "disabled", true);
        } else {
            /*if is section*/
             $("#trForSectionInformation").show();
            //code to assign value to sectioncheckbox
            
            if($("#" + liId).parent().hasClass('hideFullSection'))
            { 
                $('#chkhideSectionField').prop('checked', true);
                 
            }
            
            
            
            $(".fieldTd").hide();
            $("#" + dHide).hide();
            $("#" + liId + " .editImg").css('opacity', '1');
            $("#tblForRequirdBlock").slideDown('300', function() {
                    goToNextTourStop();
                });
            $("#parentUlForm").sortable("option", "disabled", true);
        }
        $("#hiddenLiId").val(liId);
        $("#hiddenLiLabelId").val($("#" + liId).find('label').attr('id'));
    }
    if ($("#" + liId).find('.ExpandDiv').length > 0) {
        $("#" + liId).find('.editImg').unbind('mouseover');
        $("#" + liId).find('.editImg').unbind('mouseout');
        //$("#"+liId).find('.editImg').attr('src',editActiveImgUrl);
    }
    else {
        //$("#"+liId).find('.editImg').attr('src',editImgUrl);
        setHover();
    }

    
    

}/* openEditDialog ends*/
        
        function expandDiv(){
            $('#FormatToolbar').css('height','170px');
        }
        function callDiv(){
            $('#FormatToolbar').css('height','101px');
        }
        function formatIframeLoaded(containerId, lblId,isFieldLabel){
            var backColor = '\'#e6ecef !important;\'';
            var textLbl=$("#"+containerId).find("#"+lblId).html();
            window.frames['FormatToolbar'].document.getElementById('editor').innerHTML=textLbl;
            if(isShowLabel){
                //$(window.frames["FormatToolbar"].document).find('.fieldLabel').after('<label style="padding-left:20px;color: #616161;font-size: 11px;"><i>Field will not be visible to user</i></label>');
                window.frames['FormatToolbar'].document.getElementById('hideText').innerHTML  = '<i>Field will not be visible to user</i>';
            }
        }         
        //save label with field default values and required,hide values
        function addLabel() {
    var fieldLabelHtml = window.frames['FormatToolbar'].document.getElementById('editor').innerHTML;
    $("#tempBlockQuotesHide").html(fieldLabelHtml);
    $("blockquote").contents().unwrap();
    fieldLabelHtml = $("#tempBlockQuotesHide").html();
    $("#labelDiv").html(fieldLabelHtml);
    if ($("#labelDiv").has("h1,h2,h3").length) {
        if ($("#labelDiv").find("h1,h2,h3").attr('align') != undefined)
            $("#" + $("#hiddenLiId").val()).css("text-align", $("#labelDiv").find("h1,h2,h3").attr('align'));
        else if ($("#labelDiv").find("h1,h2,h3").css('text-align') != "undefined")
            $("#" + $("#hiddenLiId").val()).css("text-align", $("#labelDiv").find("h1,h2,h3").css('text-align'));
    } else {
        $("#" + $("#hiddenLiId").val()).css("text-align", '');
    }

    if (fieldLabelHtml == "" || fieldLabelHtml == "<br>" || fieldLabelHtml == "Please enter a label.") {
        window.frames['FormatToolbar'].document.getElementById('editor').innerHTML = "Please enter a label.";
        window.frames['FormatToolbar'].document.getElementById('editor').style.color = 'red';
        window.frames['FormatToolbar'].document.getElementById('editor').style.border = '1px solid #FF0000';
        isError = false;
    } else if (/lblUPLOAD/i.test(liId)) {
        if ($('#selectedfiletypes').val() == '' || $("#limitValue").val() == '') {
            isError = false;
        }
    } else {        
        var nameOfLabel = $("#hiddenLiLabelId").val().replace('lbl', '');
        var htmlForli = '<li id="' + idCounter + 'sortableForLabelli"';
        if ($("#" + liId).parent().hasClass('formUlLabel') == false)
            htmlForli += 'style="background:#96cdd7;" class="lbl sectionHeader"';
        else
            htmlForli += 'class="lbl"';
        //Add new Label with Edit Image    
        htmlForli += ' ondblclick="openEditDialog(this.id,' + $('#tblForRequirdBlock').is(':visible') + ');" > <div class="handler" ><label style="font-weight:bold;" id="' + idCounter + 'label">' + fieldLabelHtml + '</label><div style="float:left"><img id="' + idCounter + 'sortableForLabelli" src="http://www.icondig.com/data/icons/picol/icons/edit_32.png" width="18px" height="18px" onclick="openEditDialog(this.id,false);"></div><img id="deleteLabel' + idCounter + '" class="deleteField" onclick="deleteSectoionLabel(this.id);" src="' + deleteImgUrl + '"/></div></li>';
        var liId = $("#hiddenLiId").val();
        if ($("#hiddenLiId").val() == "") {
            $("#parentUlForm").append(htmlForli);
            idCounter++;
        } else {
            if (/lblliUPLOAD/i.test(liId)) {
                var tempId = liId.replace('lblliUPLOAD', 'FileUploadArea');
                $("#" + liId).find("#" + tempId).attr('data-maxfiles', $("#limitValue").val());
                $("#" + liId).find("#" + tempId).attr('data-allowedfiletypes', $("#selectedfiletypes").val());
                $("#" + liId).find("#" + tempId).attr('data-requiredmessage', $("#errMsgForRequiredField").val());
                $("#" + liId).find("#" + tempId).attr('data-isrequired', $('#requiredChk').prop("checked"));
                $("#" + liId).find("#" + tempId).attr('data-uploadtochatter', $('#chkUploadToChatter').prop("checked"));
            }
            var tempId = $("#hiddenLiLabelId").val()
            $("#" + liId).find("#" + tempId).html(fieldLabelHtml);
            $("#" + liId).find('#isDefaultRequired' + nameOfLabel).val($('#requiredChk').prop("disabled"));
            $("#" + liId).find('#isUserSelectedRequired' + nameOfLabel).val($('#requiredChk').prop("checked"));
            $("#" + liId).find('#errMsgForRequired' + nameOfLabel).val($('#errMsgForRequiredField').val());
            var defaultValue, upsertValue;
            if ($('#defaultValue').attr('type') == 'checkbox') {
                defaultValue = $('#defaultValue').prop('checked');
            } else {
                defaultValue = $('#defaultValue').val();
            }
            if ($('#upsertField').attr('type') == 'checkbox') {
                upsertValue = $('#upsertField').prop('checked');
            } else {
                upsertValue = $('#upsertField').val();
            }

            $("#" + liId).find('#hideField' + nameOfLabel).val($('#hideField').prop("checked"));
            /*if ($('#hideField').prop("checked") == true && $("#" + liId).find('label').hasClass('grayLabel') == false) {
                $("#" + liId).find('label').addClass('grayLabel');
            } else if ($('#hideField').prop("checked") == false) {
                $("#" + liId).find('label').removeClass('grayLabel');
            }*/

            $("#" + liId).find('#isReadOnly' + nameOfLabel).val($('#readOnlyField').prop("checked"));
            /*if ($('#readOnlyField').prop("checked") == true && $("#" + liId).find('label').hasClass('readOnlyLabel') == false) {
                $("#" + liId).find('label').addClass('readOnlyLabel');
            } else if ($('#readOnlyField').prop("checked") == false) {
                $("#" + liId).find('label').removeClass('readOnlyLabel');
            }*/

            $("#tempLabelFieldDiv").html($("#" + liId).find('.fieldDiv').html());

            if ($("#tempLabelFieldDiv").find('input[type="checkbox"]').length > 0) {
                if (defaultValue == 'true' || defaultValue) {
                    $("#tempLabelFieldDiv").find('input[type="checkbox"]').attr('checked', 'checked');
                } else
                    $("#tempLabelFieldDiv").find('input[type="checkbox"]').removeAttr('checked');
            } else if ($("#tempLabelFieldDiv").find('select').length > 0) {
                $("#tempLabelFieldDiv").find('select').find('option').each(function () {
                    if ($(this).attr('value') == defaultValue)
                        $(this).attr('selected', 'true');
                });
            } else if ($("#tempLabelFieldDiv").find('textarea').length > 0) {
                $("#tempLabelFieldDiv").find('textarea').text(defaultValue);
            } else {
                if ($("#" + liId).find('.fieldDiv input[type="hidden"]').length > 0)
                    $("#tempLabelFieldDiv").find('input[type="hidden"]').attr('value', $('#defaultValueHidden').val());

                $("#tempLabelFieldDiv").find('input[type="textbox"]').attr('value', defaultValue);
            }
            $("#" + liId).find('.fieldDiv').html($("#tempLabelFieldDiv").html());

            $("#" + liId).find("#defaultValue" + nameOfLabel).val(defaultValue);
            $("#" + liId).find("#upsertField" + nameOfLabel).val(upsertValue);
            makeAllLiHeightEqual();
        }
        
        $("#fieldLabelTxt").val('');
    }
    addRequiredMarkOnLabel();
    }
        
        function addNewLiItem(){
            //calculate Li Index             
        }
        function addNewSectionDetail(){
            resetSavedButton();
            initScrollbar();   
            var nextCounter=nextSectionCounter();          
            var liId = idCounter+ 'sortableForLabelli';
            /*var imgUrl = "{!URLFOR($Resource.iconImages,'Edit.png')}";*/
            var imgUrl = "{!URLFOR($Resource.alpha,'blank.png')}";
            var ulHtml = '<li><table class="mainTable" width="100%"><tr><td width="100%"><ul class="formUlLabel" id="labelformUl'+ nextCounter+'" ><li class="lbl sectionDisabled" ondblclick="openEditDialog(\''+liId+'\',false);" id="'+liId+'"><label id="sectionLabel'+nextCounter + '" class="ff-section-header" style="font-size: 20px;">New Section Title</label> <img id="deleteFormUl'+ nextCounter+'" class="deleteField" onclick="deleteSection(this.id);" src="'+deleteImgUrl+'"/><img class="editImg" src="'+ imgUrl +'" onclick="openEditDialog(\''+liId +'\',false);" /></li></ul></td></tr></table> </li>';
            idCounter++;
            if($( "#parentUlForm" ).find('.addNewSection').length>0){
                var idx = $( "#parentUlForm" ).find('.addNewSection').index();
                idx = idx+1;
                $("#parentUlForm li:nth-child("+idx +")").before(ulHtml);
            }else
                $("#parentUlForm").append(ulHtml);
            sectionCounter++;
            if($("#parentUlForm").find("li ul").find('ul').length>0)
                $("#parentUlForm").find("li ul").find('ul').parent().parent().parent().parent().parent().remove();
                 
            makeFormSortable();            
            setHover();
        }
         function nextSectionCounter(){
         var  numberofsections=0;
         
         $("#parentUlForm li ul li label.ff-section-header").each(function() {
    
    numberofsections+=1;
    console.log(' numberofsections '+numberofsections);
});
        
         return numberofsections;
         }
         
        function openNewButtonDialog(){
        if(footerBtnHTMLPopulated==false)
        {
            $('#hiddenLiId').val('');
            //submit Button text
            $("#btnTxt").val('Send') ;
            $("#txtbxSubmitButtonLabel").val('Send') ;
            $("#btnUrl").val('');
            $("#txtareaThankyoumsg").val("Thank you for your submission!");
            $("#tblForRequirdBlock").hide();
            $("#btnUrl").val('') ;
            $("#btnFootnote").val('- required');
            $("#submitBehaviorOptions").val('Display a message') ;
            $("#submitBehaviorOptions").change();
            }
        }
        var isbtnSection=true;
        function openBtnEditDialog(liId){             
            //resetSavedButton();
            $("#btnTxt").removeClass('errorMsg');
            if($("#"+$("#hiddenLiId").val()).find(".ExpandDiv").length>0){
                addLabel();
                $(".ExpandDiv").remove();
                     
            }
            if($(".Ulbtn").find(".expandBtnDiv").length==0){
                var btnDialogHtml = $( '#buttonDialog' ).html();
                $( '#buttonDialog' ).html('');
                $(".Ulbtn").append('<div class="expandBtnDiv">'+btnDialogHtml+'</div>') ;
                bindMsgAndLinkFoucusEvent();
            }
            $("#submitBehaviorOptions").change();
            if($(".expandBtnDiv").is(":visible")){              
                saveButton();
                if(isbtnSection){
                    $('.arrowbtnUp').unbind('click');                     
                    $("#btnTxt").removeClass('errorMsg');
                    $(".arrowbtnUp").hide();
                    $(".expandBtnDiv table").slideUp('300', function() {
                        goToNextTourStop();
                    });                    
                    setTimeout(function(){$(".expandBtnDiv").hide()},300);
                    setTimeout(function(){$("#"+liId).find('.editImg').removeClass('togHoverActive');$("#"+liId).find('.editImg').removeAttr('style');},300);
                    //setTimeout(function(){$("#"+liId).find('.editImg').attr('src',"{!URLFOR($Resource.iconImages,'expand.png')}")},300);
                    $("#sortableForFields.dropfields" ).sortable( "option", "disabled", false );                 
                    $(".formUlLabel" ).sortable( "option", "disabled", false );
                    $("#parentUlForm" ).sortable( "option", "disabled", false );                     
                }                             
            }else{
                 
                $(".arrowbtnUp").show();
                $("#tempBtnDialogHtml").html()
                $("#hiddenLiId").val(liId);
                $("#hiddenLiButtonId").val( $( "#"+liId ).find( 'input[type="button"]').attr('id'));
                $("#btnFootnote").val($( "#"+liId ).find('.footnoteDiv label').text());         
                $("#btnTxt").val($("#"+liId).find('input[type="button"]').val()) ;
                $("#txtbxSubmitButtonLabel").val($("#"+liId).find('input[type="button"]').val()) ;
                $("#btnUrl").val( $( "#"+liId ).find( 'input[type="button"]' ).attr('btnUrl'));
                $("#txtbxRedirectUrl").val( $( "#"+liId ).find( 'input[type="button"]' ).attr('btnUrl'));

                if ($("#txtbxRedirectUrl").val() != "")
                {
                    $('a[href$="#formconfirmationRadio1"]').parent().removeClass('active');
                    $('a[href$="#formconfirmationRadio2"]').parent().addClass('active')
                    $('#formconfirmationRadio1').removeClass('active in');
                    $('#formconfirmationRadio2').addClass('active in');            
                }   
                            

                $("#BtnMessage").val($( "#"+liId ).find( 'input[type="button"]' ).attr('btnMessage')) ;
                $("#txtareaThankyoumsg").val($( "#"+liId ).find( 'input[type="button"]' ).attr('btnMessage')) ;
                $("#submitBehaviorOptions").val($( "#"+liId ).find( 'input[type="button"]' ).attr('btnSubmitBehavior')) ;
                $("#btnSendNotificatonEmail").val($( "#"+liId ).find( 'input[type="button"]' ).attr('SendNotificatonEmail')) ; 
                var notificationEmails = $( "#"+liId ).find( 'input[type="button"]').attr('notificationEmails');
                if(notificationEmails == undefined  )
                    notificationEmails = '';
                var splitedNotificationEmails = notificationEmails.split(",");
                $( ".notificationEmail" ).remove();
                $(".tdForNotification").html('');
                for(var i=0;i<splitedNotificationEmails.length;i++){
                    addNotificatonEmail(splitedNotificationEmails[i]);
                }
                $(".expandBtnDiv table").hide();
                $(".expandBtnDiv").show();
                $(".expandBtnDiv table").slideDown('300');
                 
                //Arrow Slide Up Effect
                $('.arrowbtnUp').bind("click", function() {
                    openBtnEditDialog(liId);                
                    $(".formUlLabel" ).sortable( "option", "disabled", false );
                    $("#parentUlForm" ).sortable( "option", "disabled", false );        
                });
                 
                //Set Default Text for Button
                document.getElementById('btnTxt').addEventListener("keyup", function() {
                    $('.btnDiv input').val($('#btnTxt').val());
                }, false);
                document.getElementById('txtbxSubmitButtonLabel').addEventListener("keyup", function() {
                    $('.btnDiv input').val($('#txtbxSubmitButtonLabel').val());
                }, false);

                document.getElementById('btnFootnote').addEventListener("keyup", function() {
                    $('.footnoteDiv label').text($('#btnFootnote').val());
                }, false);
                $("#sortableForFields.dropfields" ).sortable( "option", "disabled", true );                 
                $(".formUlLabel" ).sortable( "option", "disabled", true );
                $("#parentUlForm" ).sortable( "option", "disabled", true );    
            }
             
            if($("#"+liId).find('.expandBtnDiv').is(':visible')){               
                $("#"+liId).find('.editImg').addClass('togHoverActive');
                $("#"+liId).find('.editImg').css('opacity','1');
            }                  
        }
        var htmlForButton='';
        function saveButton(){
            //var buttonText = $('<div/>').text($("#btnTxt").val()).html();
            var buttonText = $("#txtbxSubmitButtonLabel").val();
            var btnSendNotificatonEmail = $("#btnSendNotificatonEmail").is(":checked");
            //var btnUrl = $("#btnUrl").val();
            var btnUrl = $("#txtbxRedirectUrl").val();
            var btnSubmitBehavior = $("#submitBehaviorOptions").val();
            //var btnMessage =$('<div/>').text($("#BtnMessage").val()).html();
            var btnMessage = $("textarea#txtareaThankyoumsg").val();
            
            var btnFootnote =  $("#btnFootnote").val();   
                
            var notificationEmails = '';
            var addFlag = false;
            var emailValue = '';
            $( ".notificationEmail" ).each(function( index ) {
                emailValue = $( this ).val();
                if(emailValue.trim().length>0){
                    if(addFlag )
                        notificationEmails +=',';
                    notificationEmails += emailValue;
                    addFlag  = true;
                }
            });
         
                isbtnSection=true;
                htmlForButton = '<input type="button" class="sectionHeader ff-btn-submit"  notificationEmails="'+ notificationEmails+'" id="';
                 
                if( $("#hiddenLiId").val()==""){
                    htmlForButton += idCounter+'sortableForButton"';
                }else{
                    htmlForButton += $("#hiddenLiId").val()+'"';
                } 
                htmlForButton +=' onclick="SubmitData();"';
                htmlForButton +=' value="'+ buttonText+'" btnMessage="'+btnMessage+'" btnUrl="'+btnUrl+'" SendNotificatonEmail="'+ btnSendNotificatonEmail+'"></input>';
                 
                var idOfButton = 'ftrSortableForLabelli'; 
                var htmlForli = '<li  id="'+idOfButton+'" class="Ulbtn sectionHeader"  ><div  class="footnoteDiv"><span class="requiredSpan ff-footnote ff-required-mark">*</span><label  class="ff-footnote-label">'+btnFootnote+'</label></div><div class="btnDiv">'+htmlForButton+ '</div><div class="btnEditDiv"><img class="editImg" src="{!URLFOR($Resource.alpha,'blank.png')}" onclick="openBtnEditDialog(\''+idOfButton+'\');" /></div></li>';
                if( $("#hiddenLiId").val()==""){
                    $("#parentUlForm").append(htmlForli );
                    idCounter++;
                }else{
                    $("#"+$("#hiddenLiId").val() ).find('.btnDiv').html(htmlForButton );   
                    $( "#"+$("#hiddenLiId").val() ).find('.footnoteDiv').html('<span  class="requiredSpan  ff-footnote ff-required-mark">*</span><label class="ff-footnote-label">'+btnFootnote+'</label>');                 
                    makeAllLiHeightEqual();
                }
                $(".ui-icon-closethick").click();
                $("#btnTxt").val('') ;
                $("#btnUrl").val('');
              
        }
         
        function itemUsedInRule(itm){
        console.log(' Item to be deleted- '+itm);
        var rulestr=isRuleExistForId(itm);
      var   returnflag=false;
           if(rulestr!='undefined' && rulestr!='')
           {
           returnflag=true;
           }
            return returnflag;/*(lstRuleFields.indexOf(itm) > -1 );*/
        }
         
        function calcualteFormInformation(){
            var countOfButtons = $("#parentUlForm").find('.Ulbtn').length;
            var countOfSection = $("#parentUlForm").find('.formUlLabel').length;
            var countOfFields =  $(".formUlLabel").find('.fieldLi').length;
            var buttonUrlHtml = '';
            var salesforceObjects = '';
            $("#parentUlForm").find('.Ulbtn').each(function(){
                if(buttonUrlHtml != '')
                    buttonUrlHtml += '<br/>';
                buttonUrlHtml +=  $(this).find('input[type="button"]').attr('btnUrl');
            });
            var strFieldId = '';
            //Add div
            $(".formUlField").find('.fieldLi div div').each(function(){
                if($(this).hasClass('deleteField') == false){
                    strFieldId = $(this).children().attr('id').split('.')[0];                   
                    if(salesforceObjects.indexOf(strFieldId)== -1){
                        if(salesforceObjects != '')
                            salesforceObjects += ', ';
                        salesforceObjects += strFieldId;
                    }
                }   
            });             
            $('#countOfButtons').text(countOfButtons);
            $('#countOfSection').text(countOfSection);
            $('#countOfFields').text(countOfFields );
            $('#buttonUrlHtml').html(buttonUrlHtml);
            $("#countOfRules").text('0');
            $('#salesforceObjects').text(salesforceObjects);
        }
        function ruleEdit(ruleId){
            var ruleIndex = ruleId.replace('ruleEdit','');
            $("#hiddenSelectedRuleId").val(ruleIndex);
            $("#selectOptionsIf").val($("#selectOptionsIf"+ruleIndex).val());
            $("#selectOptionsIfFields").val($("#selectOptionsIfFields"+ruleIndex).val());
            $("#selectOptionsIfOperators").val($("#selectOptionsIfOperators"+ruleIndex).val());
            $("#ifFieldValue").val($("#ifFieldValue"+ruleIndex).val());
            $("#selectOptionsThenOperators").val($("#selectOptionsThenOperators"+ruleIndex).val());
            $("#selectOptionsFormattedLike").val($("#selectOptionsFormattedLike"+ruleIndex).val());
            $("#errorMsgWhenRuleNotFollowed").val($("#errorMsgWhenRuleNotFollowed"+ruleIndex).val());
            $( '#rulesDialog' ).dialog( 'open' );

        }

        // Delete Field from form
        function deleteField(delId){
        console.log(' delid '+delId);
           // var fieldId = $('li#' + delId + ' .fieldDiv').find('input,textarea,select').eq(0).attr('id');
            var liElement= $('li#'+delId+'');
            clearFieldInfoPopupContent(liElement);
            var fieldId =getFormattedElemId(liElement);
            if (itemUsedInRule(fieldId)){
                showError("<div class='primary'>This field is being used in one or more of your form's conditional rules.</div> <br/> <br /><div class='secondary'>Please adjust your rules in the Edit Rules tab and try again.</div>");
            } else {        
                var addList;
                if($("#"+delId).hasClass('sortableForFields'))
                    addList='sortableForFields';
                          
                if($("#"+delId).hasClass('sortableForFieldsNew'))
                    addList='sortableForFieldsNew';
                      
                if($("#"+delId).hasClass('sortableForFieldsThird'))
                    addList='sortableForFieldsThird';
                      
                if($("#"+delId).hasClass('sortableForFieldsFourth'))
                    addList='sortableForFieldsFourth';
                      
               
                     
                $("#"+delId).removeClass('A');
                $("#"+delId).removeClass('B');
                $("#"+delId).removeClass('C');
                     
                $("#"+delId).find('.addObjName').prev().remove();
                $("#"+delId).find('.addObjName').remove();
                $("#"+delId).find('.ExpandDiv').remove();
                $("#"+delId).find('div:first').css('width','100%');
                $("#"+delId).find('div:nth-child(2)').hide();             
                $("#"+delId).find('select,input').val('');
                $("#"+delId).find('textarea').text('');
                $("#"+delId).find('select,input,textarea').removeAttr('value');
                $("#trForDefaultValue").find('td:last').find('input').attr('id','defaultValue');
                $("#trForDefaultValue").find('td:last').find('textarea').attr('id','defaultValue');
                $("#"+delId).find('input[type="hidden"]').val('');
                $("#"+delId).find('.editDelDiv').remove();             
                $("#"+delId).addClass("tooltip fieldLi ui-state-default");
                $("#"+delId).removeAttr('ondblclick');
                //var deletedLiHtml = $("#"+delId).clone().wrap('<p>').parent().html();
                var deletedLiHtml = fetchNewHTMLValue($("#"+delId).clone().wrap('<p>').parent());

                $("#"+delId).remove();
                if(/lblliUPLOAD/i.test(delId) || /lblliGENERALTEXT/i.test(delId) || /lblliCAPTCHA/i.test(delId)){
                    
                }else{                
                    if(addList =='sortableForFields'){
                        $("#sortableForFields").append(deletedLiHtml);
                        sort('sortableForFields');
                    }                   
                         
                    if(addList =='sortableForFieldsNew'){
                        $("#sortableForFieldsNew").append(deletedLiHtml);
                        sort('sortableForFieldsNew');
                    }
                     
                    if(addList =='sortableForFieldsThird'){
                        $("#sortableForFieldsThird").append(deletedLiHtml);
                        sort('sortableForFieldsThird');
                    }
                     
                    if(addList =='sortableForFieldsFourth'){
                        $("#sortableForFieldsFourth").append(deletedLiHtml);
                        sort('sortableForFieldsFourth');
                    }  
                    //Bind Events
                    activeClick();
                }
                           
                initScrollbar();
                 resetSavedButton();
            }
        }
        // Delete Field from form
        
        function fetchNewHTMLValue(val){
            var objs = ['li','label'];
            for(var i=0;i<=objs.length-1;i++){
                if($(val).find(objs[i]).attr('id').length >0 && 
                    (
                        $(val).find(objs[i]).attr('id').lastIndexOf('A')==$(val).find(objs[i]).attr('id').length-1 ||
                        $(val).find(objs[i]).attr('id').lastIndexOf('B')==$(val).find(objs[i]).attr('id').length-1 ||
                        $(val).find(objs[i]).attr('id').lastIndexOf('C')==$(val).find(objs[i]).attr('id').length-1
                    )
                ){
                
                    var newId = $(val).find(objs[i]).attr('id');
                    console.log(' newId '+newId);
                    $(val).find(objs[i]).attr('id',newId.substr(0,newId.length-1));
                }
            }
           $(val).find('.fieldDiv .ff-input-type,.fieldDiv .ff-select-type,.fieldDiv .ff-checkbox,.fieldDiv .ff-textarea').each(function (index) {
            if($(this).attr('id').length >0 && 
                    (
                        $(this).attr('id').lastIndexOf('A')==$(this).attr('id').length-1 ||
                        $(this).attr('id').lastIndexOf('B')==$(this).attr('id').length-1 ||
                        $(this).attr('id').lastIndexOf('C')==$(this).attr('id').length-1
                    )
                ){
            var newId = $(this).attr('id');
             console.log(' newId 1-1 '+newId);
            $(this).attr('id',newId.substr(0,newId.length-1));
            }
            
            });
           if($(val).find('.fieldDiv').children().attr('id') && $(val).find('.fieldDiv').children().attr('id').length >0 && 
                (
                    $(val).find('.fieldDiv').children().attr('id').lastIndexOf('A')==$(val).find('.fieldDiv').children().attr('id').length-1 ||
                    $(val).find('.fieldDiv').children().attr('id').lastIndexOf('B')==$(val).find('.fieldDiv').children().attr('id').length-1 ||
                    $(val).find('.fieldDiv').children().attr('id').lastIndexOf('C')==$(val).find('.fieldDiv').children().attr('id').length-1
                )
            ){
                var newId = $(val).find('.fieldDiv').children().attr('id');
                $(val).find('.fieldDiv').children().attr('id',newId.substr(0,newId.length-1));
            }
            $(val).find('input[type="hidden"]').each(function(e){
                if($(this).attr('id').length >0 && 
                    (
                        $(this).attr('id').lastIndexOf('A')==$(this).attr('id').length-1 ||
                        $(this).attr('id').lastIndexOf('B')==$(this).attr('id').length-1 ||
                        $(this).attr('id').lastIndexOf('C')==$(this).attr('id').length-1
                    )
                ){
                    var newId = $(this).attr('id');
                    console.log(' newId 3 '+newId);
                    $(this).attr('id',newId.substr(0,newId.length-1));
                }
            });
            $(val).find(".listName").remove();
             console.log(' HTML______ '+$(val).html());
            return $(val).html();
        }
        function sortingFieldLabel(){
            var labelVals = [];
            var lblLIValues = $("#sortableForFields").find('li.lbl').remove();
            var btnLIValues = $("#sortableForFields").find('li.Ulbtn').remove();
            var labelWithLiMap = new Object();
            $("#sortableForFields").find('li').each(function(){
                if($(this).hasClass('lbl')==false){
                    labelVals.push($(this).find("div:visible").attr('lblname'));
                    labelWithLiMap[$(this).find("div:visible").attr('lblname')] = $(this).clone().wrap('<p>').parent().html();
                }
            });
            labelVals.sort();
            $("#sortableForFields").find('li').remove();
            for(var i = 0, l = labelVals.length; i < l; i++){
                $("#sortableForFields").append(labelWithLiMap[labelVals[i]]);
            }
            $("#sortableForFields").append(lblLIValues);
            $("#sortableForFields").append(btnLIValues);           
            makeJqueryTooltip();            
        }

        //Delete Section
        function deleteSection(delId){             
            // Check section containing a required field.   
            var fieldsUsedInRule = false;
            var isSectionContainsReqField = false;
            var sectionUsedInRule = itemUsedInRule($("#"+delId).parent().parent().attr('id'));
            var lblId = '';
            $("#"+delId).parent().parent().find(".fieldLi").find('label').each(function(){
                //var fieldId = $(this).parent().parent().find('.fieldDiv input,textarea,select').eq(0).attr('id');
                /*modified to fix the child object element id issue on mar 10 2015 */
                                var liElement= $(this).parents('.fieldLi');
                                var fieldId =getFormattedElemId(liElement);
                if (itemUsedInRule(fieldId))
                    fieldsUsedInRule = true;                
                lblId = $(this).attr('id');
                lblId = lblId.replace('lbl','');
                if($(this).parent().find('#isDefaultRequired'+lblId).val() == "true")
                    isSectionContainsReqField = true;
            });
            if (sectionUsedInRule){
                showError("<div class='primary'>This section is being used in one or more of your form's conditional rules.</div> <br/> <br /><div class='secondary'>Please adjust your rules in the Edit Rules tab and try again.</div>");
            }else if (fieldsUsedInRule){
                showError("<div class='primary'>This section contains fields that are being used in one or more of your form's conditional rules.</div> <br/> <br /><div class='secondary'>Please adjust your rules in the Edit Rules tab and try again.</div>");
            }else if(isSectionContainsReqField){
                showError("<div class='primary'>The section you are trying to delete has a required field inside of it.</div><br /> <br /><div class='secondary'>To delete this section, move the required field to a different section and try again.</div>");
            }else {                
                //Delete Section li first
                var i = 0;
                $("#"+delId).parent().parent().find('.deleteField').each(function(){
                    i++;
                    if(i>1){
                        $(this).click();
                    }
                });
                //Delete Section
                $('#'+delId).parent().parent().parent().parent().parent().parent().parent().remove();
                resetSavedButton();
                initScrollbar();
            }
        }
         
        //Delete Section
        function deleteSectoionLabel(delId){
            $('#'+delId).parent().parent().remove();
            resetSavedButton();
            initScrollbar();
        }
         
        function addNotificatonEmail(emailValue){
            $(".tdForNotification").append('<div class="notificationDiv"><input type="text" class="notificationEmail"  value="'+ emailValue+'"/></div>');
            if($(".notificationDiv").length>1)
                $("#removeImg").show();
            else
                $("#removeImg").hide();
        }
         
        function removeNotificatonEmail(){
            $(".tdForNotification").find('.notificationDiv:last').remove();
            if($(".tdForNotification").find('.notificationDiv').length ==1)
                $("#removeImg").hide(); 
        }
        function addNewSectionLi(){
            $("#parentUlForm").find(".addNewSection").remove();
            var idx = $( "#parentUlForm" ).find('.Ulbtn').index();
            idx = idx+1;
            var liHtml = '<li  style="cursor:pointer;{!IF(isFirstTimeFormEdit,'margin-top:15%;','')}"   class="addNewSection"><label  style="cursor:pointer;"  class="addNewSectionInner"> Add New Section +</label>';
            //liHtml += '<div class="dragDropInfoDiv" style="margin-left:20px;display:{!IF(isFirstTimeFormEdit,'block;','none;')}"><label style="margin-right:50px;"></label><img src="{!URLFOR($Resource.iconImages,'dragdrop.png')}" ></div> ';
            //liHtml += '<div class="arrowUpper" style="cursor:default;display:{!IF(isFirstTimeFormEdit,'block;','none;')}"><img src="{!URLFOR($Resource.iconImages,'arrow.png')}" ></div>';
            liHtml += '<div id="addSectionPlus" style="background-color:#dcecf5;border-radius:5px;display: none; margin-right:7px;  " class="addNewSectionIcon"><div class="plusIcon">+</div></div><ul  style="width:90%" class="formUlLabel" id="labelformUlForAddNewSection" ></ul></li>'
            $("#parentUlForm li:nth-child("+idx +")").before(liHtml);
            $("#parentUlForm").find("li ul").find('.addNewSection').remove();
        }
        function addNewSectionLiORIGINAL(){
            $("#parentUlForm").find(".addNewSection").remove();
            var idx = $( "#parentUlForm" ).find('.Ulbtn').index();
            idx = idx+1;
            var liHtml = '<li  style="cursor:pointer;{!IF(isFirstTimeFormEdit,'margin-top:15%;','')}"   class="addNewSection"><label  style="cursor:pointer;"  class="addNewSectionInner"> Add New Section +</label>';
            //liHtml += '<div class="dragDropInfoDiv" style="margin-left:20px;display:{!IF(isFirstTimeFormEdit,'block;','none;')}"><label style="margin-right:50px;"></label><img src="{!URLFOR($Resource.iconImages,'dragdrop.png')}" ></div> ';
            //liHtml += '<div class="arrowUpper" style="cursor:default;display:{!IF(isFirstTimeFormEdit,'block;','none;')}"><img src="{!URLFOR($Resource.iconImages,'arrow.png')}" ></div>';
            liHtml += '<div id="addSectionPlus" style="background-color:#dcecf5;border-radius:5px;display: none; padding: 5px; margin-left: -8px; width: 100%;" class="addNewSectionIcon"><div class="plusIcon">+</div></div><ul  style="width:90%" class="formUlLabel" id="labelformUlForAddNewSection" ></ul></li>'
            $("#parentUlForm li:nth-child("+idx +")").before(liHtml);
            $("#parentUlForm").find("li ul").find('.addNewSection').remove();
        }
         
         
        //Close Form and Asked confirmation that you want to close form without save or not.
        function closeForm(){           
            if(isChangesMadeInForm == true){
                $("#dialog-confirm").html("<div class='dialogHeader'><div class='dialogIcon dialogIconAlert'>&nbsp;</div></div><div class='dialogFont'><div class='primary'>Are you sure you want to close this form without saving?</div></div>");
                // Define the Dialog and its properties.
                $("#dialog-confirm").dialog({
                    resizable: false,
                    modal: true,
                    title: "Close",
                    height: "auto",
                    width: 413,
                    position: 'center',
                    buttons: {
                        "Close": function () {
                            $(this).dialog('close');
                            $('.button').removeClass('active');          
                            $('#tabList tr td').find('.button').each(function(){ 
                                if($(this).text() == 'Close'){
                                    $(this).addClass('active');
                                }              
                            });
                            callback(true);
                        },
                        "Cancel": function () {
                            $(this).dialog('close');
                            callback(false);
                        }
                    },
                    open: function( event, ui ) {
                        $('.ui-dialog :button').blur();
                    }
                });
                
                function callback(value) {
                    if (value) {
                        window.location.href= '/apex/FormMenu';
                    }else {
                        return false;
                    }
                }
            }else{
                window.location.href= '/apex/FormMenu';
            }
            hideSection();
        }
        //hide arrow section 
        function hideSection(){
            $(".dragDropInfoDiv").hide();
            $(".arrowUpper").hide();
            $(".addNewSection").css('margin-top','0%');
        }
        //Show Save confirm Dialog
        function showSaveConfirm(){
            $('.button').removeClass('active');      
            if(isFirstTimeFormEdit == "true"){
                $("#dialog-confirm").html("<div class='dialogHeader'><div class='dialogIcon dialogIconAlert'>&nbsp;</div></div><div class='dialogFont'><div class='primary'>Are you sure you want to save?</div></div>"); 
            } else {
                $("#dialog-confirm").html("<div class='dialogHeader'><div class='dialogIcon dialogIconAlert'>&nbsp;</div></div><div class='dialogFont'><div class='primary'>Are you sure you want to save?</div><br /><br /><div class='secondary'>This will automatically update all websites hosting this form.</div></div>");
            }
            // Define the Dialog and its properties.
            $("#dialog-confirm").dialog({
                resizable: false,
                modal: true,
                title: "Save",
                height: "auto",
                width: 413,
                buttons: {
                    "No": function () {
                        $(this).dialog('close');
                        $("#btnSaved").removeClass('btnGreenClick');                        
                        callback(false);
                    },                
                    "Yes": function () {
                        $(this).dialog('close');
                        callback(true);
                    }                    
                },                  
                open: function( event, ui ) {
                    $('.ui-dialog :button').blur();
                }
            });
            $('.ui-dialog :button').blur();
            $('#dialog-confirm').dialog('option', 'position', 'center');
            function callback(value) {
                if (value) {
                    var isErr = false;
                    var fieldLid = '';
                    var defaultValue = '';
                    //Validate to the tool so that if a reference field is required, the user has to pick a value using the lookup before they can save their form.
                    $("#parentUlForm .defReq").each(function(){
                        if($(this).parent().parent().css('display') != 'none'){
                            if($(this).val() == "true"){                                 
                                fieldLid  = $(this).attr('id');
                                fieldLid  = fieldLid.replace('isUserSelectedRequired','defaultValue');
                                defaultValue = $(this).parent().find('#'+fieldLid ).val();
                                if((defaultValue == undefined || defaultValue == '')){
                                    showError("<div class='primary'>There are one or more required reference fields in your form without a default value.</div> <br/> <br /><div class='secondary'>Please select a default value for any <br />required reference fields and try again.</div>");
                                    isErr = true;
                                    $("#btnSaved").text('Publish Draft');
                                    $("#btnSaved").removeClass('va-disabled');
                                    return false;
                                }
                            }
                        }
                    });
                    if(isErr == false){
                        save(false,false);
                    }
                }else {
                    return false;
                }
            }
           
        }
       function showFirstTimePublish(){
       var urltppublishpage='{!$Site.BaseUrl}FormPublish?ffid={!$CurrentPage.parameters.Id}';
            $("#SaveFormInfoDialog").html("<div class='dialogHeader'><div class='dialogIcon dialogIconOK'>&nbsp;</div></div><div class='dialogFont'><div class='primary'>Your form has been saved successfully!</div><br /><br /><div class='secondary'>Ready to publish? Click on the 'Go to Publish Options' below to publish your form.</div></div>");
            // Define the Dialog and its properties.
            $("#SaveFormInfoDialog").dialog({
                resizable: false,
                modal: true,
                title: "Save Info",
                height: "auto",
                width: 413,
                buttons: {
                    "OK": {
                    click: function () {
                        $(this).dialog("close");
                    },
                    text: 'Stay in Form Editor',
                    'class': 'vabutton2'
                    },
                    "Cancel": {
                    click: function () {
                        window.location.href = urltppublishpage;
                    },
                    text: 'Go To Publish Options',
                    'class': 'vabutton1'
                    }
                },
                open: function( event, ui ) {
                    $('.ui-dialog :button').blur();
                }
            });
            $('.ui-dialog :button').blur();           
        }
        function showSaveFormInfo(){
            $("#SaveFormInfoDialog").html("<center style='text-align:center;margin-bottom: 2px;' class='dialogFont'><br />Your form has been saved! <br /><br />Don't forget to copy the <b>embed code</b> onto your website if you haven't already.</center><div style='color: #909090;float: right;font-size: 10px;font-weight: bold;padding-top:20px;'><input type='checkbox' id='hideMsg'/>Don't show this message again for this form</div>");
            // Define the Dialog and its properties.
            $("#SaveFormInfoDialog").dialog({
                resizable: false,
                modal: true,
                title: "Save Info",
                height: "auto",
                width: 413,
                buttons: {
                    "OK": {
                    click:  function () {                                            
                        $(this).dialog('close');
                        if(isFirstTimeFormEdit == "true"){                             
                            $(".dragDropInfoDiv").hide();
                            $(".arrowUpper").hide();
                            $(".addNewSection").css('margin-top','0%');
                            $("#embedCodeDiv").show();
                            $("#copy_textarea").show();
                            //Change background color of embed Code text are with fade affect
                            var T = [];
                            var cl1 = "#f7d00f";
                            var cl2 = "#f1f6f9";
                            var elm = document.getElementById("copy_textarea");
                            stopfade(T);
                            T  = fadeText(cl1,cl2,elm);
                        }
                        isChangesMadeInForm = false;
                        isFirstTimeFormEdit = "false";
                        if($("#hideMsg").is(':checked')){
                            saveMessage();
                        }
                         
                    },
                    text: 'OK',
                    'class': 'vabutton2'
                    }
                },
                open: function( event, ui ) {
                    $('.ui-dialog :button').blur();
                }
            });
            $('.ui-dialog :button').blur();           
        }
       
        function showError(msg){
            $("#dialog-error").html("<div class='dialogHeader'><div class='dialogIcon dialogIconAlert'>&nbsp;</div></div><div class='dialogFont'>"+msg+"</div>");
            // Define the Dialog and its properties.
            $("#dialog-error").dialog({
                resizable: false,
                modal: true,
                title: "Save Info",
                height: "auto",
                width: 413,
                buttons: {
                    "OK":{click :function () {
                        $(this).dialog('close');
                    },
                    text: 'OK',
                    'class': 'vabutton1'
                    }
                },
                open: function( event, ui ) {
                    $('.ui-dialog :button').blur();
                }
            });
            $('.ui-dialog :button').blur();
        }
        function showUpgradePrompt(msg){
            $("#dialog-error").html("<div class='dialogHeader'><div class='dialogIcon dialogIconAlert'>&nbsp;</div></div><div class='dialogFont'><div class='primary'>"+msg+"</div></div>");
            // Define the Dialog and its properties.
            $("#dialog-error").dialog({
                resizable: false,
                modal: true,
                title: "Save Info",
                height: "auto",
                width: 413,
                buttons: {
                    "OK":{
                    click: function() {
                        window.open('http://visualantidote.com/fastforms#Subscribe', '_blank');
                    },
                    text: 'Upgrade Now!',
                    'class': 'vabutton2'
                    },
                    "No Thanks":{
                    click: function () {
                        $(this).dialog('close');
                    },
                    text: 'No Thanks',
                    'class': 'vabutton1'
                    }
                    },
                 
                open: function( event, ui ) {
                    $('.ui-dialog :button').blur();
                }
            });
            $('.ui-dialog :button').blur();
        }        
        
        
        
        function setHeightOfEditorInFieldDiv(){ 
        }
       
        function closePrivewDialog(){
            $('#preview').dialog('close');           
            $("#removeFiles").remove();
            $('.button').removeClass('active'); 
        }
       
        function closeSavingDialog(){
            $( '#dialogSucess' ).dialog( 'close' );
        }
       
        function closeErrorDialog(){
            $( '#dialogSucess' ).dialog( 'close' );
        }
       
        function Blend(a, b, alpha) {

            var aa = [
                  parseInt('0x' + a.substring(1, 3)), 
                  parseInt('0x' + a.substring(3, 5)), 
                  parseInt('0x' + a.substring(5, 7))
            ];
        
            var bb = [
                  parseInt('0x' + b.substring(1, 3)), 
                  parseInt('0x' + b.substring(3, 5)), 
                  parseInt('0x' + b.substring(5, 7))
            ];
        
            r = '0' + Math.round(aa[0] + (bb[0] - aa[0])*alpha).toString(16);
        
            g = '0' + Math.round(aa[1] + (bb[1] - aa[1])*alpha).toString(16);
        
            b = '0' + Math.round(aa[2] + (bb[2] - aa[2])*alpha).toString(16);
        
            return '#'
                  + r.substring(r.length - 2)
                  + g.substring(g.length - 2)
                  + b.substring(b.length - 2);
        }
      
        function fadeText(cl1,cl2,elm){
            var t = [];
            var steps = 100;
            // you can customize
            var delay = 1000;
            // you can customize
            for (var i = 0;i<steps;i++) {
                (function(j) {
                    t[j] = setTimeout(function() {
                        var a  = j/steps;
                        var color = Blend(cl1,cl2,a);
                        elm.style.backgroundColor = color;
                    }, j*delay/steps);           
                })(i);
            }
            return t; 
        }
        
        function stopfade(t){
            for (i in t) {
                clearTimeout(t[i]);
            }       
        }
        
        function savedButtonClicked(){
            $("#btnSaved").addClass('btnGreenClick');
            if($("#btnSaved").hasClass('btnSaved')==false ){                
                $('.button').removeClass('active');
                if($(".expandBtnDiv").is(":visible")){
                    $('#saveBtn').parent().parent().parent().parent().parent().parent().parent().find('.editImg').click();
                    if(isbtnSection){
                        showSaveConfirm();
                    } 
                }else{                             
                    if(isError){                     
                        showSaveConfirm();       
                    }
                                
                }             
            }        
        }
        function publishDraft(){
            $("#btnSaved").addClass('va-disabled');
            if($(".expandBtnDiv").is(":visible")){
                $('#saveBtn').parent().parent().parent().parent().parent().parent().parent().find('.editImg').click();
                if(isbtnSection){
                    <apex:outputText rendered="{!packageTier == 'Base'}">
                    showPublishConfirm();
                    </apex:outputText>                            
                    <apex:outputText rendered="{!packageTier != 'Base'}">
                    if(!(isFirstOperandValid() && ifThenBlockIsValid()))
                    {
                        ruleValidationCheck();  
                    } 
                    else
                    {
                        showPublishConfirm();
                    }
                    </apex:outputText>                            

                } 
            }else{                             
                if(isError){   
                    <apex:outputText rendered="{!packageTier == 'Base'}">
                    showPublishConfirm();
                    </apex:outputText>                            
                    <apex:outputText rendered="{!packageTier != 'Base'}">                                  
                    if(!(isFirstOperandValid() && ifThenBlockIsValid()))
                    {
                        ruleValidationCheck();  
                    } 
                    else
                    {
                        showPublishConfirm();
                    }   
                    </apex:outputText> 
                }
                                    
            }   
        }
        function ruleValidationCheck()
       {
           $("#dialog-confirm").html("<div class='dialogHeader'><div class='dialogIcon dialogIconAlert'>&nbsp;</div></div><div class='dialogFont'><div class='primary'>You have one or more incomplete rules. Do you want to publish your draft anyway?</div></div>"); 
             
            // Define the Dialog and its properties.
            $("#dialog-confirm").dialog({
                resizable: false,
                modal: true,
                title: "Save",
                height: "auto",
                width: 413,
                buttons: {                    
                    "No":{
                        click: function () {
                            $(this).dialog('close');
                        callback(false);
                        },
                        text: 'No',
                        'class': 'vabutton2'
                    },
                    "Yes":{
                        click: function () {
                            $(this).dialog('close');                                               
                        callback(true);
                        },
                        text: 'Yes',
                        'class': 'vabutton1'
                    }                                    
                },                  
                open: function( event, ui ) {
                    $('.ui-dialog :button').blur();
                }
            });
            $('.ui-dialog :button').blur();
            $('#dialog-confirm').dialog('option', 'position', 'center');
            function callback(value) {
                if (value) {
                      showPublishConfirm();
                }else {
                    return false;
                }
            }
       }
        
        function showPublishConfirm()
        { 
         
            
            
                    var isErr = false;
                    var fieldLid = '';
                    var defaultValue = '';
                    //Validate to the tool so that if a reference field is required, the user has to pick a value using the lookup before they can save their form.
                    $("#parentUlForm .defReq").each(function(){
                        if($(this).parent().parent().css('display') != 'none'){
                            if($(this).val() == "true"){                                 
                                fieldLid  = $(this).attr('id');
                                fieldLid  = fieldLid.replace('isUserSelectedRequired','defaultValue');
                                defaultValue = $(this).parent().find('#'+fieldLid ).val();
                                if((defaultValue == undefined || defaultValue == '')){
                                    showError("<div class='primary'>There are one or more required reference fields in your form without a default value.</div> <br/> <br /><div class='secondary'>Please select a default value for any <br />required reference fields and try again.</div>");
                                    isErr = true;
                                    
                                    $("#btnSaved").removeClass('va-disabled');
                                    return false;
                                }
                            }
                        }
                    });
                    if(isErr == false){
                        save(false,false);
                        
                       /* if(isFirstTimeFormEdit == "true"){
                            showFirstTimePublish();
                             $('.publish-draft').addClass('va-disabled');
                              $('.draft-saved').hide();
                        }
                        else{
                        showSuccessMessage();
                         $('.publish-draft').addClass('va-disabled');
                         $('.draft-saved').hide();
                        }*/
                    }
                 
       
                    
        }
       function showPublishResponse()
        {
        if(isFirstTimeFormEdit == "true"){
                            showFirstTimePublish();
                             $('.publish-draft').addClass('va-disabled');
                              $('.draft-saved').hide();
                        }
                        else{
                        showSuccessMessage();
                         $('.publish-draft').addClass('va-disabled');
                         $('.draft-saved').hide();
                        }
        }
        function showSuccessMessage(){
        var editorurl="{!$Page.FormPublish+'?ffid='+$CurrentPage.Parameters.id}";
        showNotification("successActionBox", "<span >Your form has been updated successfully!<span> <a href='"+editorurl+"' class='vabutton1 ml50 publish-link-btn' >Publish Options</a>");
        }
        function autosaveTriggered(){
            if (isChangesMadeInForm) {
                save(false,true);
                isChangesMadeInForm = false;    
                hideNotification('successActionBox'); 
            }   
        }        
        
        //  javascript for open custom lookup page
        function openLookupPopup(Ltype,Rtype){
        var left = (screen.width/2)-(600/2);
        var top = 250
        //ltype=RecordType&rtype=Account
         
        var url = '/apex/FastFormsLookup?ltype='+Ltype+'&rtype='+Rtype;
        newWin = window.open(url, 'Popup','height=500,width=600,left='+left+',top='+top+',resizable=no,scrollbars=yes,toolbar=no,status=no');
    }
        
         
        
        function closeLookupPopup(){
            if(null!=newWin){
                newWin.close();               
            } 
        }
        function lookupPick(a,b,c,d,e,f,g,h) {
            if($("#defaultValue").attr('name') == undefined  || $("#defaultValue").attr('name') ==''){
                $( "input[id='" + c + "']").val(f);
            }else{
                $("#defaultValueHidden").val(e);
                $("#defaultValue").val(f);
                c=$(".ExpandDiv").parent().find('input[type="textbox"]').attr('id');
                if(c != null){
                    document.getElementById(c).value=f;
                } 
            }             
            addLabel();
            resetSavedButton();                 
            newWin.close();
        }
        function lookupPick2(a,b,c,d,e,f,g,h) {               
            if($("#defaultValue").attr('name') == undefined  || $("#defaultValue").attr('name') =='')
                $( "input[id='" + c + "']").val(e);
            else{
                $("#defaultValueHidden").val(d);
                $("#defaultValue").val(e); 
                c=$(".ExpandDiv").parent().find('input[type="textbox"]').attr('id');
                if(c != null){                  
                    document.getElementById(c).value=e; 
                }                  
            }               
            addLabel();
            resetSavedButton();               
            newWin.close();
        }
        function changeImg(x,con){
            if(con=='add'){
                x.src="{!URLFOR($Resource.iconImages,'AddHover.png')}";
            }
            if(con=='remove'){
                x.src="{!URLFOR($Resource.iconImages,'RemoveHover.png')}";
            }
            if(con=='Copy'){
                x.src="{!URLFOR($Resource.alpha,'HelpHover.png')}";
            }            
            if(con==undefined){
                x.src="{!URLFOR($Resource.iconImages,'CloseHover.png')}";
            }
        }
        function rechangeImg(x,con){
            if(con=='add'){
                x.src="{!URLFOR($Resource.iconImages,'Add.png')}";
            }
            if(con=='remove'){
                x.src="{!URLFOR($Resource.iconImages,'Remove.png')}";
            }
            if(con=='Copy'){
                x.src="{!URLFOR($Resource.alpha,'HelpActive.png')}";
            }
            if(con==undefined){
                x.src="{!URLFOR($Resource.iconImages,'Close.png')}";
            }
        }
        function itemAdd(item){
            item.find('div').show();
            item.find('div:first').css('width','40%');
            item.removeClass('tooltip');
            $( ".formUlLabel" ).children().removeClass('ui-state-default');
            item.find('.deleteField').show();
            var dropLiId = item.attr('id');
            item.removeClass('ui-state-default');
            var editDelDivHtml = '<div class="editDelDiv">';            
            if(item.find('.deleteField').length==0 && item.find('.editImg').length==0){                            
                editDelDivHtml += '<img class="editImg" src="'+imgUrl +'" onclick="openEditDialog(\''+dropLiId +'\',true);" />';
                editDelDivHtml += '<img id="'+dropLiId+'" src="'+deleteImgUrl+'" class="deleteField" onclick="deleteField(this.id);"/>';
            }
            editDelDivHtml += '</div >';
            item.append(editDelDivHtml);
            return item;
        }
        function editText(e){
            e.readOnly='';
            $(e).removeClass('editText');
            $(e).addClass('editTextfocus');            
        }
        function saveEdit(e){
            saveEditText($(e).val());
            e.readOnly=true;            
            $(e).removeClass('editTextfocus');
            $(e).addClass('editText');                        
        }
        function checkUploadToChatter(e){   
            addLabel();        
            resetSavedButton();
        }

        function checkReq(e){           
            /*var reval=$("#defaultValue").attr('name').substring(0,$("#defaultValue").attr('name').indexOf("."));
            var lblId='';
            if($("#defaultValue").attr('name') == "CAPTCHAINPUT"){
                lblId="CAPTCHA";
            }else if(/FileUpload/i.test($("#defaultValue").attr('name'))){
                lblId=$("#defaultValue").attr('name')+'_Select';
            }
            else{
                lblId=$("#defaultValue").attr('name').replace(reval+".", "");
            }   */
            addLabel();        
            resetSavedButton();
            /*if(!$('#requiredChk').is(":checked")){
                $('#hideField').next().removeAttr('style');
                if(/FileUpload/i.test($("#defaultValue").attr('name'))){
                    $("#"+lblId).next().remove();
                }else{
                    $('#lbl'+lblId).next().remove();
                }
            }else{
                if($('#defaultValue').val() != ''){
                    $('#lbl'+lblId).addClass('grayLabel');
                    $('#hideField').prop('checked',true);
                    $('#hideField').next().css('pointer-events','none');
                }else{
                    $('#hideField').prop('checked',false);
                    $('#hideField').next().css('pointer-events','none');
                    $('#lbl'+lblId).removeClass('grayLabel');
                }
                if(/FileUpload/i.test($("#defaultValue").attr('name'))){
                    $('#'+lblId).after("<span class='requiredSpan'>*</span>");
                }else{
                    $('#lbl'+lblId).after("<span class='requiredSpan'>*</span>");
                }
            }*/
        }
        
             function checkHide(e) {
    //var reval = $("#defaultValue").attr('name').substring(0, $("#defaultValue").attr('name').indexOf("."));
    //var lblId = $("#defaultValue").attr('name').replace(reval + ".", "");
    var lblelem = $('#defaultValue').parents('div[class="ExpandDiv"]').parent().find('div:first-child > label').eq(0);
    if (!$('#hideField').is(":checked")) {
        $(lblelem).removeClass('grayLabel');
        window.frames['FormatToolbar'].document.getElementById('hideText').innerHTML = '';
    } else {
        $(lblelem).addClass('grayLabel');
        window.frames['FormatToolbar'].document.getElementById('hideText').innerHTML = '<i>Field will not be visible to user</i>';
    }    
    //lblId=lblelem.attr('id').replace('lbl','');
    //if ($('#hideField').next().hasClass('checkboxdisabled')) {
    //    $('#hideField').prop('checked', false);
    //} else {
        addLabel();
        resetSavedButton(); 
    //    if (/RecordTypeId/i.test(lblId) == false) {

      //  }
    //}
    }
function chkhideSection(e)
{
    addLabel();
    resetSavedButton();    
console.log('In CHECKBOX - ');
var chkboxElem=$(e).prev();
 
console.log(' CHECKBOX - ' +$(chkboxElem));
      if ($(chkboxElem).prop('checked')=='undefined' || !$(chkboxElem).prop('checked'))
      {
      
    var sectionUlId= $(chkboxElem).parents('.formUlLabel').attr('id');
    console.log(' checked - section id: '+sectionUlId);
    $(chkboxElem).parents('.formUlLabel').addClass('hideFullSection');
     }
     else
     {
      var sectionUlId= $(chkboxElem).parents('.formUlLabel').attr('id');
      $(chkboxElem).parents('.formUlLabel').removeClass('hideFullSection');
    console.log(' not checked - section id: '+sectionUlId);
    
     }
}
    function checkReadOnly(e) {
    addLabel();
    resetSavedButton();
    var lblelem = $(e).parents('div[class="ExpandDiv"]').parent().find('div:first-child > label').eq(0);
    var fieldelem = $(e).parents('div[class="ExpandDiv"]').parent().find('.fieldDiv').find('input[type=textbox],input[type=text],input[type=checkbox],textarea,select');
    var lblId = lblelem.attr('id').replace('lbl', '');

        //if (/RecordTypeId/i.test(lblId) == false) {
            if (!$('#readOnlyField').is(":checked")) {
                $(lblelem).removeClass('readOnlyLabel');
                $('#defaultValue').removeAttr('disabled');
                $(fieldelem).removeAttr('disabled');
                

            } else {
                $(lblelem).addClass('readOnlyLabel');
                /* $('#defaultValue').attr('disabled','true');*/
                $(fieldelem).attr('disabled', 'true');
            }
        //}

    }
        function removeError(e){
            if($(e).hasClass('errorMsg')){
                $(e).removeClass('errorMsg');
                $(e).val('');
            }
        }
        
        
        //Form Setting Toggle Div
        function toggleFormSettingSection(expandFormsettings){            
    if($('#frmSetting').is(':visible')){
        UnSaved();
    }else{
        $('select.drop-selectEditor').select2();
        fillSelect();                
        $("#FrmImg").addClass('togHoverActive');
                
        $(".hoverRelImg").next().hide();
        $(".hoverRelSelectedSecondImg").next().hide();
        $(".hoverRelSelectedThirdImg").next().hide();
                
        //Add Margin
        $('#levelFirst').css('margin-top',42); 
        $('#levelSecond').css('margin-top',42);
        $('#levelThird').css('margin-top',42);
                
        var countChild=0;
        var idx=0,newHtml='',newHtmlgrp='';
                               
        $("select.drop-selectEditor").select2("val", $('#priName').attr('class'));
                                 
        if(selectSecNameIdByIndex(0) != undefined && selectSecNameIdByIndex(0) != ''){                    
            //Divide into group
          
                    
            $("select.dropFirst").select2('val',selectSecNameIdByIndex(0));
            delFirst=false;
            $('#hoverRelSelectedSecondImg').show();
            $('#hoverRel').hide();
            $('#hoverRelImg').show();
            $('#levelFirst .scroll-parent').show();                    
            $('#lineFirst').find('img').attr('src',"{!URLFOR($Resource.iconImages,'LineSolid.png')}");
            $('#lineFirst').show(); 
            //Set Color indicator
            var fistListVal = $('#pg\\:frm\\:dropSelectFirst').val();
            var groupLabel= $("select.dropFirst option[value='"+fistListVal+"']").parent().attr('label'); 
            var containerHtml = '<img class="branchImage" src="{!URLFOR($Resource.alpha,'A.png')}" />';                   
            if(groupLabel == "Child Objects"){
                $('.select2-container.dropFirst a').find( ".branchImage" ).remove();;
                $('.select2-container.dropFirst a').append(containerHtml);
                countChild=1;
            }
                   
        }else{
            $('#lineFirst').find('img').attr('src',"{!URLFOR($Resource.iconImages,'LineDoted.png')}");
            $('#lineFirst').show();
            $('#hoverRel').show();
            $('#hoverRelImg').hide();
            $('#levelFirst .scroll-parent').hide(); 
            $('#levelSecond').hide();
            $('#levelThird').hide();                   
        }               
                
        if(selectSecNameIdByIndex(1) != undefined  && selectSecNameIdByIndex(1) != ''){                       
            $('select.dropSecond').empty();
            $('select.dropSecond').append($('select.dropFirst').clone().html());
                    
            //Remove second list selected item from third list
            var fistListVal = $('#pg\\:frm\\:dropSelectFirst').val();
            var fistListId = $("#pg\\:frm\\:dropSelectFirst").children().children(":selected").attr("name");
                   
            if(isLookupOption(fistListId) && fistListVal !=null && fistListVal.trim().length >0){
                //remove first selected item from second list               
                if(fistListVal !=null && fistListVal.trim().length >0){
                    $("select.dropSecond option[value='"+fistListVal+"']").remove();
                }
            }
                    
            delSecond=false;
            $("select.dropSecond").select2('val',selectSecNameIdByIndex(1));
            $('#lineSecond').find('img').attr('src',"{!URLFOR($Resource.iconImages,'LineSolid.png')}");
            $('#levelSecond .scroll-parent').show();
            $('#lineSecond').show();
            $('#hoverRelSecond').hide();
                    
            //remove first selected item from second list
            /*var fistListVal = $('#pg\\:frm\\:dropSelectFirst').val();
            if(fistListVal !=null && fistListVal.trim().length >0){
                 $(".dropSecond option[value='"+fistListVal+"']").remove();
            }*/                    
            //Set Color indicator
            var fistListVal = $('#pg\\:frm\\:dropSelectSecond').val();
            var groupLabel= $("select.dropSecond option[value='"+fistListVal+"']").parent().attr('label'); 
            var containerHtml ='';
            if(groupLabel == "Child Objects"){
                if(countChild == 0){
                    containerHtml = '<img class="branchImage" src="{!URLFOR($Resource.alpha,'A.png')}" />';
                }
                    
                if(countChild == 1){
                    containerHtml = '<img class="branchImage" src="{!URLFOR($Resource.alpha,'B.png')}" />';
                }
                $('.select2-container.dropSecond a').find( ".branchImage" ).remove();;
                $('.select2-container.dropSecond a').append(containerHtml);

                        
                countChild += 1;
            }
                    
        }else{
            $('#levelSecond .scroll-parent').hide();
            $('#hoverRelSelectedSecondImg').hide();
            if($('#levelFirst .scroll-parent').css('display') != 'none' && ($('select.dropFirst option').length - 1) >= 2){
                $('#levelSecond').show();
                $('#lineSecond').find('img').attr('src',"{!URLFOR($Resource.iconImages,'LineDoted.png')}");
                $('#lineSecond').show();
                $('#hoverRelSecond').show();
            }
            $('#levelThird').hide();
        }
                
        if(selectSecNameIdByIndex(2) != undefined  && selectSecNameIdByIndex(2) != ''){
            $('#levelThird').show();
            $('select.dropThird').empty();
            $('select.dropThird').append($('select.dropFirst').clone().html());
                    
            delThird=false;
            $("select.dropThird").select2('val',selectSecNameIdByIndex(2));
            $('#lineThird').find('img').attr('src',"{!URLFOR($Resource.iconImages,'LineSolid.png')}");
            $('#lineThird').show();
        
                    
            //Remove second list selected item from third list
            var fistListVal = $('#pg\\:frm\\:dropSelectFirst').val();
            var fistListId = $("#pg\\:frm\\:dropSelectFirst").children().children(":selected").attr("name");
                     
            if(isLookupOption(fistListId) && fistListVal !=null && fistListVal.trim().length >0){
                $("select.dropThird option[value='"+fistListVal+"']").remove();
            }
            //Remove second list selected item from third list
            var secondListVal = $("#pg\\:frm\\:dropSelectSecond").val();
            var secondListId  = $("#pg\\:frm\\:dropSelectSecond").children().children(":selected").attr("name");                    
            if(secondListId != undefined){
                if(isLookupOption(secondListId) && secondListVal !=null && secondListVal.trim().length >0){
                    $("select.dropThird option[value='"+secondListVal+"']").remove();
                }
            }
            //Set Color indicator
            var fistListVal = $('#pg\\:frm\\:dropSelectThird').val();
            var groupLabel= $("select.dropThird option[value='"+fistListVal+"']").parent().attr('label'); 
            var containerHtml ='';
            if(groupLabel == "Child Objects"){
                if(countChild == 0){
                    containerHtml = '<img class="branchImage" src="{!URLFOR($Resource.alpha,'A.png')}" />';
                }
                    
                if(countChild == 1){
                    containerHtml = '<img class="branchImage" src="{!URLFOR($Resource.alpha,'B.png')}" />';
                }
                if(countChild == 2){
                    containerHtml = '<img class="branchImage" src="{!URLFOR($Resource.alpha,'C.png')}" />';
                }
                $('.select2-container.dropThird a').find( ".branchImage" ).remove();;
                $('.select2-container.dropThird a').append(containerHtml);
            }
        }else{
            if($('#levelSecond .scroll-parent').css('display') != 'none' && ($('select.dropFirst option').length - 1) >= 3){
                $('#levelThird').show();
                $('#lineThird').find('img').attr('src',"{!URLFOR($Resource.iconImages,'LineDoted.png')}");
                $('#lineThird').show();
                $('#hoverRelThird').show();
            }
            $('#levelThird .scroll-parent').hide();
            $('#hoverRelSelectedThirdImg').hide();
        }
                
        $('.FrmName').val($('.editText').val());
                
        //pointer Change 
        //$('#FrmImg').removeClass('curChange');
                
        $('.editText').addClass('disableColor');
         $('.form-editor-title-box').addClass('va-disabled-items');
          
        $('#tabList .button').addClass('btnSaved');
        $('.ObjectName h4').addClass('disableColor');
        $('#copy_textarea').addClass('disableColor');
        $('.objectDiv').addClass('disableColor');
        $('#formTitle').addClass('disableColor');
        //$('.tooltips').addClass('disableColor');
        $('#clip_copy').addClass('disableColor');                
        if(expandFormsettings)
        {
            $("#frmSetting").slideDown(300);
           // getRemoteRuleFieldsJs();
             getRemoteRuleFieldsInfoJs();
            setHover();
        }
            

       // setTree();
        setRelatedObjectXML();
    }
    }
    function setRelatedObjectXML()
    {
     console.log('in setRelatedObjectXML ');  
     var secObjectXML='';
      $('.secondary-object-block').each(function(i, secSelectBlock) {
     if( $(secSelectBlock).css('display') != 'none' && $(secSelectBlock).find('div.scroll-parent').css('display') != 'none' && $(secSelectBlock).find('select.select-secondary-element').select2("val")!='undefined' 
     && $(secSelectBlock).find('select.select-secondary-element').select2("val")!='')
     {
            var selectedval=    $(secSelectBlock).find('select.select-secondary-element').select2("val"); 
             var selectedText=    $(secSelectBlock).find('select.select-secondary-element').select2('data').text;
               var selectedOptionName=$(secSelectBlock).find('select.select-secondary-element option:selected').attr("name");
               console.log(' SECONDARY selected Object value-  '+selectedval+' selectedOptionName- '+selectedOptionName);
               secObjectXML+='<object>';
               secObjectXML+='<text>'+selectedText+'</text>';
               secObjectXML+='<value>'+selectedval+'</value>';
               secObjectXML+='<relationtype>'+selectedOptionName+'</relationtype>';
               secObjectXML+='</object>';
               }   
   });
    secObjectXML='<objects>'+secObjectXML+'</objects>';
      formRelatedObjectXML=secObjectXML;
    
    }
    function getRelatedObjectXML()
    {
    return formRelatedObjectXML;
    }

        var isExpanding = false;
        var isSection=true;
        var i=0;
        /////addded to fix issue: #33 Fields scrolling to top - on nov 26 2014 by balinder
        function toggleGenFieldsSection() {
            var headerpanelbottomoffset =$('#headerPanel').position().top+$('#headerPanel').outerHeight(true)+184;
            if (!isExpanding) {
                if ($(document).scrollTop() > headerpanelbottomoffset) {
                    $('#availableFieldBox').css('position', 'relative');
                    $('#availableFieldBox').css('top', $(document).scrollTop() - headerpanelbottomoffset);
                    $('#generalFieldBox').css('position', 'relative');
                }
                $('#generalFieldBox').css('top', $('#availableFieldBox').css('top'));
                isExpanding = true;
                $("#sectionGGap").css("display", "block");
                var hr = 0;
                /*if($('#generalSortableForFields').height() == 0){
                    $("#gnFldImg").attr("src", "{!URLFOR($Resource.iconImages,'expand.png')}");
                }*/
                if ($("#gnFldImg").attr("src").indexOf("collapse") >= 0) {
                    console.log(' gnFldImg  collapse ');
                    $("#sectionGGap").css("display", "block");
                    $("#divForGenFields").slideUp(300);
                    $(".gnFldImg").removeClass('togHoverActive');
                    $('#divForFields').height('459px');
                    if (isSection) {
                        $('#ListFirst .availableHeaderDiv').click();
                        $("#gnFldImg").attr("src", "{!URLFOR($Resource.iconImages,'collapse.png')}");
                    }
                    $("#avFldImg").attr("src", "{!URLFOR($Resource.iconImages,'collapse.png')}");
                    if ($(document).scrollTop() > headerpanelbottomoffset) {
                        $('#availableFieldBox').css('position', 'fixed');
                        $('#availableFieldBox').css('top', 0);
                        $('#generalFieldBox').css('position', 'fixed');
                        $('#generalFieldBox').css('top', $('#availableFieldBox').height());
                    }
                    isExpanding = false;
                    $("#gnFldImg").attr("src", "{!URLFOR($Resource.iconImages,'expand.png')}");
                } else {
                    console.log(' gnFldImg not collapse ');
                    $(".gnFldImg").addClass('togHoverActive');
                    $("#avFldImg").attr("src", "{!URLFOR($Resource.iconImages,'collapse.png')}");
                    $("#sectionGGap").css("display", "none");
                    if ($('#ListFirstToggle').css('display') == 'block' || $('#ListSecondToggle').css('display') == 'block' || $('#ListThirdToggle').css('display') == 'block' || $('#ListFourthToggle').css('display') == 'block') {
                        console.log('hide all  available field list  ');
                        if ($('#ListFirstToggle').css('display') == 'block') {
                            //$('#ListFirst .availableHeaderDiv').click();
                             toggleAvailableFieldsMenu(1,$('#ListFirst .availableHeaderDiv'));
                        }
                        if ($('#ListSecondToggle').css('display') == 'block') {
                           // $('#ListSecond .availableHeaderDiv').click();
                             toggleAvailableFieldsMenu(2,$('#ListSecond .availableHeaderDiv'));
                        }
                        if ($('#ListThirdToggle').css('display') == 'block') {
                           // $('#ListThird .availableHeaderDiv').click();
                             toggleAvailableFieldsMenu(3,$('#ListThird .availableHeaderDiv'));
                        }
                        if ($('#ListFourthToggle').css('display') == 'block') {
                           // $('#ListFourth .availableHeaderDiv').click();
                           toggleAvailableFieldsMenu(4,$('#ListFourth .availableHeaderDiv'));
                        }

                          $("#gnFldImg").attr("src", "{!URLFOR($Resource.iconImages,'expand.png')}");                        
                    } else {
                        console.log(' gen field list  slideDown ');
                        if ($('#ListFirstToggle').css('display') == 'none') {
                            hr += $('#ListFirst .availableHeaderDiv').height();
                        }
                        if ($('#ListSecondToggle').css('display') == 'none' && $('#ListSecond .availableHeaderDiv').height() > 0) {
                            hr += $('#ListSecond .availableHeaderDiv').height();
                        }
                        if ($('#ListThirdToggle').css('display') == 'none' && $('#ListThird .availableHeaderDiv').height() > 0) {
                            if ($('#ListSecond').css('display') != 'none') {
                                hr += 20 + $('#ListThird .availableHeaderDiv').height();
                            } else {
                                hr += $('#ListThird .availableHeaderDiv').height();
                            }
                        }
                        if ($('#ListFourthToggle').css('display') == 'none' && $('#ListFourth .availableHeaderDiv').height() > 0) {
                            hr += 20 + $('#ListFourth .availableHeaderDiv').height();
                        }
                         console.log(' gen field list  slideDown  hr '+hr);
                        $('#divForFields').height((hr + 35) + 'px');
                        //$("#gnFldImg").attr("src", "{!URLFOR($Resource.iconImages,'collapse.png')}");
                        //$("#gnFldImg").attr("src", "{!URLFOR($Resource.iconImages,'expand.png')}");
                        $("#divForGenFields").slideDown(300, function(){
                            goToNextTourStop();
                        });
                        isSection = true;
                    }
                    if ($(document).scrollTop() > headerpanelbottomoffset) {
                
                        $('#availableFieldBox').css('position', 'fixed');
                        $('#availableFieldBox').css('top', 0);
                        $('#generalFieldBox').css('position', 'fixed');
                        $('#generalFieldBox').css('top', $('#availableFieldBox').height());
                    }
                    else
                    {
               
                    }
                    isExpanding = false;
                    $("#gnFldImg").attr("src", "{!URLFOR($Resource.iconImages,'collapse.png')}");
                }
            }
        }
        
        function checkInput(evt){
            var charCode = (evt.which) ? evt.which : evt.keyCode
            if (charCode > 31 && (charCode < 48 || charCode > 57))
                return false;    
            return true;
        }
        function checkRegInput(){
            var RE = /^-{0,1}\d*\.{0,1}\d+$/;
            $("#limitValue").next().remove();
            if($("#limitValue").val() == ''){
                $("#limitValue").css('border','1px solid red');
                $("#limitValue").focus();
                isError = false;
            }else{
                if(RE.test($("#limitValue").val())){
                    if($("#limitValue").val() > 99 || $("#limitValue").val() <=0 ){
                        isError = false;
                        $("#limitValue").css('border','1px solid red');
                        $("#limitValue").after('<span style="color:red;">Limit is incorrect<span>');
                        $("#limitValue").focus();
                    }else{
                        $("#limitValue").css('border','1px inset #cecece');
                        isError = true;                              
                    }
                }else{
                    isError = false;
                    $("#limitValue").css('border','1px solid red');
                    $("#limitValue").after('<span style="color:red;">Limit is incorrect<span>');
                    $("#limitValue").focus();
                }
            }
        }
        function errorSave(){
            $("#dialogSucess").dialog("close");
            $("#failure").css('display','none');
            resetSavedButton();
        }

        var isPrimary=false;
        $(document).ready(function(){
            //Select2 section
            //$("select.drop-selectEditor").select2();
           /* binding of on change event of Primary object Select*/
            setHover();
            
        });
function changePrimaryObjectCall(elemSource)
{
     $("#btnSaved").text('Publish Draft');
                $("#btnSaved").removeClass('btnGreenClick');
                $("#dialog-confirm").html("<div class='dialogHeader'><div class='dialogIcon dialogIconAlert'>&nbsp;</div></div><div class='dialogFont'><div class='primary'>Are you sure you want to change your form's primary object?<br /><br /></div><div class='secondary'>Changing your form's primary object will remove all fields, related objects and rules from your form. </div></div>");                 
                // Define the Dialog and its properties.
                $("#dialog-confirm").dialog({
                    resizable: false,
                    modal: true,
                    title: "Save",
                    height: "auto",
                    width: 413,
                    buttons:{
                    "No":{
                        click: function () {
                            $(this).dialog('close');                                           
                            callback(false);
                        },
                        text: 'No',
                        'class': 'vabutton2'
                    },
                    "Yes":{
                        click: function () {
                            $(this).dialog('close');
                            callback(true);
                        },
                        text: 'Yes',
                        'class': 'vabutton1'
                    }                   
                },
                                  
                    open: function( event, ui ) {
                        $('.ui-dialog :button').blur();
                    }
                });
                $('.ui-dialog :button').blur();
                $('#dialog-confirm').dialog('option', 'position', 'center');
                function callback(value) {
                    if (value) {
                        //Primary Object Changed
                         //saveEditFormName($('#formnameedit').val());
                         updateformTitle();
                          var formnm=$('#formTitle').val();
                         var tracksubmissions=IsTrackingEnabled();
                        var emailnotifications=IsEmailNotificationsEnabled();
                         var notifyemail=getNotificationEmail();
                         var  primaryObjectVal=$(elemSource).val();
                         console.log(' Updated primaryObjectVal-'+primaryObjectVal)
                        changePrimaryObject(primaryObjectVal,formnm,tracksubmissions,emailnotifications,notifyemail);
                    }else {
                        $(elemSource).select2("val",$('#priName').attr('class'));
                        return false;
                    }
                }
}
        function disable_scroll() {
            document.body.style.overflow="hidden";
        }
        function enable_scroll() {
            document.body.style.overflow="auto";
        }
        var previousOpenedFirst = false;
        function callSeletedEditor(){ 
            
             $(document).foundation();

           $( document ).foundation({ joyride : {         
              tip_animation : 'fade',
              tip_animation_fade_speed: 500,          
              modal:false,
              expose: false,
              next_button: true,
              prev_button: false,
              cookie_monster: true,
              cookie_name: 'fastforms-joyride',
              cookie_domain: false,
              cookie_expires: 365,
              post_ride_callback: function() {
                $(document).foundation('joyride', 'destroy');
              }                    
              }
           });

           $(document).foundation('joyride', 'start');
         console.log('callSeletedEditor previousopenfalse ');                     
            var objUsedInRule = false;
            $("select.dropFirst").select2();                             
            /*onchangeEvent Binding*/
            $('.select2-container.dropFirst').show();
            $('#levelFirst .scroll-parent').show();
            $('#levelFirst #hoverRelImg').show();
            $('#hoverRelImg').show();
            /*$('#levelThird').hide();
            $('#hoverRel').hide(); */              
        }
        function OnChangeRelatedObject(senderCount,thisElement)
        {
            if(senderCount==1)
            {
               onChangeFirstRelatedObject(thisElement);
            }
            else if(senderCount==2)
            {
               onChangeSecondRelatedObject(thisElement);
            }
            else if(senderCount==3)
            {
            onChangeThirdRelatedObject(thisElement);
            }
        }
        function onChangeThirdRelatedObject(thisElement)
        {
        var objUsedInRule=false;
        
                $("#btnSaved").text('Publish Draft');
                $("#btnSaved").removeClass('btnGreenClick');               
                if(isSecNameElemExistsByIndex(2)){
                    $(".hoverRelSelectedThirdImg").next().hide();
                    var lstOfFields='<ul style="text-align:left">';
                     var lifieldsCount=0;
                    $("#parentUlForm li").each(function(){
                        $(this).find('.formUlLabel').each(function(){
                            $(this).find('li').each(function(){
                                if($(this).hasClass('lbl') == false && $(this).hasClass('sortableForFieldsFourth')){
                                   // var fieldId = $(this).find('.fieldDiv input,textarea,select').eq(0).attr('id');
                                    /*modified to fix the child object element id issue on mar 10 2015 */
                                var liElement= $(this);
                                var fieldId =getFormattedElemId(liElement);
                                    if (itemUsedInRule(fieldId))
                                        objUsedInRule = true;                                      
                                if( lifieldsCount<5)
                               {
                                lstOfFields +='<li>'+$(this).find('div > label').eq(0).text()+'</li>';
                                }
                                 lifieldsCount++;
                                ///original code- removed by balinder nov 21 2014- issue:#38 Popup text issue in modal confirm when editdialog is open and useer tries to save the changes
                                ///lstOfFields +='<li>'+$(this).find('div label').text()+'</li>';
                                   
                                }
                            });
                        });    
                    });
                     if(lifieldsCount>5)
                    {
                     var extraFieldsCount= lifieldsCount-5;
                    lstOfFields +='<li> and '+extraFieldsCount+' more </li>';
                    }
                    lstOfFields = lstOfFields+'</ul>';
                    var thirdImgStr = "";
                    if($('.select2-container.dropThird a').find('.branchImage').attr('src') !=undefined)
                        thirdImgStr ="<img style='margin-left: 5px;' src=" + $('.select2-container.dropThird a').find('.branchImage').attr('src') +">"; 
                
                    if(!previousOpenedThird ){
                        if (objUsedInRule) {
                            showError("<div class='primary'>This object's fields are being used in one or more of your form's conditional rules.</div> <br/> <br /><div class='secondary'>Please adjust your rules in the Edit Rules tab and try again.</div>");
                            callback(false);
                        } else {                          
                            $("#dialog-confirm").html("<div class='dialogHeader'><div class='dialogIcon dialogIconAlert'>&nbsp;</div></div><div class='dialogFont'><div class='primary'>Are you sure you want to remove this object?<br /><br /> </div><div class='secondary'>Removing <b>"+ selectSecNameTextByIndex(2)+""+thirdImgStr +"</b> will remove the following fields from your form:<br />" + lstOfFields + "</div></div>");
                            // Define the Dialog and its properties.                
                            $("#dialog-confirm").dialog({
                                resizable: false,
                                modal: true,
                                title: "Save",
                                height: "auto",
                                width: 413,
                                buttons: {
                                    "No":{
                                        click: function () {
                                            $(this).dialog('close');
                                                               
                                            callback(false);
                                        },
                                        text: 'No',
                                        'class': 'vabutton2'
                                    },
                                    "Yes":{
                                        click: function () {
                                            $(this).dialog('close');
                                            callback(true);
                                            previousOpenedThird = true;
                                        },
                                        text: 'Yes',
                                        'class': 'vabutton1'
                                    }                               
                                },
                                      
                                open: function( event, ui ) {
                                    $('.ui-dialog :button').blur();
                                }
                            });
                        }
                    }
                    $('.ui-dialog :button').blur();
                    $('#dialog-confirm').dialog('option', 'position', 'center');
                    function callback(value) {
                        if (value) {                                   
                        }else {
                            $("select.dropThird").select2("val", selectSecNameIdByIndex(2));
                            return false;
                        }
                    }  
                }
                $('.select2-container.dropThird a').find('img').remove();
                //Set Color indicator
                var fistListVal = $('#pg\\:frm\\:dropSelectFirst').val();
                var groupLabel= $("select.dropFirst option[value='"+fistListVal+"']").parent().attr('label'); 
                var containerHtml =''
                var countChild =0;                 
                if(groupLabel == "Child Objects"){
                    countChild=1;
                }
                //Set Color indicator
                fistListVal = $('#pg\\:frm\\:dropSelectSecond').val();
                groupLabel= $("select.dropSecond option[value='"+fistListVal+"']").parent().attr('label'); 
                containerHtml ='';
                if(groupLabel == "Child Objects"){
                    countChild += 1;
                }
                //Set Color indicator
                fistListVal = $('#pg\\:frm\\:dropSelectThird').val();
                groupLabel= $("select.dropThird option[value='"+fistListVal+"']").parent().attr('label'); 
                containerHtml ='';
                if(groupLabel == "Child Objects"){
                    if(countChild == 0){
                        containerHtml = '<img class="branchImage" src="{!URLFOR($Resource.alpha,'A.png')}" />';
                    }
                        
                    if(countChild == 1){
                        containerHtml = '<img class="branchImage" src="{!URLFOR($Resource.alpha,'B.png')}" />';
                    }
                    if(countChild == 2){
                        containerHtml = '<img class="branchImage" src="{!URLFOR($Resource.alpha,'C.png')}" />';
                    }
                    $('.select2-container.dropThird a').append(containerHtml);
                }
             
        }/*on change event third related object ends */
        function onChangeSecondRelatedObject( thisElement)
        {
        var objUsedInRule=false;
         
                $("#btnSaved").text('Publish Draft');
                $("#btnSaved").removeClass('btnGreenClick');
                $('#levelThird').css('margin-top',42);
                if(isSecNameElemExistsByIndex(1) && delSecond == false){
                    $(".hoverRelSelectedSecondImg").next().hide();
                    var lstOfFields='<ul style="text-align:left">';
                    var lifieldsCount=0;
                    $("#parentUlForm li").each(function(){
                        $(this).find('.formUlLabel').each(function(){
                            $(this).find('li').each(function(){
                                if($(this).hasClass('lbl') == false && $(this).hasClass('sortableForFieldsThird')){
                                    //var fieldId = $(this).find('.fieldDiv input,textarea,select').eq(0).attr('id');
                                    /*modified to fix the child object element id issue on mar 10 2015 */
                                var liElement= $(this);
                                var fieldId =getFormattedElemId(liElement);
                                    if (itemUsedInRule(fieldId))
                                        objUsedInRule = true;                                    
                               if( lifieldsCount<5)
                               {
                                lstOfFields +='<li>'+$(this).find('div > label').eq(0).text()+'</li>';
                                }
                                 lifieldsCount++;
                                ///original code- removed by balinder nov 21 2014- issue:#38 Popup text issue in modal confirm when editdialog is open and useer tries to save the changes
                                ///lstOfFields +='<li>'+$(this).find('div label').text()+'</li>';
                                    
                                }
                            });
                        });    
                    });
                  
                    if(lifieldsCount>5)
                    {
                     var extraFieldsCount= lifieldsCount-5;
                    lstOfFields +='<li> and '+extraFieldsCount+' more </li>';
                    }
                    lstOfFields = lstOfFields+'</ul>';
                     
                    var secondImgStr ="";
                    if($('.select2-container.dropSecond a').find('.branchImage').attr('src') != undefined)
                        secondImgStr = "<img style='margin-left: 5px;' src=" + $('.select2-container.dropSecond a').find('.branchImage').attr('src') +">";                
                    if(!previousOpenedSecond){      
                        if (objUsedInRule) {
                            showError("<div class='primary'>This object's fields are being used in one or more of your form's conditional rules.</div> <br/> <br /><div class='secondary'>Please adjust your rules in the Edit Rules tab and try again.</div>");
                            callback(false);
                        } else {                                
                            $("#dialog-confirm").html("<div class='dialogHeader'><div class='dialogIcon dialogIconAlert'>&nbsp;</div></div><div class='dialogFont'><div class='primary'>Are you sure you want to remove this object?<br /><br /></div><div class='secondary'>Removing <b>"+ selectSecNameTextByIndex(1) + secondImgStr+"</b> will remove the following fields from your form:<br/>" + lstOfFields + "</div></div>");
                            // Define the Dialog and its properties.                
                            $("#dialog-confirm").dialog({
                                resizable: false,
                                modal: true,
                                title: "Save",
                                height: "auto",
                                width: 413,
                                buttons: {
                                    "No":{
                                        click: function () {
                                            $(this).dialog('close');
                                                               
                                            callback(false);
                                        },
                                        text: 'No',
                                        'class': 'vabutton2'
                                    },
                                    "Yes":{
                                        click: function () {
                                            $(this).dialog('close');
                                            callback(true);
                                            previousOpenedSecond = true;
                                        },
                                        text: 'Yes',
                                        'class': 'vabutton1'
                                    }                               
                                },                                      
                                open: function( event, ui ) {
                                    $('.ui-dialog :button').blur();
                                }
                            });
                        }
                    }else{
                        //callback(true);
                    }
                    $('.ui-dialog :button').blur();
                    $('#dialog-confirm').dialog('option', 'position', 'center');
                    function callback(value) {
                        if (value) {
                            if($(thisElement).val == ''){                                                                  
                                $('#levelThird').hide();                                              
                                                
                            }else{
                                if(($('select.dropFirst option').length - 1) >= 3){
                                    if($('#levelThird .scroll-parent').css('display') != "block"){ 
                                        $('#lineThird').find('img').attr('src',"{!URLFOR($Resource.iconImages,'LineDoted.png')}");
                                        $('#levelThird').show();
                                        $('#lineThird').show();
                                        $('#hoverRelThird').show();
                                        $('#levelThird .scroll-parent').hide();
                                        $('#hoverRelSelectedThirdImg').hide();                                                
                                    }
                                    //Set Color Icon for From...
                                    $('.select2-container.dropFirst a').find('img').remove();
                                    $('.select2-container.dropSecond a').find('img').remove();
                                    $('.select2-container.dropThird a').find('img').remove();
                                    //Set Color indicator 
                                    var countChild=0;                   
                                    var fistListVal = $('#pg\\:frm\\:dropSelectFirst').val();
                                    var groupLabel= $("select.dropFirst option[value='"+fistListVal+"']").parent().attr('label'); 
                                    var containerHtml ='';
                                    if(groupLabel == "Child Objects"){                        
                                        containerHtml = '<img class="branchImage" src="{!URLFOR($Resource.alpha,'A.png')}" />';
                                        countChild += 1;
                                    }                    
                                    $('.select2-container.dropFirst a').append(containerHtml);
                                                
                                    fistListVal = $('#pg\\:frm\\:dropSelectSecond').val();
                                    groupLabel= $("select.dropSecond option[value='"+fistListVal+"']").parent().attr('label'); 
                                    containerHtml ='';
                                    if(groupLabel == "Child Objects"){                        
                                        countChild += 1;
                                        if(countChild == 1){
                                            containerHtml = '<img class="branchImage" src="{!URLFOR($Resource.alpha,'A.png')}" />';
                                        }
                                        if(countChild == 2){
                                            containerHtml = '<img class="branchImage" src="{!URLFOR($Resource.alpha,'B.png')}" />';
                                        }                    
                                        $('.select2-container.dropSecond a').append(containerHtml);
                                    }                                                
                                                
                                    fistListVal = $('#pg\\:frm\\:dropSelectThird').val();
                                    groupLabel= $("select.dropThird option[value='"+fistListVal+"']").parent().attr('label'); 
                                    containerHtml ='';
                                    if(groupLabel == "Child Objects"){                        
                                        countChild += 1;                        
                                        if(countChild == 1){
                                            containerHtml = '<img class="branchImage" src="{!URLFOR($Resource.alpha,'A.png')}" />';
                                        }
                                        if(countChild == 2){
                                            containerHtml = '<img class="branchImage" src="{!URLFOR($Resource.alpha,'B.png')}" />';
                                        }
                                        if(countChild == 3){
                                            containerHtml = '<img class="branchImage" src="{!URLFOR($Resource.alpha,'C.png')}" />';
                                        }                     
                                        $('.select2-container.dropThird a').append(containerHtml);
                                    }
                                }  
                                             
                            }
                                    
                        }else {
                            $("select.dropSecond").select2("val", selectSecNameIdByIndex(1));
                            return false;
                        }
                    }               
                } 
                if($(thisElement).val == ''){                     
                    $('#levelThird').hide();
                }else{
                    if(($('select.dropFirst option').length - 1) >= 3){                         
                        $('#levelThird').show();
                        if($('#levelThird .scroll-parent').css('display') != "block"){
                            $('#lineThird').find('img').attr('src',"{!URLFOR($Resource.iconImages,'LineDoted.png')}");
                            $('#lineThird').show();
                            $('#hoverRelThird').show();
                            $('#levelThird .scroll-parent').hide();
                            $('#hoverRelSelectedThirdImg').hide();
                        }
                    }  
                }
                $('.select2-container.dropSecond a').find('img').remove();
                //Set Color indicator
                var fistListVal = $('#pg\\:frm\\:dropSelectFirst').val();
                var groupLabel= $("select.dropFirst option[value='"+fistListVal+"']").parent().attr('label'); 
                var containerHtml =''  
                countChild=0;               
                if(groupLabel == "Child Objects"){
                    countChild=1;
                }
                //Set Color indicator
                fistListVal = $('#pg\\:frm\\:dropSelectSecond').val();
                groupLabel= $("select.dropSecond option[value='"+fistListVal+"']").parent().attr('label'); 
                containerHtml ='';
                if(groupLabel == "Child Objects"){
                    if(countChild == 0){
                        containerHtml = '<img class="branchImage" src="{!URLFOR($Resource.alpha,'A.png')}" />';
                    }
                        
                    if(countChild == 1){
                        containerHtml = '<img class="branchImage" src="{!URLFOR($Resource.alpha,'B.png')}" />';
                    }
                    $('.select2-container.dropSecond a').append(containerHtml);
                    countChild += 1;
                }
                                
             
        }/*onChangeSecond RelatedObject ends*/
        
        function onChangeFirstRelatedObject(thisElement)
        {
         var objUsedInRule=false;
                $("#btnSaved").text('Publish Draft');
                $("#btnSaved").removeClass('btnGreenClick');
                $('#levelSecond').css('margin-top',42);
                $('#levelThird').css('margin-top',0);
                console.log('callSeletedEditor #priName .next().next().text() '+selectSecNameTextByIndex(0));    
                if(selectSecNameTextByIndex(0) != "" && delFirst == false){
                    $(".hoverRelImg").next().hide();
                    var lstOfFields='<ul style="text-align:left">';
                     var lifieldsCount=0;
                    $("#parentUlForm li").each(function(){
                        $(this).find('.formUlLabel').each(function(){
                            $(this).find('li').each(function(){
                                if($(this).hasClass('lbl') == false && $(this).hasClass('sortableForFieldsNew')){
                                   // var fieldId = $(this).find('.fieldDiv input,textarea,select').eq(0).attr('id');
                                    /*modified to fix the child object element id issue on mar 10 2015 */
                                var liElement= $(this);
                                var fieldId =getFormattedElemId(liElement);
                                    if (itemUsedInRule(fieldId))
                                        objUsedInRule = true;

                                if( lifieldsCount<5)
                               {
                                lstOfFields +='<li>'+$(this).find('div > label').eq(0).text()+'</li>';
                                }
                                 lifieldsCount++; /*updated by balinder nov 21 2014- issue:#38 Popup text issue in modal confirm when editdialog is open and useer tries to save the changes*/
                               
                                }
                            });
                        });    
                    });
                     if(lifieldsCount>5)
                    {
                     var extraFieldsCount= lifieldsCount-5;
                    lstOfFields +='<li> and '+extraFieldsCount+' more </li>';
                    }
                    lstOfFields = lstOfFields+'</ul>';
                    var imgStr="";
                    if(!previousOpenedFirst){                    
                        firstImage = $('.select2-container.dropFirst a').find('img');
                        if(firstImage != undefined && firstImage.attr('src') != undefined)
                            imgStr = "<img style='margin-left: 5px;' src=" + $('.select2-container.dropFirst a').find('.branchImage').attr('src') +">";
                        
                        if (objUsedInRule) {
                            showError("<div class='primary'>This object's fields are being used in one or more of your form's conditional rules.</div> <br/> <br /><div class='secondary'>Please adjust your rules in the Edit Rules tab and try again.</div>");
                            callback(false);
                        } else {
                            var dialogBody = "<div class='dialogHeader'><div class='dialogIcon dialogIconAlert'>&nbsp;</div></div><div class='dialogFont'><div class='primary'>Are you sure you want to remove this object?<br /><br /></div><div class='secondary'>Removing <b>"+ selectSecNameTextByIndex(0)+ imgStr + "</b> will remove the following fields from your form:<br/>" + lstOfFields + "</div></div>";
                            
                            $("#dialog-confirm").html(dialogBody);
                   
     
                            // Define the Dialog and its properties.
                            $("#dialog-confirm").dialog({
                                resizable: false,
                                modal: true,
                                title: "Save",
                                height: "auto",
                                width: 413,
                                buttons:  {
                                    "No":{
                                        click: function () {
                                            $(this).dialog('close');
                                                               
                                            callback(false);
                                        },
                                        text: 'No',
                                        'class': 'vabutton2'
                                    },
                                    "Yes":{
                                        click: function () {
                                            $(this).dialog('close');
                                            callback(true);
                                            previousOpenedFirst = true;
                                        },
                                        text: 'Yes',
                                        'class': 'vabutton1'
                                    }                               
                                },
                                          
                                open: function( event, ui ) {
                                    $('.ui-dialog :button').blur();
                                }
                            });
                        }
                    }else{
                             
                        if($('#levelThird .scroll-parent').css('display') == "block"){
                            $('#levelThird').css('margin-top',42);                                                   
                        }
                        //callback(true);
                    }
                    $('.ui-dialog :button').blur();
                    $('#dialog-confirm').dialog('option', 'position', 'center');
                    function callback(value) {
                        if (value) {
                            if($(thisElement).val == ''){                     
                                $('#levelSecond').hide();
                                $('#levelThird').hide();
                            }else{
                                if(($('select.dropFirst option').length - 1) >= 2){
                                    $('#ListFirst').addClass('addSelect');
                                    if($('#levelSecond .scroll-parent').css('display') != "block"){
                                        $('#lineSecond').find('img').attr('src',"{!URLFOR($Resource.iconImages,'LineDoted.png')}");
                                        $('#levelSecond').show();
                                        $('#hoverRelSecond').show();
                                        $('#lineSecond').show();                  
                                        $('#levelSecond .scroll-parent').hide();
                                        $('#hoverRelSelectedSecondImg').hide();
                                    }                                              
                                    if($('#levelThird .scroll-parent').css('display') == "block"){
                                        $('#levelThird').css('margin-top',42);                                                   
                                    }
                                              
                                    if($('#hoverRelThird').css('display') == 'block' && $('#hoverRelSecond').css('display') == 'block'){                                              
                                        $('#levelThird').hide();
                                    }
                                    $('.select2-container.dropFirst a').find('img').remove();
                                    $('.select2-container.dropSecond a').find('img').remove();
                                    $('.select2-container.dropThird a').find('img').remove();
                                    //Set Color indicator 
                                    var countChild=0;                   
                                    var fistListVal = $('#pg\\:frm\\:dropSelectFirst').val();
                                    var groupLabel= $("select.dropFirst option[value='"+fistListVal+"']").parent().attr('label'); 
                                    var containerHtml ='';
                                    if(groupLabel == "Child Objects"){                        
                                        containerHtml = '<img class="branchImage" src="{!URLFOR($Resource.alpha,'A.png')}" />';
                                        countChild += 1;
                                    }                    
                                    $('.select2-container.dropFirst a').append(containerHtml);
                                                
                                    fistListVal = $('#pg\\:frm\\:dropSelectSecond').val();
                                    groupLabel= $("select.dropSecond option[value='"+fistListVal+"']").parent().attr('label'); 
                                    containerHtml ='';
                                    if(groupLabel == "Child Objects"){                        
                                        countChild += 1;
                                        if(countChild == 1){
                                            containerHtml = '<img class="branchImage" src="{!URLFOR($Resource.alpha,'A.png')}" />';
                                        }
                                        if(countChild == 2){
                                            containerHtml = '<img class="branchImage" src="{!URLFOR($Resource.alpha,'B.png')}" />';
                                        }                    
                                        $('.select2-container.dropSecond a').append(containerHtml);
                                    }                                                
                                                
                                    fistListVal = $('#pg\\:frm\\:dropSelectThird').val();
                                    groupLabel= $("select.dropThird option[value='"+fistListVal+"']").parent().attr('label'); 
                                    containerHtml ='';
                                    if(groupLabel == "Child Objects"){                        
                                        countChild += 1;                        
                                        if(countChild == 1){
                                            containerHtml = '<img class="branchImage" src="{!URLFOR($Resource.alpha,'A.png')}" />';
                                        }
                                        if(countChild == 2){
                                            containerHtml = '<img class="branchImage" src="{!URLFOR($Resource.alpha,'B.png')}" />';
                                        }
                                        if(countChild == 3){
                                            containerHtml = '<img class="branchImage" src="{!URLFOR($Resource.alpha,'C.png')}" />';
                                        }                     
                                        $('.select2-container.dropThird a').append(containerHtml);
                                    }                                              
                                }
                            }
                                    
                        }else {
                            $("select.dropFirst").select2("val", selectSecNameIdByIndex(0));
                            if($('#levelThird .scroll-parent').css('display') == "block"){
                                $('#levelThird').css('margin-top',42);                                                   
                            }
                            $('.select2-container.dropFirst a').find('img').remove();
                            $('.select2-container.dropSecond a').find('img').remove();
                            $('.select2-container.dropThird a').find('img').remove();
                            //Set Color indicator 
                            var countChild=0;  
                                            
                            var fistListVal = $('#pg\\:frm\\:dropSelectFirst').val();
                             console.log('dropSelectFirst fistListVal '+fistListVal); 
                            var groupLabel= $("select.dropFirst option[value='"+fistListVal+"']").parent().attr('label'); 
                            var containerHtml ='';
                            if(groupLabel == "Child Objects"){                        
                                containerHtml = '<img class="branchImage" src="{!URLFOR($Resource.alpha,'A.png')}" />';
                                countChild += 1;
                            }                    
                            $('.select2-container.dropFirst a').append(containerHtml);
                                                
                            fistListVal = $('#pg\\:frm\\:dropSelectSecond').val();
                            groupLabel= $("select.dropSecond option[value='"+fistListVal+"']").parent().attr('label'); 
                            containerHtml ='';
                            if(groupLabel == "Child Objects"){                        
                                countChild += 1;
                                if(countChild == 1){
                                    containerHtml = '<img class="branchImage" src="{!URLFOR($Resource.alpha,'A.png')}" />';
                                }
                                if(countChild == 2){
                                    containerHtml = '<img class="branchImage" src="{!URLFOR($Resource.alpha,'B.png')}" />';
                                }                    
                                $('.select2-container.dropSecond a').append(containerHtml);
                            }                                                
                                                
                            fistListVal = $('#pg\\:frm\\:dropSelectThird').val();
                            groupLabel= $("select.dropThird option[value='"+fistListVal+"']").parent().attr('label'); 
                            containerHtml ='';
                            if(groupLabel == "Child Objects"){                        
                                countChild += 1;                        
                                if(countChild == 1){
                                    containerHtml = '<img class="branchImage" src="{!URLFOR($Resource.alpha,'A.png')}" />';
                                }
                                if(countChild == 2){
                                    containerHtml = '<img class="branchImage" src="{!URLFOR($Resource.alpha,'B.png')}" />';
                                }
                                if(countChild == 3){
                                    containerHtml = '<img class="branchImage" src="{!URLFOR($Resource.alpha,'C.png')}" />';
                                }                     
                                $('.select2-container.dropThird a').append(containerHtml);
                            }
                                        
                            return false;
                        }
                    }
                }
                if($(thisElement).val == ''){                     
                    $('#levelSecond').hide();
                    $('#levelThird').hide();
                }else{
                    if(($('select.dropFirst option').length - 1) >= 2){                                             
                        $('#ListFirst').addClass('addSelect');                          
                        if($('#levelSecond .scroll-parent').css('display') != "block"){
                            $('#lineSecond').find('img').attr('src',"{!URLFOR($Resource.iconImages,'LineDoted.png')}");
                            $('#levelSecond').show();
                            $('#hoverRelSecond').show();
                            $('#lineSecond').show(); 
                            $('#levelSecond .scroll-parent').hide();
                            $('#hoverRelSelectedSecondImg').hide();
                        }
                        if($('#levelThird .scroll-parent').css('display') != "block"){                              
                            /*$('#levelThird').hide();
                            $('#levelThird .scroll-parent').hide();
                            $('#hoverRelSelectedThirdImg').hide();*/
                            $('#levelThird').css('margin-top',42);
                        }
                        if($('#levelThird .scroll-parent').css('display') == "block"){
                            $('#levelThird').css('margin-top',42);                                                   
                        }
                    }
                }
                /* $('.select2-container.dropFirst a').find('img').remove();
                 //Set Color indicator
                 var fistListVal = $('#pg\\:frm\\:dropSelectFirst').val();
                 var groupLabel= $(".dropFirst option[value='"+fistListVal+"']").parent().attr('label'); 
                 var containerHtml =''                 
                 if(groupLabel == "Child Objects"){
                         containerHtml = '<img class="branchImage" src="{!URLFOR($Resource.alpha,'A.png')}" />';
                         $('.select2-container.dropFirst a').append(containerHtml);
                 }*/
                $('.select2-container.dropFirst a').find('img').remove();
                $('.select2-container.dropSecond a').find('img').remove();
                $('.select2-container.dropThird a').find('img').remove();
                //Set Color indicator 
                var countChild=0;                   
                var fistListVal = $('#pg\\:frm\\:dropSelectFirst').val();
                var groupLabel= $("select.dropFirst option[value='"+fistListVal+"']").parent().attr('label'); 
                var containerHtml ='';
                if(groupLabel == "Child Objects"){                        
                    containerHtml = '<img class="branchImage" src="{!URLFOR($Resource.alpha,'A.png')}" />';
                    countChild += 1;
                }                    
                $('.select2-container.dropFirst a').append(containerHtml);
                                                
                fistListVal = $('#pg\\:frm\\:dropSelectSecond').val();
                groupLabel= $("select.dropSecond option[value='"+fistListVal+"']").parent().attr('label'); 
                containerHtml ='';
                if(groupLabel == "Child Objects"){                        
                    countChild += 1;
                    if(countChild == 1){
                        containerHtml = '<img class="branchImage" src="{!URLFOR($Resource.alpha,'A.png')}" />';
                    }
                    if(countChild == 2){
                        containerHtml = '<img class="branchImage" src="{!URLFOR($Resource.alpha,'B.png')}" />';
                    }                    
                    $('.select2-container.dropSecond a').append(containerHtml);
                }                                                
                                                
                fistListVal = $('#pg\\:frm\\:dropSelectThird').val();
                groupLabel= $("select.dropThird option[value='"+fistListVal+"']").parent().attr('label'); 
                containerHtml ='';
                if(groupLabel == "Child Objects"){                        
                    countChild += 1;                        
                    if(countChild == 1){
                        containerHtml = '<img class="branchImage" src="{!URLFOR($Resource.alpha,'A.png')}" />';
                    }
                    if(countChild == 2){
                        containerHtml = '<img class="branchImage" src="{!URLFOR($Resource.alpha,'B.png')}" />';
                    }
                    if(countChild == 3){
                        containerHtml = '<img class="branchImage" src="{!URLFOR($Resource.alpha,'C.png')}" />';
                    }                     
                    $('.select2-container.dropThird a').append(containerHtml);
                } 
             
        }/*onchangeFirstrelatedobject ends */
        var previousOpenedSecond = false;
        function callSeletedSecondEditor(){
            var objUsedInRule = false;
            var containerHtmlA = '<img class="branchImage" src="{!URLFOR($Resource.alpha,'A.png')}" />';
            var containerHtmlB = '<img class="branchImage" src="{!URLFOR($Resource.alpha,'B.png')}" />';
            $("select.dropSecond").select2();
            
           /*onchangeSecondrelated binding  removed*/
            $('.select2-container.dropSecond').show();
            $('#levelSecond .scroll-parent').show();
            $('#levelSecond #hoverRelSelectedSecondImg').show();
            $('#hoverRelSelectedSecondImg').show();
            $('#hoverRelSecond').hide();
        }
        
        function setTitleSortable(){
            //Set Sortable List Title
            setTitleParent();
           // setHover();
        }
        var previousOpenedThird = false;
        function callSeletedThirdEditor(){
            var objUsedInRule = false;
            $("select.dropThird").select2();
            /*on change third related object binding removed*/
            $('.select2-container.dropThird').show();
            $('#levelThird .scroll-parent').show();
            $('#levelThird #hoverRelSelectedThirdImg').show();
            $('#hoverRelSelectedThirdImg').show();
            $('#hoverRelThird').hide();
            setTitleSortable();
        }
        var delFirst=false;
        var delSecond=false;
        var delThird=false;
        var delObjectSecond='';
        var delObjectThird='';
        
        var firstImage;
        function bindFirstEditor(){
            var objUsedInRule = false;
            var imgStr="";
            firstImage = $('.select2-container.dropFirst a').find('img');
           var secondImage = $('.select2-container.dropSecond a').find('img');
           var thirdImage = $('.select2-container.dropThird a').find('img');
            if(firstImage != undefined && firstImage.attr('src') !=undefined)
                imgStr = "<img style='margin-left: 5px;' src=" + $('.select2-container.dropFirst a').find('.branchImage').attr('src') +">";
            
            console.log('bindFirstEditor  #priName .next().next().text()  '+selectSecNameTextByIndex(0));    
            
            if(selectSecNameTextByIndex(0) != "" && delFirst == false){
                var lstOfFields='<ul style="text-align:left">';
                 var lifieldsCount=0;
                $("#parentUlForm li").each(function(){
                    $(this).find('.formUlLabel').each(function(){
                        $(this).find('li').each(function(){
                            if($(this).hasClass('lbl') == false && $(this).hasClass('sortableForFieldsNew')){
                               // var fieldId = $(this).find('.fieldDiv input,textarea,select').eq(0).attr('id');
                                /*modified to fix the child object element id issue on mar 10 2015 */
                                var liElement= $(this);
                                var fieldId =getFormattedElemId(liElement);
                                if (itemUsedInRule(fieldId))
                                    objUsedInRule = true; 
                               if( lifieldsCount<5)
                               {
                                lstOfFields +='<li>'+$(this).find('div > label').eq(0).text()+'</li>';
                                }
                                 lifieldsCount++;
                                ///original code- removed by balinder nov 21 2014- issue:#38 Popup text issue in modal confirm when editdialog is open and useer tries to save the changes
                                ///lstOfFields +='<li>'+$(this).find('div label').text()+'</li>';
                            }
                        });
                    });    
                });
                 if(lifieldsCount>5)
                    {
                     var extraFieldsCount= lifieldsCount-5;
                    lstOfFields +='<li> and '+extraFieldsCount+' more </li>';
                    }
                lstOfFields = lstOfFields+'</ul>';
                if (objUsedInRule) {
                    showError("<div class='primary'>This object's fields are being used in one or more of your form's conditional rules.</div> <br/> <br /><div class='secondary'>Please adjust your rules in the Edit Rules tab and try again.</div>");
                    callback(false);
                } else {                 
                    var dialogBody = "<div class='dialogHeader'><div class='dialogIcon dialogIconAlert'>&nbsp;</div></div><div class='dialogFont'><div class='primary'>Are you sure you want to remove this object?<br /><br /></div><div class='secondary'>Removing <b>"+ selectSecNameTextByIndex(0) + imgStr + "</b> will remove the following fields from your form:<br/>" + lstOfFields + "</div></div>";
                    $("#dialog-confirm").html(dialogBody);
                    
                    // Define the Dialog and its properties.
                    $("#dialog-confirm").dialog({
                        resizable: false,
                        modal: true,
                        title: "Save",
                        height: "auto",
                        width: 413,
                        buttons:{
                                    "No":{
                                        click: function () {
                                            $(this).dialog('close');
                                                               
                                            callback(false);
                                        },
                                        text: 'No',
                                        'class': 'vabutton2'
                                    },
                                    "Yes":{
                                        click: function () {
                                            $(this).dialog('close');
                                            callback(true);
                                            
                                        },
                                        text: 'Yes',
                                        'class': 'vabutton1'
                                    }
                                    
                                },
                        open: function( event, ui ) {
                            $('.ui-dialog :button').blur();
                        }
                    });
                }
                $('.ui-dialog :button').blur();
                $('#dialog-confirm').dialog('option', 'position', 'center');
                function callback(value) {
                    if (value) {
                        delFirst=true;
                        previousOpenedFirst=true;
                        //Add New Code
                        $('#levelSecond').css('margin-top',0);
                        if($('#hoverRelSecond').css('display') == 'block'){
                         console.log( ' in case there is only one related objects');
                            $('#levelFirst').show();
                            $('#levelFirst .scroll-parent').hide();
                             $("select.dropFirst").select2("val","");/*added by balinder to clear deleted selected value*/
                            $('#hoverRel').show();
                            $('#lineFirst').find('img').attr('src',"{!URLFOR($Resource.iconImages,'LineDoted.png')}");
                            $('#hoverRelImg').hide();
                            $('#levelSecond').hide();
                        }                            
                        if($('#hoverRelSecond').css('display') == 'none'){                                
                            if($('#hoverRelThird').css('display') == 'block'){
                             console.log( ' in case there are two related objects');
                                $('#levelFirst .scroll-parent').show();
                                //$("select.dropFirst").select2("val",$("select.dropSecond").select2("val"));
                                $("select.dropFirst").select2("val",$("select.dropSecond").val());
                                /*  if(firstImage != undefined && firstImage.attr('src') !=undefined)
                                  {
                                  $('.select2-container.dropFirst a').append(firstImage);
                                  }*/
                                delObjectSecond='sortableForFieldsThird';
                                
                                    
                                $('#lineFirst').find('img').attr('src',"{!URLFOR($Resource.iconImages,'LineSolid.png')}");
                                $('#hoverRel').hide();
                                $('#hoverRelImg').show();
                                $('#levelThird').hide();
                                $("select.dropSecond").select2("val","");/*added by balinder to clear deleted selected value*/
                                $('#hoverRelSecond').show();
                                $('#lineSecond').find('img').attr('src',"{!URLFOR($Resource.iconImages,'LineDoted.png')}");
                                $('#levelSecond').css('margin-top',42);
                                $('#levelSecond .scroll-parent').hide();
                                $('#hoverRelSelectedSecondImg').hide();  
                                   setColorTag();  
                            }
                            if($('#hoverRelThird').css('display') == 'none'){
                            console.log( ' in case there are three related objects');
                                if($('#levelThird .scroll-parent').css('display') == 'block'){
                                   
                                  // $("select.dropFirst").select2("val",$("select.dropSecond").select2("val"));
                                   $("select.dropFirst").select2("val",$("select.dropSecond").val());
                                    delObjectSecond='sortableForFieldsThird';
                                                                 
                                   //$("select.dropSecond").select2("val",$("select.dropThird").select2("val"));                                   
                                    $("select.dropSecond").select2("val",$("select.dropThird").val());                                   
                                   
                                    delObjectThird='sortableForFieldsFourth';
                                                                     
                                    $('#levelSecond').css('margin-top',42);
                                    $('#lineThird').find('img').attr('src',"{!URLFOR($Resource.iconImages,'LineDoted.png')}"); 
                                    $('#levelThird .scroll-parent').hide();
                                    $("select.dropThird").select2("val","");/*added by balinder to clear deleted selected value*/
                                    $('#hoverRelSelectedThirdImg').hide();  
                                    $('#hoverRelThird').show();
                                       setColorTag();   
                                }else{
                                    $('#levelFirst').show();
                                    $('#levelFirst .scroll-parent').hide();
                                    $('#hoverRel').show();
                                    $('#lineFirst').find('img').attr('src',"{!URLFOR($Resource.iconImages,'LineDoted.png')}");
                                    $('#hoverRelImg').hide();
                                    $('#levelSecond').hide();
                                    
                                }                                
                            }
                        } 
                        Saved();                                   
                    }
                    else {                            
                        $("select.dropFirst").select2("val", selectSecNameIdByIndex(0));
                        
                        
                        return false;
                    }
                }     
            }else{
                delFirst=true;
                previousOpenedFirst=true;
                //Add New Code
                $('#levelSecond').css('margin-top',0);
                if($('#hoverRelSecond').css('display') == 'block'){
                    $('#levelFirst').show();
                    $('#levelFirst .scroll-parent').hide();
                    $('#hoverRel').show();
                    $('#lineFirst').find('img').attr('src',"{!URLFOR($Resource.iconImages,'LineDoted.png')}");
                    $('#hoverRelImg').hide();
                    $('#levelSecond').hide();
                }                            
                if($('#hoverRelSecond').css('display') == 'none'){
                    if($('#hoverRelThird').css('display') == 'block'){
                        $('#levelFirst .scroll-parent').show();
                        $("select.dropFirst").select2("val",$("select.dropSecond").select2("val"));
                        $('#lineFirst').find('img').attr('src',"{!URLFOR($Resource.iconImages,'LineSolid.png')}");
                        $('#hoverRel').hide();
                        $('#hoverRelImg').show();
                        $('#levelThird').hide();
                        $('#hoverRelSecond').show();
                        $('#lineSecond').find('img').attr('src',"{!URLFOR($Resource.iconImages,'LineDoted.png')}");
                        $('#levelSecond').css('margin-top',42);
                        $('#levelSecond .scroll-parent').hide();
                        $('#hoverRelSelectedSecondImg').hide();     
                    }
                    if($('#hoverRelThird').css('display') == 'none'){
                        $("select.dropFirst").select2("val",$("select.dropSecond").select2("val"));
                        $("select.dropSecond").select2("val",$("select.dropThird").select2("val"));
                        $('#levelSecond').css('margin-top',42);
                        $('#lineThird').find('img').attr('src',"{!URLFOR($Resource.iconImages,'LineDoted.png')}"); 
                        $('#levelThird .scroll-parent').hide();
                        $('#hoverRelSelectedThirdImg').hide();  
                        $('#hoverRelThird').show();                                
                    }
                }
            }  
           
                 setColorTag();        
        }
        function setColorTag(){
        
              var containerHtmlA = '<img class="branchImage" src="{!URLFOR($Resource.alpha,'A.png')}" />';
                        var containerHtmlB = '<img class="branchImage" src="{!URLFOR($Resource.alpha,'B.png')}" />';
                        var containerHtmlC = '<img class="branchImage" src="{!URLFOR($Resource.alpha,'C.png')}" />';
                      var childCount=0;
                       var firstIsChild=false;
                  var secondIsChild=false;
                  var thirdIsChild=false;
              $('#frmSetting').find('.secondary-object-block').each(function(parentindx, selectParentObj) {    
                 
                    $(selectParentObj).find('select.select-secondary-element  optgroup').each(function(indx, optgroup) {    
                        
                       $(optgroup).find('option').each(function(indx, optionelem) { 
                        
                             if($(optionelem).is(':selected'))
                              {
                                  console.log(' Selected option removed'+$(optionelem).attr('name'));
                                  if($(optionelem).attr('name')=='detail')
                                  {
                                       if(parentindx==0)
                                       {
                                         firstIsChild=true;
                                         childCount++;
                                       }
                                       else if(parentindx==1)
                                       {
                                        secondIsChild=true;
                                         childCount++;
                                       }
                                       else if(parentindx==2)
                                       {
                                        thirdIsChild=true;
                                         childCount++;
                                       }
                                       else{}                     
                                  }
                               
                              }
                            
                        });
                     });
                     if($(selectParentObj).find('.select2-container.select-secondary-element a').find('img') !='undefined')
                     {
                     $(selectParentObj).find('.select2-container.select-secondary-element a').find('img').remove();
                     }
                    
                    });
                     if(firstIsChild)
                     {
                     $('#frmSetting').find('.secondary-object-block .select2-container.dropFirst a').append(containerHtmlA);
                     }
                      if(secondIsChild)
                     {
                         if(firstIsChild)
                         {
                        $('#frmSetting').find('.secondary-object-block .select2-container.dropSecond a').append(containerHtmlB);
                         }
                         else
                         {
                          $('#frmSetting').find('.secondary-object-block .select2-container.dropSecond a').append(containerHtmlA);
                         }
                     }
                      if(thirdIsChild)
                     {
                         if(firstIsChild && secondIsChild)
                         {
                         $('#frmSetting').find('.secondary-object-block .select2-container.dropThird a').append(containerHtmlC);
                         }
                         else if((!firstIsChild && secondIsChild) || (firstIsChild && !secondIsChild))
                         {
                          $('#frmSetting').find('.secondary-object-block .select2-container.dropThird a').append(containerHtmlB);
                         }
                         else 
                         {
                         $('#frmSetting').find('.secondary-object-block .select2-container.dropThird a').append(containerHtmlA);
                         }
                     }
        
        
        }
        var delObjectName='';
        function bindSecondEditor(){
            var objUsedInRule = false;
            var containerHtmlA = '<img class="branchImage" src="{!URLFOR($Resource.alpha,'A.png')}" />';
            var containerHtmlB = '<img class="branchImage" src="{!URLFOR($Resource.alpha,'B.png')}" />';
            console.log('bindSecondEditor  #priName .next().next().next().next().text()   '+selectSecNameTextByIndex(1));    
            
            if(selectSecNameTextByIndex(1) != "" && delSecond == false){
                var lstOfFields='<ul style="text-align:left">';
                 var lifieldsCount=0;
                $("#parentUlForm li").each(function(){
                    $(this).find('.formUlLabel').each(function(){
                        $(this).find('li').each(function(){
                            if($(this).hasClass('lbl') == false && $(this).hasClass('sortableForFieldsThird')){
                               // var fieldId = $(this).find('.fieldDiv input,textarea,select').eq(0).attr('id');
                                /*modified to fix the child object element id issue on mar 10 2015 */
                                var liElement= $(this);
                                var fieldId =getFormattedElemId(liElement);
                                if (itemUsedInRule(fieldId))
                                    objUsedInRule = true;                                
                                if( lifieldsCount<5)
                               {
                                lstOfFields +='<li>'+$(this).find('div > label').eq(0).text()+'</li>';
                                }
                                 lifieldsCount++;
                                ///original code- removed by balinder nov 21 2014- issue:#38 Popup text issue in modal confirm when editdialog is open and useer tries to save the changes
                                ///lstOfFields +='<li>'+$(this).find('div label').text()+'</li>';
                            }
                        });
                    });    
                });
                 if(lifieldsCount>5)
                    {
                     var extraFieldsCount= lifieldsCount-5;
                    lstOfFields +='<li> and '+extraFieldsCount+' more </li>';
                    }
                lstOfFields = lstOfFields+'</ul>';
                var secondImgStr ="";
                if($('.select2-container.dropSecond a').find('.branchImage').attr('src') != undefined)
                    secondImgStr = "<img style='margin-left: 5px;' src=" + $('.select2-container.dropSecond a').find('.branchImage').attr('src') +">";                
                if (objUsedInRule) {
                    showError("<div class='primary'>This object's fields are being used in one or more of your form's conditional rules.</div> <br/> <br /><div class='secondary'>Please adjust your rules in the Edit Rules tab and try again.</div>");
                    callback(false);
                } else {                      
                    $("#dialog-confirm").html("<div class='dialogHeader'><div class='dialogIcon dialogIconAlert'>&nbsp;</div></div><div class='dialogFont'><div class='primary'>Are you sure you want to remove this object?<br /><br /></div><div class='secondary'>Removing <b>"+ selectSecNameTextByIndex(1) + secondImgStr+"</b> will remove the following fields from your form:<br/>" + lstOfFields + "</div></div>"); 
                    //Define the Dialog and its properties.
                    $("#dialog-confirm").dialog({
                        resizable: false,
                        modal: true,
                        title: "Save",
                        height: "auto",
                        width: 413,
                        buttons:{
                                    "No":{
                                        click: function () {
                                            $(this).dialog('close');
                                                               
                                            callback(false);
                                        },
                                        text: 'No',
                                        'class': 'vabutton2'
                                    },
                                    "Yes":{
                                        click: function () {
                                            $(this).dialog('close');
                                            callback(true);
                                            
                                        },
                                        text: 'Yes',
                                        'class': 'vabutton1'
                                    }                               
                                },
                                          
                        open: function( event, ui ) {
                            $('.ui-dialog :button').blur();
                        }
                    });
                }
                $('.ui-dialog :button').blur();
                $('#dialog-confirm').dialog('option', 'position', 'center');
                function callback(value) {
                    if (value) {
                        delSecond=true;
                        previousOpenedSecond = true;
                        //Add New Code                                        
                        $('#levelThird').css('margin-top',0);
                        if($('#hoverRelThird').css('display') == 'block'){
                            $('#levelThird').hide();
                            $('#lineSecond').find('img').attr('src',"{!URLFOR($Resource.iconImages,'LineDoted.png')}");
                            $('#levelSecond').css('margin-top',42);
                            $('#levelSecond .scroll-parent').hide();
                            $("select.dropSecond").select2("val","");/*added by balinder to clear deleted selected value*/
                            $('#hoverRelSelectedSecondImg').hide();
                            $('#hoverRelSecond').show();
                        } 
                        if($('#hoverRelThird').css('display') == 'none'){                                            
                            $('#levelThird').css('margin-top',42);
                            $('#levelThird .scroll-parent').hide();
                            $('#hoverRelSelectedThirdImg').hide();
                            $("select.dropSecond").select2("val",$("select.dropThird").select2("val"));                                            
                            //Delete Object List Class
                            delObjectName='sortableForFieldsFourth';                                          
                                            
                            $('.select2-container.dropSecond a').find('.branchImage').remove();
                            var fistListVal = $('#pg\\:frm\\:dropSelectThird').val();
                            var groupLabel= $("select.dropThird option[value='"+fistListVal+"']").parent().attr('label'); 
                            if($('.select2-container.dropFirst a').find('img').attr('src') != undefined && $('.select2-container.dropThird a').find('img').attr('src') != undefined){
                                if(groupLabel == "Child Objects")
                                    $('.select2-container.dropSecond a').append(containerHtmlB);
                            }
                            if($('.select2-container.dropFirst a').find('img').attr('src') == undefined && $('.select2-container.dropThird a').find('img').attr('src') != undefined){
                                if(groupLabel == "Child Objects")
                                    $('.select2-container.dropSecond a').append(containerHtmlA);
                            } 
                                                                                     
                            $('#lineThird').find('img').attr('src',"{!URLFOR($Resource.iconImages,'LineDoted.png')}"); 
                            $('#levelThird .scroll-parent').hide();
                             $("select.dropThird").select2("val","");/*added by balinder to clear deleted selected value*/
                            $('#hoverRelSelectedThirdImg').hide();  
                            $('#hoverRelThird').show();
                        }
                            Saved();                                                           
                    }else {
                        $("select.dropSecond").select2("val", selectSecNameIdByIndex(1));
                        return false;
                    }
                }               
            }else{
                delSecond=true;
                previousOpenedSecond = true;
                //Add New Code
                $('#levelThird').css('margin-top',0)
                if($('#hoverRelThird').css('display') == 'block'){
                    $('#levelThird').hide();
                    $('#lineSecond').find('img').attr('src',"{!URLFOR($Resource.iconImages,'LineDoted.png')}");
                    $('#levelSecond').css('margin-top',42);
                    $('#levelSecond .scroll-parent').hide();
                     $("select.dropSecond").select2("val","");/*added by balinder to clear deleted selected value*/
                    $('#hoverRelSelectedSecondImg').hide();
                    $('#hoverRelSecond').show();
                }
                if($('#hoverRelThird').css('display') == 'none'){                                            
                    $('#levelThird').css('margin-top',42);
                    $('#levelThird .scroll-parent').hide();
                    $('#hoverRelSelectedThirdImg').hide();
                    $("select.dropSecond").select2("val",$("select.dropThird").select2("val"));
                    //Delete Object List Class
                    //delObjectName='sortableForFieldsFourth'; 
                    var containerHtml = '<img class="branchImage" src="{!URLFOR($Resource.alpha,'B.png')}" />';
                    $('.select2-container.dropSecond a').find('.branchImage').remove();
                    var fistListVal = $('#pg\\:frm\\:dropSelectSecond').val();
                    var groupLabel= $("select.dropSecond option[value='"+fistListVal+"']").parent().attr('label'); 
                    if($('.select2-container.dropFirst a').find('img').attr('src') != undefined && $('.select2-container.dropThird a').find('img').attr('src') != undefined){
                        if(groupLabel == "Child Objects")
                            $('.select2-container.dropSecond a').append(containerHtml);
                    }
                    if($('.select2-container.dropFirst a').find('img').attr('src') == undefined && $('.select2-container.dropThird a').find('img').attr('src') != undefined){
                        if(groupLabel == "Child Objects")
                            $('.select2-container.dropSecond a').append(containerHtmlA);
                    }
                    $('#lineThird').find('img').attr('src',"{!URLFOR($Resource.iconImages,'LineDoted.png')}"); 
                    $('#levelThird .scroll-parent').hide();
                    $('#hoverRelSelectedThirdImg').hide();  
                    $('#hoverRelThird').show();
                }
                    
            }
        }
        function bindThirdEditor(){
            var objUsedInRule = false;
            if(selectSecNameTextByIndex(2) != "" && delThird == false){
                var lstOfFields='<ul style="text-align:left">';
                 var lifieldsCount=0;
                $("#parentUlForm li").each(function(){
                    $(this).find('.formUlLabel').each(function(){
                        $(this).find('li').each(function(){
                            if($(this).hasClass('lbl') == false && $(this).hasClass('sortableForFieldsFourth')){
                                //var fieldId = $(this).find('.fieldDiv input,textarea,select').eq(0).attr('id');
                                /*modified to fix the child object element id issue on mar 10 2015 */
                                var liElement= $(this);
                                var fieldId =getFormattedElemId(liElement);
                                if (itemUsedInRule(fieldId))
                                    objUsedInRule = true;                                 
                                 if( lifieldsCount<5)
                               {
                                lstOfFields +='<li>'+$(this).find('div > label').eq(0).text()+'</li>';
                                }
                                 lifieldsCount++; /*updated by balinder nov 21 2014- issue:#38 Popup text issue in modal confirm when editdialog is open and useer tries to save the changes*/
                               
                            }
                        });
                    });    
                });
                 if(lifieldsCount>5)
                    {
                     var extraFieldsCount= lifieldsCount-5;
                    lstOfFields +='<li> and '+extraFieldsCount+' more </li>';
                    }
                lstOfFields = lstOfFields+'</ul>';
                var thirdImgStr = "";
                if($('.select2-container.dropThird a').find('.branchImage').attr('src') !=undefined)
                    thirdImgStr ="<img style='margin-left: 5px;' src=" + $('.select2-container.dropThird a').find('.branchImage').attr('src') +">"; 
                if (objUsedInRule) {
                    showError("<div class='primary'>This object's fields are being used in one or more of your form's conditional rules.</div> <br/> <br /><div class='secondary'>Please adjust your rules in the Edit Rules tab and try again.</div>");
                    callback(false);
                } else {                   
                    $("#dialog-confirm").html("<div class='dialogHeader'><div class='dialogIcon dialogIconAlert'>&nbsp;</div></div><div class='dialogFont'><div class='primary'>Are you sure you want to remove this object?<br /><br /></div><div class='secondary'>Removing <b>"+ selectSecNameTextByIndex(2)+""+thirdImgStr +"</b> will remove the following fields from your form:<br />" + lstOfFields + "</div></div>"); 
                    // Define the Dialog and its properties.
                    $("#dialog-confirm").dialog({
                        resizable: false,
                        modal: true,
                        title: "Save",
                        height: "auto",
                        width: 413,
                        buttons: {
                                    "No":{
                                        click: function () {
                                            $(this).dialog('close');
                                                               
                                            callback(false);
                                        },
                                        text: 'No',
                                        'class': 'vabutton2'
                                    },
                                    "Yes":{
                                        click: function () {
                                            $(this).dialog('close');
                                            callback(true);
                                            
                                        },
                                        text: 'Yes',
                                        'class': 'vabutton1'
                                    }                               
                                },
                                  
                        open: function( event, ui ) {
                            $('.ui-dialog :button').blur();
                        }
                    });
                }
                $('.ui-dialog :button').blur();
                $('#dialog-confirm').dialog('option', 'position', 'center');
                function callback(value) {
                    if (value) {
                        delThird=true;
                        previousOpenedThird  = true;
                        $('#levelThird').show();
                        $('#levelThird .scroll-parent').hide();
                        $("select.dropThird").select2("val","");/*added by balinder to clear deleted selected value*/
                        $('#hoverRelThird').show();
                        $('#lineThird').find('img').attr('src',"{!URLFOR($Resource.iconImages,'LineDoted.png')}");
                        $('#levelThird #hoverRelSelectedThirdImg').hide();  
                          Saved();                                       
                    }else {
                        $("select.dropThird").select2("val", selectSecNameIdByIndex(2));
                        return false;
                    }
                }
            }else{
                delThird=true;
                previousOpenedThird  = true;
                $('#levelThird').show();
                $('#levelThird .scroll-parent').hide();
                $('#hoverRelThird').show();
                $('#lineThird').find('img').attr('src',"{!URLFOR($Resource.iconImages,'LineDoted.png')}");
                $('#levelThird #hoverRelSelectedThirdImg').hide();
            } 
            
        }      
        function callObject(){
            RelatedObjectEditor();            
        }
        function callObjectSecond(){
            $('#lineSecond').find('img').attr('src',"{!URLFOR($Resource.iconImages,'LineSolid.png')}");
            RelatedObjectEditorSecond();
        }
        function callObjectShow(){
            $('.select2-container.dropFirst a').find('img').remove();
            $('#lineFirst').find('img').attr('src',"{!URLFOR($Resource.iconImages,'LineSolid.png')}");
            $('#hoverRel').hide();
            $('#levelFirst .scroll-parent').show(); 
            $('select.dropFirst').select2().select2('val','');
            $('.select2-container.select-secondary-element').show();
            $('#hoverRelImg').show();
        }
        function callObjectShowSecond(){
            $('.select2-container.dropSecond a').find('img').remove();
            $('#lineSecond').find('img').attr('src',"{!URLFOR($Resource.iconImages,'LineSolid.png')}");
            $('#hoverRelSecond').hide();
            $('#levelSecond .scroll-parent').show();
            $('select.dropSecond').select2().select2('val','');
            $('.select2-container.select-secondary-element').show();
            $('#hoverRelSelectedSecondImg').show();
            
            /*$("#pg\\:frm\\:dropSelectSecond").find('option').remove();
            $("#pg\\:frm\\:dropSelectFirst").find('option').clone().appendTo('#pg\\:frm\\:dropSelectSecond');*/
            
            $('select.dropSecond').empty();
            $('select.dropSecond').append($('select.dropFirst').clone().html());
            
            //Remove second list selected item from third list
            var fistListVal = $('#pg\\:frm\\:dropSelectFirst').val();
            var fistListId = $("#pg\\:frm\\:dropSelectFirst").children().children(":selected").attr("name");
            
            if(isLookupOption(fistListId) && fistListVal !=null && fistListVal.trim().length >0){
                //remove first selected item from second list               
                if(fistListVal !=null && fistListVal.trim().length >0){
                    $("select.dropSecond option[value='"+fistListVal+"']").remove();
                }
            }
        }
        function callObjectShowThird(){  
            $('.select2-container.dropThird a').find('img').remove();          
            $('#lineThird').find('img').attr('src',"{!URLFOR($Resource.iconImages,'LineSolid.png')}");
            $('#hoverRelThird').hide();
            $('#levelThird .scroll-parent').show();
            $('select.dropThird').select2().select2('val','');
            $('.select2-container.select-secondary-element').show();
            $('#hoverRelSelectedThirdImg').show();
            
            /*$("#pg\\:frm\\:dropSelectThird").find('option').remove();
            $("#pg\\:frm\\:dropSelectFirst").find('option').clone().appendTo('#pg\\:frm\\:dropSelectThird');*/
            
            $('select.dropThird').empty();
            $('select.dropThird').append($('select.dropFirst').clone().html());
            
            
            //Remove second list selected item from third list
            var fistListVal = $('#pg\\:frm\\:dropSelectFirst').val();
            var fistListId = $("#pg\\:frm\\:dropSelectFirst").children().children(":selected").attr("name");
            if(isLookupOption(fistListId) && fistListVal !=null && fistListVal.trim().length >0){
                $("select.dropThird option[value='"+fistListVal+"']").remove();
            }
            //Remove second list selected item from third list
            var secondListVal = $("#pg\\:frm\\:dropSelectSecond").val();
            var secondListId  = $("#pg\\:frm\\:dropSelectSecond").children().children(":selected").attr("name");
            if(isLookupOption(secondListId) && secondListVal !=null && secondListVal.trim().length >0){
                $("select.dropThird option[value='"+secondListVal+"']").remove();
            }
            
            //if(isLookupOption(secondListId) && secondListVal !=null && secondListVal.trim().length >0){
            //remove first selected item from second list
            //var fistListVal = $('#pg\\:frm\\:dropSelectFirst').val();
            //if(fistListVal !=null && fistListVal.trim().length >0){
            //$(".dropThird option[value='"+fistListVal+"']").remove();
            //}
                
                
            //var secondListVal = $('#pg\\:frm\\:dropSelectSecond').val();
            //if(secondListVal !=null && secondListVal.trim().length >0){
            // $(".dropThird option[value='"+secondListVal+"']").remove();
            //}
            //}
        }
        function isLookupOptionOriginal(fistListId){
        /*alert(fistListId);*/
            return fistListId.indexOf('lookup') > -1;
        }
        function isLookupOption(fistListId){
         if(fistListId != undefined){
         return fistListId.indexOf('lookup') > -1;
         }
            return false;
        }
        function callObjectThird(){
            RelatedObjectEditorThird();
        }
        function delRelated(){
            bindFirstEditor();
            
        }
        function delRelatedSecond(){
            bindSecondEditor(); 
                     
        }
        function delRelatedThird(){
            bindThirdEditor(); 
                   
        }
        function UnSaved(){
            previousOpenedThird = false;
            previousOpenedFirst = false;
            previousOpenedSecond = false; 
            $("#frmSetting").slideUp(300);
            rePopulateFormSettingObjectList();
            $('.change').removeClass('del');           
            $('.del').removeClass('del');
            $('#tabList .button').removeClass('btnSaved');
            $("#FrmImg").attr("src", "{!URLFOR($Resource.iconImages,'Formexpand.png')}");
            $("#FrmImg").addClass('curChange');
             
            $('.ObjectName h4').removeClass('disableColor');
            $('.editText').removeClass('disableColor');
             $('.form-editor-title-box').removeClass('va-disabled-items');
     
            $('.frmSet').removeClass('disableColor');  
            $('#copy_textarea').removeClass('disableColor');
            $('.objectDiv').removeClass('disableColor');
            $('#clip_copy').removeClass('disableColor');
            //$('.tooltips').removeClass('disableColor');
            $("#FrmImg").removeClass('togHoverActive');
            $('#formTitle').removeClass('disableColor');
             setColorTag();  
            //$('.tooltips').find('img').attr('src','{!URLFOR($Resource.iconImages,'Copy-icon-Back.png')}');  
        }
        function rePopulateFormSettingObjectList()
        {
            parseFormSettingXML (getRelatedObjectXML());
        }
        function parseFormSettingXML(xmlstr)
        {
             
    
            if(window.DOMParser)
            {
                parser = new DOMParser();
                xmlDoc = parser.parseFromString(xmlstr, "text/xml");
            }
            else // Internet Explorer
            {
                xmlDoc = new ActiveXObject("Microsoft.XMLDOM");
                xmlDoc.async = false;
                xmlDoc.loadXML(xmlstr);
            }
            
           
            var elem=xmlDoc.getElementsByTagName("object");
             
              
             $.each(elem, function(index, objElement){
                
                
                if(objElement.childNodes.length>0)
                {
                    
                  var selectedValue='';
                          $.each(objElement.getElementsByTagName("value"), function(index, subitem){
                           
                             selectedValue=$(subitem).text();
                         });
                         if(selectedValue!='')
                         {
                         console.log(' In FormSetting xml  selectedValue '+selectedValue);
                             if(index==0)
                             {
                              console.log('index levelFirst ');
                            // $('#levelFirst').find('select.select-secondary-element').select2("val",selectedValue);
                             setRelatedObjectStyle('#levelFirst',selectedValue);
                             }
                             else if(index==1)
                             {
                              console.log('index levelSecond ');
                            // $('#levelSecond').find('select.select-secondary-element').select2("val",selectedValue);
                             setRelatedObjectStyle('#levelSecond',selectedValue);
                             }
                              else if(index==2)
                             {
                              console.log('index levelThird ');
                            // $('#levelThird').find('select.select-secondary-element').select2("val",selectedValue);
                             setRelatedObjectStyle('#levelThird',selectedValue);
                             }
                             else
                             {
                              console.log('index not found ');
                             }
                          
                         }
                         else
                         {
                          console.log('Selected Value is empty  ');
                         }
                 }
                 });
         }
        function setRelatedObjectStyle(elem,selectedVal)
        {
            $(elem).css('display','block');
            $(elem).find('.relatedDiv').hide();
            $(elem).find('.scroll-parent').css('display','block');
            $(elem).find('.add-object-line img').attr('src',"{!URLFOR($Resource.iconImages,'LineSolid.png')}");
            $(elem).find('.delete-object-box').show();
            $(elem).find('select.select-secondary-element').select2("val",selectedVal);
            
        }
        function updateformTitle()
        {
            $('#formTitle').val($('#formnameedit').val());
        }
        function resetTrackSubmissions(){
         if( $('.chkbxtrackingEnabled').prop('checked'))
          {
         updateTrackSubmissionsOption(true);
          }
          else
          {
         updateTrackSubmissionsOption(false);
        
          }
        }
        /*saved()  function starts  -call from save changes in form settings */
        function Saved(){
           
          console.log(' Related Object XML- '+getRelatedObjectXML());
         var treeeditorsinglefilepath='{!URLFOR($Resource.iconImages,'TreeEditorSingle.png')}';
            
        var reSelect1=$("select.dropFirst").select2("val");
                var reSelect2=$("select.dropSecond").select2("val");
                var reSelect3=$("select.dropThird").select2("val");
          
            previousOpenedThird = false;
            previousOpenedFirst = false;
            previousOpenedSecond = false;
            var opFirst='',opSecond='',opThird='';            
            var isErrorSelect=false;
            var opFirstText='',opSecondText='',opThirdText='';
            if(reSelect1 == '' && $('#levelFirst .scroll-parent').css('display') == 'block'){ 
                if(reSelect1 == '' ){
                    $(".hoverRelImg").next().show();
                }
                isErrorSelect=true;
            }
            
            if(reSelect2 == '' && $('#levelSecond .scroll-parent').css('display') == 'block'){ 
                if(reSelect2 == '' ){
                    $(".hoverRelSelectedSecondImg").next().show();
                }
                isErrorSelect=true;
            }
            
            
            if(reSelect3 == '' && $('#levelThird .scroll-parent').css('display') == 'block'){ 
                if(reSelect3 == ''){
                    $(".hoverRelSelectedThirdImg").next().show();
                }
                isErrorSelect=true;
            }
            isErrorSelect = false;
            if(isErrorSelect == false){
                updateformTitle(); 
                resetSavedButton();
                listHideRenderDiv();
           
                //Saved Object Tree Editor   
                var appString ='';         
              /*  appString += '<h4 style="line-height:12.5px" class="disableColor"><span style="display:block"><i>Primary Object:</i>&nbsp;&nbsp;';
                appString +='<span style="margin-bottom: 4px;display: inline-block;" data-object="'+$("select.drop-selectEditor").select2("val")+'" class="'+$("select.drop-selectEditor").select2("val")+'" id="priName">'+$("select.drop-selectEditor").children(':selected').text()+'</span><br/>';
                appString +='</span>';
                */ 
                if((typeof reSelect1 == 'string' && reSelect1 !=undefined && selectSecNameIdByIndex(0) != reSelect1.replace('Id','')) || $('#levelFirst .scroll-parent').css('display')=='none'){
                    var listNameClass='';
                    $("#parentUlForm li").each(function(){
                        $(this).find('.formUlLabel').each(function(){
                            $(this).find('li').each(function(){
                                if($(this).hasClass('lbl') == false && $(this).hasClass('sortableForFieldsNew')){
                                    if($(this).hasClass('A')){
                                        listNameClass='A';
                                    }
                                    if($(this).hasClass('B')){
                                        listNameClass='B';
                                    }
                                    if($(this).hasClass('C')){
                                        listNameClass='C';
                                    }
                                    $(this).remove();
                                }
                            });
                        });    
                    });
                
                    //alert(delObjectSecond);
                    if(delObjectSecond != ''){
                        $("#parentUlForm li").each(function(){
                            $(this).find('.formUlLabel').each(function(){
                                $(this).find('li').each(function(){                                    
                                    if($(this).hasClass('lbl') == false && $(this).hasClass(delObjectSecond)){                                          
                                        $(this).removeClass(delObjectSecond);
                                        $(this).addClass('sortableForFieldsNew');
                                        $(this).removeClass('A');
                                        $(this).removeClass('B');
                                        $(this).removeClass('C');
                                        if($('.select2-container.dropFirst a').find('img').attr('src') != undefined){                                          
                                            $(this).addClass('A');
                                            listNameClass='A';
                                        }else{
                                            listNameClass='';
                                        }
                                          
                                        $(this).find('.listName').text('sortableForFieldsNew '+listNameClass);
                                        var lblId=$(this).find('label').attr('id').replace('lbl','');
                                        //if(lblId.substring(lblId.length-1) == 'A' || lblId.substring(lblId.length-1) == 'B' || lblId.substring(lblId.length-1) == 'C'){
                                        if($('.select2-container.dropThird a').find('img').attr('id') != undefined){
                                            afterlblId=lblId.replace(lblId.substring(lblId.length-1),listNameClass);
                                        }else{
                                            afterlblId=lblId;
                                        }
                                        $(this).find('label').attr('id','lbl'+afterlblId);
                                        $(this).find('#isUserSelectedRequired'+lblId).attr('id','isUserSelectedRequired'+afterlblId);
                                        $(this).find('#errMsgForRequired'+lblId).attr('id','errMsgForRequired'+afterlblId);
                                        $(this).find('#defaultValue'+lblId).attr('id','defaultValue'+afterlblId);
                                        $(this).find('#hideField'+lblId).attr('id','hideField'+afterlblId);
                                        $(this).find('#upsertField'+lblId).attr('id','upsertField'+afterlblId);                                                                                          
                                        $(this).find('.editImg').attr('onclick' , "openEditDialog('"+ $(this).attr('id').replace(lblId,afterlblId) +"',true);");
                                        if($(this).find('.deleteField').attr('id') != undefined){
                                            $(this).find('.deleteField').attr('id',$(this).attr('id').replace(lblId,afterlblId));
                                        }
                                        $(this).attr('id',$(this).attr('id').replace(lblId,afterlblId));
                                              
                                        //} 
                                                                                     
                                    }
                                });
                            });    
                        });
                        delObjectSecond='';
                    }
                
                    if(delObjectThird != ''){
                        $("#parentUlForm li").each(function(){
                            $(this).find('.formUlLabel').each(function(){
                                $(this).find('li').each(function(){                                    
                                    if($(this).hasClass('lbl') == false && $(this).hasClass(delObjectThird)){                                          
                                        $(this).removeClass(delObjectThird);
                                        $(this).addClass('sortableForFieldsThird');
                                        $(this).removeClass('A');
                                        $(this).removeClass('B');
                                        $(this).removeClass('C');
                                        if($('.select2-container.dropFirst a').find('img').attr('src') != undefined){                                          
                                            $(this).addClass('B');
                                            listNameClass='B';
                                        }else{
                                            listNameClass='';
                                        }
                                        $(this).find('.listName').text('sortableForFieldsThird '+listNameClass);
                                        var lblId=$(this).find('label').attr('id').replace('lbl','');
                                        //if(lblId.substring(lblId.length-1) == 'A' || lblId.substring(lblId.length-1) == 'B' || lblId.substring(lblId.length-1) == 'C'){
                                        if($('.select2-container.dropThird a').find('img').attr('id') != undefined){
                                            afterlblId=lblId.replace(lblId.substring(lblId.length-1),listNameClass);
                                        }else{
                                            afterlblId=lblId;
                                        }
                                        $(this).find('label').attr('id','lbl'+afterlblId);
                                        $(this).find('#isUserSelectedRequired'+lblId).attr('id','isUserSelectedRequired'+afterlblId);
                                        $(this).find('#errMsgForRequired'+lblId).attr('id','errMsgForRequired'+afterlblId);
                                        $(this).find('#defaultValue'+lblId).attr('id','defaultValue'+afterlblId);
                                        $(this).find('#hideField'+lblId).attr('id','hideField'+afterlblId);
                                        $(this).find('#upsertField'+lblId).attr('id','upsertField'+afterlblId);                                                                                          
                                        $(this).find('.editImg').attr('onclick' , "openEditDialog('"+ $(this).attr('id').replace(lblId,afterlblId) +"',true);");
                                        if($(this).find('.deleteField').attr('id') != undefined){
                                            $(this).find('.deleteField').attr('id',$(this).attr('id').replace(lblId,afterlblId));
                                        }
                                        $(this).attr('id',$(this).attr('id').replace(lblId,afterlblId));
                                        //} 
                                                                                    
                                    }
                                });
                            });    
                        });
                    }
                }
          /* if(isSelectedItemIsvalid('levelFirst') && $("select.dropFirst").select2("val") != '' && $('#levelFirst .scroll-parent').css('display') != 'none'){ 
                
                    appString +="<img src='"+treeeditorsinglefilepath+"' style='margin-left: 113px;margin-top:-6px;float:left;clear:left'/>";
                appString +='<span  class="secName"   style="float:left;clear:right;margin-top:4px;" id="'+reSelect.replace('Id','')+'">'+ $('.select2-container.dropFirst a').text().trim() +'</span>';
               }
            */
               /// reSelect=$("select.dropSecond").select2().select2("val");
                 
                if((typeof reSelect2 == 'string' && reSelect2 !=undefined && selectSecNameIdByIndex(1) != reSelect2.replace('Id','')) || $('#levelSecond .scroll-parent').css('display')=='none'){
                    //Recalulate All colorbar   
                    var listNameClass='';             
                    $("#parentUlForm li").each(function(){
                        $(this).find('.formUlLabel').each(function(){
                            $(this).find('li').each(function(){
                                if($(this).hasClass('lbl') == false && $(this).hasClass('sortableForFieldsThird')){                                      
                                    $(this).remove();
                                }
                            });
                        });    
                    });
                    if(delObjectName != ''){
                        $("#parentUlForm li").each(function(){
                            $(this).find('.formUlLabel').each(function(){
                                $(this).find('li').each(function(){                                    
                                    if($(this).hasClass('lbl') == false && $(this).hasClass(delObjectName)){                                          
                                        $(this).removeClass(delObjectName);
                                        $(this).addClass('sortableForFieldsThird');
                                        $(this).removeClass('A');
                                        $(this).removeClass('B');
                                        $(this).removeClass('C');                                         
                                          
                                        if(/A.png/i.test($('.select2-container.dropSecond a').find('img').attr('src')))
                                            listNameClass='A';                                                      
                                        if(/B.png/i.test($('.select2-container.dropSecond a').find('img').attr('src')))
                                            listNameClass='B'; 
                                        if(/C.png/i.test($('.select2-container.dropSecond a').find('img').attr('src')))
                                            listNameClass='C';                                        
                                          
                                        $(this).addClass(listNameClass);  
                                        $(this).find('.listName').text('sortableForFieldsThird '+listNameClass);
                                        var lblId=$(this).find('label').attr('id').replace('lbl','');
                                        //if(lblId.substring(lblId.length-1) == 'A' || lblId.substring(lblId.length-1) == 'B' || lblId.substring(lblId.length-1) == 'C'){
                                        if($('.select2-container.dropThird a').find('img').attr('id') != undefined){
                                            afterlblId=lblId.replace(lblId.substring(lblId.length-1),listNameClass);
                                        }else{
                                            afterlblId=lblId;
                                        }
                                        $(this).find('label').attr('id','lbl'+afterlblId);
                                        $(this).find('#isUserSelectedRequired'+lblId).attr('id','isUserSelectedRequired'+afterlblId);
                                        $(this).find('#errMsgForRequired'+lblId).attr('id','errMsgForRequired'+afterlblId);
                                        $(this).find('#defaultValue'+lblId).attr('id','defaultValue'+afterlblId);
                                        $(this).find('#hideField'+lblId).attr('id','hideField'+afterlblId);
                                        $(this).find('#upsertField'+lblId).attr('id','upsertField'+afterlblId);                                                                                          
                                        $(this).find('.editImg').attr('onclick' , "openEditDialog('"+ $(this).attr('id').replace(lblId,afterlblId) +"',true);");
                                        if($(this).find('.deleteField').attr('id') != undefined){
                                            $(this).find('.deleteField').attr('id',$(this).attr('id').replace(lblId,afterlblId));
                                        }
                                        $(this).attr('id',$(this).attr('id').replace(lblId,afterlblId));
                                        //}                                              
                                    }
                                });
                            });    
                        });
                        delObjectName ='';
                    }
                
                }
                delObjectThird='';
                //}
            
            /*    if(isSelectedItemIsvalid('levelSecond') && $("select.dropSecond").select2("val") != '' && $('#levelSecond .scroll-parent').css('display') != 'none'){ 
                     appString +="<img src='"+treeeditorsinglefilepath+"' style='margin-left: 113px;margin-top:-6px;float:left;clear:left'/>";
                appString +='<span  class="secName"   style="float:left;clear:right;margin-top:4px;" id="'+reSelect.replace('Id','')+'">'+ $('.select2-container.dropSecond a').text().trim() +'</span>';
              }
            */
               // reSelect=$("select.dropThird").select2().select2("val");
         
                ////modification on Nov 26 to fix issue: #39 Save and publish doesn't remember object config - by balinder
                
           
                if((typeof reSelect3 == 'string'  && reSelect3 !=undefined && selectSecNameIdByIndex(2) != reSelect3.replace('Id','')) || $('#levelThird .scroll-parent').css('display')=='none'){
                    $("#parentUlForm li").each(function(){
                        $(this).find('.formUlLabel').each(function(){
                            $(this).find('li').each(function(){
                                if($(this).hasClass('lbl') == false && $(this).hasClass('sortableForFieldsFourth')){
                                    $(this).remove();
                                }
                            });
                        });    
                    });                  
                }
            
               /* if(isSelectedItemIsvalid('levelThird') && $("select.dropThird").select2("val") != '' && $('#levelThird .scroll-parent').css('display') != 'none' ){ 
                console.log(' dropThird '+$("select.dropThird").select2("val"));
                    appString +="<img src='"+treeeditorsinglefilepath+"' style='margin-left: 113px;margin-top:-6px;float:left;clear:left'/>";
                appString +='<span  class="secName"   style="float:left;clear:right;margin-top:4px;" id="'+reSelect3.replace('Id','')+'">'+ $('.select2-container.dropThird a').text().trim() +'</span>';
               }*/
               
                if(typeof reSelect1 == 'string' && IsSelectVisible('levelFirst') && isSelectedItemIsvalid('levelFirst')){
                    
                    opFirst=reSelect1.replace('Id','');
                    
                    opFirstText=$('.select2-container.dropFirst a').text().trim();
                }
                else{
                    opFirst='';
                    opFirstText='';
                }
                
                if(typeof reSelect2 == 'string' && IsSelectVisible('levelSecond') &&  isSelectedItemIsvalid('levelSecond')){
                   opSecond=reSelect2.replace('Id','');
                    opSecondText=$('.select2-container.dropSecond a').text().trim();
                }else{
                    
                     opSecond=''; 
                     opSecondText=''; 
                }
               opThird='';
                if(typeof reSelect3 == 'string' &&  IsSelectVisible('levelThird') && isSelectedItemIsvalid('levelThird') ){
                   
                    opThird=reSelect3.replace('Id','');
                    opThirdText=$('.select2-container.dropThird a').text().trim();
                      
                }else{
                     opThird='';
                     opThirdText='';
                }
                 var formnm=$('#formTitle').val();
                 var tracksubmissions=IsTrackingEnabled();
          
               var emailnotifications=IsEmailNotificationsEnabled();
          var notifyemail=getNotificationEmail();
          console.log(' 3 '+opThird+' 2 '+opSecond+' 1 '+opFirst+' 3 '+opThirdText+' 2 '+opSecondText+' 1 '+opFirstText+' Hidden object values-'+fetchHiddenObjectValues());
                saveChanges(opThird,opSecond,opFirst,opThirdText,opSecondText,opFirstText,fetchHiddenObjectValues(),formnm ,tracksubmissions,emailnotifications,notifyemail );
                
                $('#hiddenLiId').val('ftrSortableForLabelli');
                saveButton();
                appString +='</h4>';
            
               // $('.ObjectName').html('');
        
               // $('.ObjectName').html(appString);
                $('.change').removeClass('del');
                $('.del').removeClass('del'); 
                $('#tabList .button').removeClass('btnSaved');
                $("#FrmImg").attr("src", "{!URLFOR($Resource.iconImages,'Formexpand.png')}");
            
               reEnableHeaderSection();
     
                $('.ObjectName').find('h4').removeClass('disableColor');
                $('.editText').val($('.FrmName').val());
                $('.frmSet').removeClass('disableColor');
                $("#FrmImg").addClass('curChange');
                $("#FrmImg").removeClass('togHoverActive'); 
                $('#copy_textarea').removeClass('disableColor');
                $('.objectDiv').removeClass('disableColor');
                $('#clip_copy').removeClass('disableColor');
                $('.tooltips').removeClass('disableColor');
                //$('.tooltips').find('img').attr('src','{!URLFOR($Resource.iconImages,'Copy-icon-Back.png')}');         
                hideSection(); 
            }
            // Update A B C class Name and color
            updateFieldColor();
            scrollAvailableDiv();
        }
        function reEnableHeaderSection()
        {
            $("#frmSetting").slideUp(300);            
                $('.editText').removeClass('disableColor');
                $('.form-editor-title-box').removeClass('va-disabled-items');
        }
        /*saved() function ends*/
    function IsTrackingEnabled(){
    var tracksubmissions=false;
    if( $('.chkbxtrackingEnabled').prop('checked'))
          {
         tracksubmissions=true;
          }
          else
          {
       tracksubmissions=false;
        
          }
          return tracksubmissions;
    }
    function IsEmailNotificationsEnabled(){
    var notifyinemails=false;
    if( $('.chkbxemailNotifications').prop('checked'))
          {
         notifyinemails=true;
          }
          else
          {
       notifyinemails=false;
        
          }
          return notifyinemails;
    }
    function getNotificationEmail(){
    return $('.inputTxtemailNotifications').val(); 
    }
        function updateFieldColor(){
            if($("#ListFourth span").css('background-image') !=undefined && $("#ListFourth span").css('background-image') !="none"){
                var clsName = $("#ListFourth span").css('background-image').split('alpha/')[1].split('.')[0];
                $(".sortableForFieldsFourth").each(function(){
                    $(this).removeClass('A');
                    $(this).removeClass('B');
                    $(this).removeClass('C');
                    $(this).addClass(clsName);
                    var lbl = $(this).find("label").attr('id');
                    var previousClass = lbl.substr(lbl.length - 1);
                    var fldLbl = lbl.substr(3);
                    fldLbl = fldLbl.substr(0,fldLbl.length-1);
                    $(this).find("label").attr('id','lbl'+fldLbl+clsName);
                    var inputFld=$(this).find(".fieldDiv").find(':input[type!="hidden"]');
                    inputFld.attr('id',inputFld.attr('id').replace(fldLbl+previousClass,fldLbl+clsName));
                    $(this).find('#isUserSelectedRequired'+fldLbl+previousClass).attr('id','isUserSelectedRequired'+fldLbl+clsName);
                    
                    $(this).find('#errMsgForRequired'+fldLbl+previousClass).attr('id','errMsgForRequired'+fldLbl+clsName);
                    $(this).find('#defaultValue'+fldLbl+previousClass).attr('id','defaultValue'+fldLbl+clsName);
                    $(this).find('#isDefaultRequired'+fldLbl+previousClass).attr('id','isDefaultRequired'+fldLbl+clsName);
                    $(this).find('#hideField'+fldLbl+previousClass).attr('id','hideField'+fldLbl+clsName);
                    $(this).find('#upsertField'+fldLbl+previousClass).attr('id','upsertField'+fldLbl+clsName);  
                    $(this).find('.editImg').attr('onclick' , "openEditDialog('"+ $(this).attr('id').replace(fldLbl+previousClass,fldLbl+clsName) +"',true);"); 
                    if($(this).find('.deleteField').attr('id') != undefined){
                        $(this).find('.deleteField').attr('id',$(this).attr('id').replace(fldLbl+previousClass,fldLbl+clsName));
                    }
                    $(this).attr('id',$(this).attr('id').replace(fldLbl+previousClass,fldLbl+clsName));
                    $(this).find(".listName").text('');
                    $(this).find(".listName").text('sortableForFieldsFourth '+clsName);
                                    
                });
            }
            if($("#ListSecond span").css('background-image') !=undefined && $("#ListSecond span").css('background-image') !="none"){
                var clsName = $("#ListSecond span").css('background-image').split('alpha/')[1].split('.')[0];
                $(".sortableForFieldsNew").each(function(){
                    $(this).removeClass('A');
                    $(this).removeClass('B');
                    $(this).removeClass('C');
                    $(this).addClass(clsName);
                    var lbl = $(this).find("label").attr('id');
                    var previousClass = lbl.substr(lbl.length - 1);
                    var fldLbl = lbl.substr(3);
                    fldLbl = fldLbl.substr(0,fldLbl.length-1);
                    $(this).find("label").attr('id','lbl'+fldLbl+clsName);
                    var inputFld=$(this).find(".fieldDiv").find(':input[type!="hidden"]');
                    inputFld.attr('id',inputFld.attr('id').replace(fldLbl+previousClass,fldLbl+clsName));
                    $(this).find('#isUserSelectedRequired'+fldLbl+previousClass).attr('id','isUserSelectedRequired'+fldLbl+clsName);
                    
                    $(this).find('#errMsgForRequired'+fldLbl+previousClass).attr('id','errMsgForRequired'+fldLbl+clsName);
                    $(this).find('#defaultValue'+fldLbl+previousClass).attr('id','defaultValue'+fldLbl+clsName);
                    $(this).find('#isDefaultRequired'+fldLbl+previousClass).attr('id','isDefaultRequired'+fldLbl+clsName);
                    $(this).find('#hideField'+fldLbl+previousClass).attr('id','hideField'+fldLbl+clsName);
                    $(this).find('#upsertField'+fldLbl+previousClass).attr('id','upsertField'+fldLbl+clsName);  
                    $(this).find('.editImg').attr('onclick' , "openEditDialog('"+ $(this).attr('id').replace(fldLbl+previousClass,fldLbl+clsName) +"',true);"); 
                    if($(this).find('.deleteField').attr('id') != undefined){
                        $(this).find('.deleteField').attr('id',$(this).attr('id').replace(fldLbl+previousClass,fldLbl+clsName));
                    }
                    $(this).attr('id',$(this).attr('id').replace(fldLbl+previousClass,fldLbl+clsName));
                    $(this).find(".listName").text('');
                    $(this).find(".listName").text('sortableForFieldsNew '+clsName);
                    
                });
            }
            if($("#ListThird span").css('background-image') !=undefined && $("#ListThird span").css('background-image') !="none"){
                var clsName = $("#ListThird span").css('background-image').split('alpha/')[1].split('.')[0];
                $(".sortableForFieldsThird").each(function(){
                    $(this).removeClass('A');
                    $(this).removeClass('B');
                    $(this).removeClass('C');
                    $(this).addClass(clsName);
                    var lbl = $(this).find("label").attr('id');
                    var previousClass = lbl.substr(lbl.length - 1);
                    var fldLbl = lbl.substr(3);
                    fldLbl = fldLbl.substr(0,fldLbl.length-1);
                    $(this).find("label").attr('id','lbl'+fldLbl+clsName);
                    var inputFld=$(this).find(".fieldDiv").find(':input[type!="hidden"]');
                    inputFld.attr('id',inputFld.attr('id').replace(fldLbl+previousClass,fldLbl+clsName));
                    $(this).find('#isUserSelectedRequired'+fldLbl+previousClass).attr('id','isUserSelectedRequired'+fldLbl+clsName);
                    
                    $(this).find('#errMsgForRequired'+fldLbl+previousClass).attr('id','errMsgForRequired'+fldLbl+clsName);
                    $(this).find('#defaultValue'+fldLbl+previousClass).attr('id','defaultValue'+fldLbl+clsName);
                    $(this).find('#isDefaultRequired'+fldLbl+previousClass).attr('id','isDefaultRequired'+fldLbl+clsName);
                    $(this).find('#hideField'+fldLbl+previousClass).attr('id','hideField'+fldLbl+clsName);
                    $(this).find('#upsertField'+fldLbl+previousClass).attr('id','upsertField'+fldLbl+clsName);  
                    $(this).find('.editImg').attr('onclick' , "openEditDialog('"+ $(this).attr('id').replace(fldLbl+previousClass,fldLbl+clsName) +"',true);"); 
                    if($(this).find('.deleteField').attr('id') != undefined){
                        $(this).find('.deleteField').attr('id',$(this).attr('id').replace(fldLbl+previousClass,fldLbl+clsName));
                    }
                    $(this).attr('id',$(this).attr('id').replace(fldLbl+previousClass,fldLbl+clsName));
                    $(this).find(".listName").text('');
                    $(this).find(".listName").text('sortableForFieldsThird '+clsName);
                    
                });
            }
            
            
        }
        function listHideRenderDiv(){
            setTitleSortable();            
            
            $("#parentUlForm li").each(function(){
                $(this).find('.formUlLabel').each(function(){
                    $(this).find('li').each(function(){
                        if($(this).hasClass('lbl') == false && $(this).hasClass('sortableForFields')){
                            if(isSecNameElemExistsByIndex(0)){
                                var listFirst=selectSecNameIdByIndex(0).substring(selectSecNameIdByIndex(0).indexOf('(')+1,selectSecNameIdByIndex(0).indexOf(')'));
                                if($(this).find('label').text() == listFirst){
                                  
                                    $(this).remove();
                                }
                            }
                                
                            if(isSecNameElemExistsByIndex(1)){
                                if($(this).find('label').text() == selectSecNameIdByIndex(1).substring(selectSecNameIdByIndex(1).indexOf('(')+1,selectSecNameIdByIndex(1).indexOf(')'))){
                                    $(this).remove();
                                }
                            }
                                
                                
                            if(isSecNameElemExistsByIndex(2)){
                                if($(this).find('label').text() == selectSecNameIdByIndex(2).substring(selectSecNameIdByIndex(2).indexOf('(')+1,selectSecNameIdByIndex(2).indexOf(')'))){
                                    $(this).remove();
                                }
                            }
                        }
                    });
                });    
            });
            
            $("#parentUlForm li").each(function(){
                $(this).find('.formUlLabel').each(function(){
                    $(this).find('li').each(function(){
                        if($(this).hasClass('lbl') == false && $(this).hasClass('sortableForFields')){
                            var fName=$(this).find('div').attr('lblname');
                            $("#sortableForFields li").each(function(){                            
                                if(fName == $(this).find('div').attr('lblname')){
                                    $(this).remove();
                                }
                            });
                        }
                    });
                });    
            });
            
            $("#parentUlForm li").each(function(){
                $(this).find('.formUlLabel').each(function(){
                    $(this).find('li').each(function(){
                        if($(this).hasClass('lbl') == false && $(this).hasClass('sortableForFieldsNew')){
                            var fName=$(this).find('div').attr('lblname');
                            $("#sortableForFieldsNew li").each(function(){
                                if(fName == $(this).find('div').attr('lblname')){
                                    $(this).remove();
                                }
                            });
                        }
                    });
                });    
            });
            
            $("#parentUlForm li").each(function(){
                $(this).find('.formUlLabel').each(function(){
                    $(this).find('li').each(function(){
                        if($(this).hasClass('lbl') == false && $(this).hasClass('sortableForFieldsThird')){
                            var fName=$(this).find('div').attr('lblname');
                            $("#sortableForFieldsThird li").each(function(){
                                if(fName == $(this).find('div').attr('lblname')){
                                    $(this).remove();
                                }
                            });
                        }
                    });
                });    
            });
            
            $("#parentUlForm li").each(function(){
                $(this).find('.formUlLabel').each(function(){
                    $(this).find('li').each(function(){
                        if($(this).hasClass('lbl') == false && $(this).hasClass('sortableForFieldsFourth')){
                            var fName=$(this).find('div').attr('lblname');
                            $("#sortableForFieldsFourth li").each(function(){
                                if(fName == $(this).find('div').attr('lblname')){
                                    $(this).remove();
                                }
                            });
                        }
                    });
                });    
            });
            
            if($('#levelThird .scroll-parent').css('display') == 'none'){
                $("#ListFourth").css('display','none');
                $("#ListFourthToggle").css('display','none');
            }
            if($('#levelSecond .scroll-parent').css('display') == 'none'){
                $("#ListThird").css('display','none');
                $("#ListThirdToggle").css('display','none');
            }
            if($('#levelFirst .scroll-parent').css('display') == 'none'){
                $("#ListSecond").css('display','none');
                $("#ListSecondToggle").css('display','none');
            }
            
            removeReference();
            addRequiredParentOnSaved();
            addRequiredMarkOnLabel();
            
            //$('#ListFirst .objName').text($('#priName').text()+' Fields');
            $('#ListFirst .objName').text($('#priName').text());
            
        }
        function SetTitleColor()
        {
console.log(' in SetTitleColor');
            var txt=$('.select2-container.dropFirst a').find('img').attr('src');
            $("#ListSecond .objName").css('background-image',"none");
            if(txt != undefined){
                if(txt.indexOf("A.png") >= 1){
                    //Color Title icon for List
                    $("#ListSecond .objName").css('background-image',"url({!URLFOR($Resource.alpha,'A.png')})");
                    $("#ListSecond .objName").css('background-position',"99% center");
                    $("#ListSecond .objName").css('background-repeat',"no-repeat");
                }
            }
            //List Title color icon
            txt=$('.select2-container.dropSecond a').find('img').attr('src');
            $("#ListThird .objName").css('background-image',"none");
            if(txt != undefined){
                if(txt.indexOf("A.png") >= 1){
                    //Color Title icon for List
                    $("#ListThird .objName").css('background-image',"url({!URLFOR($Resource.alpha,'A.png')})");
                    $("#ListThird .objName").css('background-position',"99% center");
                    $("#ListThird .objName").css('background-repeat',"no-repeat");
                }
                if(txt.indexOf("B.png") >= 1){
                    //Color Title icon for List
                    $("#ListThird .objName").css('background-image',"url({!URLFOR($Resource.alpha,'B.png')})");
                    $("#ListThird .objName").css('background-position',"99% center");
                    $("#ListThird .objName").css('background-repeat',"no-repeat");
                } 
            } 
            //List Title color icon
            txt=$('.select2-container.dropThird a').find('img').attr('src');
            $("#ListFourth .objName").css('background-image',"none");
            if(txt != undefined){
                if(txt.indexOf("A.png") >= 1){
                    //Color Title icon for List
                    $("#ListFourth .objName").css('background-image',"url({!URLFOR($Resource.alpha,'A.png')})");
                    $("#ListFourth .objName").css('background-position',"99% center");
                    $("#ListFourth .objName").css('background-repeat',"no-repeat");
                } 
                if(txt.indexOf("B.png") >= 1){
                    //Color Title icon for List
                    $("#ListFourth .objName").css('background-image',"url({!URLFOR($Resource.alpha,'B.png')})");
                    $("#ListFourth .objName").css('background-position',"99% center");
                    $("#ListFourth .objName").css('background-repeat',"no-repeat");
                }
                if(txt.indexOf("C.png") >= 1){
                    //Color Title icon for List
                    $("#ListFourth .objName").css('background-image',"url({!URLFOR($Resource.alpha,'C.png')})");
                    $("#ListFourth .objName").css('background-position',"99% center");
                    $("#ListFourth .objName").css('background-repeat',"no-repeat");
                } 
            }  
        }
        var isSame=false;
        function addRequiredParentOnSaved(){
            if($('#priName').next().next().html() != undefined){  
                var countObj=0;
                var tolCount=0;
                var getindex=0;
                $("select.dropFirst option").each(function(){
                    countObj++;
                    if($(this).text() == '----Select Child Object----'){
                        return false;
                    }                    
                });
                
                $("select.dropFirst option").each(function(){
                    getindex++;
                    if($(this).val() == selectSecNameIdByIndex(0)){
                        //tolCount +=1;
                        return false;
                    }
                });
                var containerHtml = '<img class="branchImage" src="{!URLFOR($Resource.alpha,'A.png')}" />';
                
                if(getindex > countObj){
                    $('.select2-container.dropFirst a').append(containerHtml);
                    tolCount +=1;
                }
                
                if($('#priName').next().next().next().next().html() != undefined){
                    getindex=0;
                    $("select.dropFirst option").each(function(){
                        getindex++;
                        if($(this).val() == selectSecNameIdByIndex(1).trim()){
                            //tolCount +=1;
                            return false;
                        }
                    });
                    if(getindex > countObj){                        
                        tolCount +=1;
                    }
                    var containerHtml = '';
                    if(tolCount == 1){
                        containerHtml = '<img class="branchImage" src="{!URLFOR($Resource.alpha,'A.png')}" />';
                    }
                    if(tolCount == 2){
                        containerHtml = '<img class="branchImage" src="{!URLFOR($Resource.alpha,'B.png')}" />';
                    }
                    if(getindex > countObj){
                        $('.select2-container.dropSecond a').append(containerHtml);                        
                    }
                    
                }
                if($('#priName').next().next().next().next().next().next().html() != undefined){
                    getindex=0;
                    $("select.dropFirst option").each(function(){
                        getindex++;
                        //if($(this).val() == selectSecNameTextByIndex(2)){
                        if($(this).val() == selectSecNameIdByIndex(2)){
                            //tolCount +=1;
                            return false;
                        }
                    });
                    if(getindex > countObj){
                        tolCount +=1;
                    }
                    var containerHtml = '';
                    if(tolCount == 1){
                        containerHtml = '<img class="branchImage" src="{!URLFOR($Resource.alpha,'A.png')}" />';
                    }
                    if(tolCount == 2){
                        containerHtml = '<img class="branchImage" src="{!URLFOR($Resource.alpha,'B.png')}" />';
                    }
                    if(tolCount == 3){
                        containerHtml = '<img class="branchImage" src="{!URLFOR($Resource.alpha,'C.png')}" />';
                    }
                    if(getindex > countObj){
                        $('.select2-container.dropThird a').append(containerHtml);
                    }
                }
            }
            //List Title color icon
            SetTitleColor();

            //Remove required reference field from Editor Area            
            $("#parentUlForm li").each(function(){
                $(this).find('.formUlLabel').each(function(){
                    $(this).find('li').each(function(){                  
                        if($(this).hasClass('lbl') == false && $(this).find('span').hasClass('requiredSpan')){                                                                        
                             if($(this).hasClass('sortableForFields') && isFieldReference(this))
                      {
                      deleteField($(this).attr('id'));
                     /* $(this).remove();*/
                         }
                        }
                    });
                }); 
            });
            removeReference();
            removePrimaryLookupField();
            $("#sortableForFields").find('li').each(function(){
                if($(this).find('textarea').length>0){
                    $(this).find('textarea').text('');
                } 
                if($("#ListFirst").css('display') != 'none'){                 
                    var listId='';                 
                    if($(this).css("display") != "none" && ($(this).attr("isrequired")== true || $(this).attr("isrequired")=="true")){                        
                    if( ! isFieldReference(this))
                     {
                     
                      $(this).dblclick();
                     } 
                        listId=$(this).attr("id"); 
                        
                    } 
                }                      
            });                
            $("#sortableForFieldsNew").find('li').each(function(){
                if($(this).find('textarea').length>0){
                    $(this).find('textarea').text('');
                }
                if($("#ListSecond").css('display') != 'none'){         
                    var listId='';                 
                    if($(this).css("display") != "none" && ($(this).attr("isrequired")== true || $(this).attr("isrequired")=="true")){                                                 
                        $(this).dblclick();
                        listId=$(this).attr("id");                           
                    }
                }                      
            });
                
            $("#sortableForFieldsThird").find('li').each(function(){
                if($(this).find('textarea').length>0){
                    $(this).find('textarea').text('');
                }
                if($("#ListThird").css('display') != 'none'){                  
                    var listId='';                 
                    if($(this).css("display") != "none" && ($(this).attr("isrequired")== true || $(this).attr("isrequired")=="true")){                        
                        $(this).dblclick();
                        listId=$(this).attr("id");
                    }
                }                      
            });
            
            
            $("#sortableForFieldsFourth").find('li').each(function(){
                if($(this).find('textarea').length>0){
                    $(this).find('textarea').text('');
                }
                if($("#ListFourth").css('display') != 'none'){ 
                    var listId='';                 
                    if($(this).css("display") != "none" && ($(this).attr("isrequired")== true || $(this).attr("isrequired")=="true")){                        
                        $(this).dblclick();
                        listId=$(this).attr("id");
                    }
                      
                       
                }                     
            });                
            sort('sortableForFields');
            sort('sortableForFieldsNew');
            sort('sortableForFieldsThird');
            sort('sortableForFieldsFourth');
        }
        function setTitleParent(){
            /*$("#parentUlForm li").each(function(){
                 $(this).find('.formUlLabel').each(function(){
                   $(this).find('li').each(function(){
                     if($(this).hasClass('lbl') == false){
                       var setVal=$(this);
                       var objStr=$(this).find('.addObjName').text().replace('From : ','').replace('Object','');
                       if($(this).find('div').attr('id').split('.').length-1 >1){
                         $(".dropFirst option").each(function(){
                             if(objStr.trim()==$(this).val()){
                               $(setVal).find('.addObjName').html('<i>From : '+$(this).text()+' Object</i>');
                             }
                         });
                       }
                     }
                   });
                 });    
           });*/
            if(RunTag){
                $('#load-status').parent().css('display','block');
            }
          //  setTree();
          
            if(RunTag){   
            console.log('set title parent hit runtag ');           
                //Test Object name
                //Saved Object Tree Editor
                var opFirst='',opSecond='',opThird='';
                var opFirstText='',opSecondText='',opThirdText='';
                var i=0;
                $('.ObjectName h4 span.secName').each(function(){
                    if($(this).attr('id') != 'priName'){
                        i++;
                    }
                });
                
                console.log(' ObjectName names '+i);
            
                if(i==1){
                    $("#parentUlForm li").each(function(){
                        $(this).find('.formUlLabel').each(function(){
                            $(this).find('li').each(function(){
                                if($(this).hasClass('lbl') == false && $(this).hasClass('sortableForFieldsNew')){
                                    //$(this).remove();
                                }
                            });
                        });    
                    });
                    opFirstText=selectSecNameTextByIndex(0);
                    opFirst=selectSecNameIdByIndex(0);
                }
                if(i==2){
                    $("#parentUlForm li").each(function(){
                        $(this).find('.formUlLabel').each(function(){
                            $(this).find('li').each(function(){
                                if($(this).hasClass('lbl') == false && $(this).hasClass('sortableForFieldsNew')){
                                    //$(this).remove();
                                }
                            });
                        });    
                    });
                    opFirstText=selectSecNameTextByIndex(0);
                    opFirst=selectSecNameIdByIndex(0);
                    $("#parentUlForm li").each(function(){
                        $(this).find('.formUlLabel').each(function(){
                            $(this).find('li').each(function(){
                                if($(this).hasClass('lbl') == false && $(this).hasClass('sortableForFieldsThird')){
                                    //$(this).remove();
                                }
                            });
                        });    
                    });
                    opSecondText=selectSecNameTextByIndex(1);
                    opSecond=selectSecNameIdByIndex(1);
                }
                if(i==3){
                    $("#parentUlForm li").each(function(){
                        $(this).find('.formUlLabel').each(function(){
                            $(this).find('li').each(function(){
                                if($(this).hasClass('lbl') == false && $(this).hasClass('sortableForFieldsNew')){
                                    //$(this).remove();
                                }
                            });
                        });    
                    });
                    opFirstText=selectSecNameTextByIndex(0);             
                    opFirst=selectSecNameIdByIndex(0);
                    $("#parentUlForm li").each(function(){
                        $(this).find('.formUlLabel').each(function(){
                            $(this).find('li').each(function(){
                                if($(this).hasClass('lbl') == false && $(this).hasClass('sortableForFieldsThird')){
                                    //$(this).remove();
                                }
                            });
                        });    
                    });
                    opSecondText=selectSecNameTextByIndex(1);
                    opSecond=selectSecNameIdByIndex(1);
                    $("#parentUlForm li").each(function(){
                        $(this).find('.formUlLabel').each(function(){
                            $(this).find('li').each(function(){
                                if($(this).hasClass('lbl') == false && $(this).hasClass('sortableForFieldsFourth')){
                                    //$(this).remove();
                                }
                            });
                        });    
                    });
                    opThirdText=selectSecNameTextByIndex(2);
                    opThird=selectSecNameIdByIndex(2);
                }
            
                if(i>=0){            
                    console.log(opThird+'---'+opSecond+'----'+opFirst+'-----'+opThirdText+'----'+opSecondText+'-----'+opFirstText+' Element count > 3 '+isSecNameElemExistsByIndex(2));
                    //addRelatedObjectThird(opFirst,opSecond,opThird,fetchHiddenObjectValues());
                    addRelatedObjectThird(opThird,opSecond,opFirst,opThirdText,opSecondText,opFirstText,'{!JSENCODE(hiddenSelectedObjects)}');                      
                    //addRelatedObjectThird(opThird,opSecond,opFirst,'{!JSENCODE(hiddenSelectedObjects)}');  
                    
                    toggleFormSettingSection(false); /*added to populate related objects - Dec 10 2014*/ 
                    UnSaved();/*added to populate related objects - Dec 10 2014*/                    
                    hideSection();
                    RunTag=false;
                
                }
            
            }
            //setTimeout(function(){$('#ListFirst .availableHeaderDiv').click()}, 350); 
                      
        }
         function selectSecNameIdByIndex(senderCount){
           var idstr="";
           
          $(".ObjectName span.secName").each(function(index){
          if(index ==senderCount)
          {
          
          idstr =$(this).attr('id');
          }
          
          });
          return idstr;
         }
         function selectSecNameTextByIndex(senderCount){
          var idstr="";
           
          $(".ObjectName span.secName").each(function(index){
          if(index ==senderCount)
          {
          
          idstr =$(this).text();
          }
          
          });
          return idstr;
         }
         function selectSecNameHtmlByIndex(senderCount){
          var idstr="";
           
          $(".ObjectName span.secName").each(function(index){
          if(index ==senderCount)
          {
          
          idstr =$(this).html();
          }
          
          });
          return idstr;
         }
         function isSecNameElemExistsByIndex(senderCount){
          var isexists=false;
           
           if($(".ObjectName span.secName").length>senderCount)
           {
           isexists=true;
           }
          
          
          return isexists;
         }
          
         function resetAfterPrimaryObjectChange(){
              $('.secondary-object-block').each(function(i, secSelectBlock) {

                   $(secSelectBlock).find('.select2-container').remove();
              });
              reEnableHeaderSection();

         }
        function resetSelect(){
            $('.select2-container.dropFirst').remove();
            setTimeout(function(){
                callSeletedEditor();
                $('#levelFirst .scroll-parent').hide();
            },300);
            
            $('.select2-container.dropSecond').remove();
            setTimeout(function(){
                callSeletedSecondEditor();
                $('#levelSecond .scroll-parent').hide();
                $('#levelSecond').hide();
            },300);
            
            $('.select2-container.dropThird').remove();
            setTimeout(function(){
                callSeletedThirdEditor();
                $('#levelThird .scroll-parent').hide();
                $('#levelThird').hide();
            },300);
            $("#parentUlForm li").each(function(){
                $(this).find('.formUlLabel').each(function(){
                    $(this).find('li').each(function(){
                        if($(this).hasClass('lbl') == false){
                            $(this).remove();
                        }
                    });
                });    
            });
            
            var appString = '<h4 style="line-height:12.5px" class="disableColor"><span style="display:block"><i>Primary Object:</i>&nbsp;&nbsp;';
            appString +='<span  style="margin-bottom: 4px;display: inline-block;"  data-object="'+$("select.drop-selectEditor").select2("val")+'" class="'+$("select.drop-selectEditor").select2("val")+'" id="priName">'+$("select.drop-selectEditor").children(':selected').text()+'</span><br/>';
            appString +='</span>';
            appString +='</h4>';
            
         
                
           // $('.ObjectName').html('');
           // $('.ObjectName').html(appString);
            var opFirst='';
            var opSecond='';
            var opThird='';
            addRelatedObjectThird(opFirst,opSecond,opThird,'','','','');
            $('.change').removeClass('del');
            $('.del').removeClass('del'); 
            $('#tabList .button').removeClass('btnSaved');
            $("#FrmImg").attr("src", "{!URLFOR($Resource.iconImages,'Formexpand.png')}");
            
            $("#frmSetting").slideUp(300);
                        
            $('.editText').removeClass('disableColor');
            $('.form-editor-title-box').removeClass('va-disabled-items');
            $('.ObjectName').find('h4').removeClass('disableColor');
            $('.editText').val($('.FrmName').val());
            $('.frmSet').removeClass('disableColor');
            $("#FrmImg").addClass('curChange'); 
            $('#copy_textarea').removeClass('disableColor');
            $('.objectDiv').removeClass('disableColor');
            $('#clip_copy').removeClass('disableColor');
            $('.tooltips').removeClass('disableColor');
            $('.tooltips').find('img').attr('src','{!URLFOR($Resource.iconImages,'Copy-icon-Back.png')}');         
            hideSection();
            $('#ListFirst .objName').text($('#priName').text()+' Fields');            
        }
        function updatePrimary(){
            callSeletedEditor();
            callSeletedSecondEditor();
            callSeletedThirdEditor();
        }
       function setTree(){
            var i=0;
            var getObjectNameArr=$('.form-information .secName');
            i= getObjectNameArr.length;
             
            if(i==0){
                $('.ObjectName').css("background-image", "none");
            }
             if(i==1){
                $('.ObjectName').css("background-image", "url({!URLFOR($Resource.iconImages,'TreeEditorSingle.png')})");
                 $('#ListSecond').find('.objName').attr('id',$(getObjectNameArr[0]).attr('id'));
                    
                  $('#ListSecond').find('.objName').text($(getObjectNameArr[0]).text());
                 
            }
            if(i==2){
            var url='{!URLFOR($Resource.iconImages,'TreeEditorDouble.png')}';
                $('.ObjectName').css("background-image", "url("+url+")");
               
             $('#ListSecond').find('.objName').attr('id',$(getObjectNameArr[0]).attr('id'));
                 $('#ListThird').find('.objName').attr('id',$(getObjectNameArr[1]).attr('id'));
                    
                  $('#ListSecond').find('.objName').text($(getObjectNameArr[0]).text());
                 $('#ListThird').find('.objName').text($(getObjectNameArr[1]).text());
                  
                 
            }
            if(i==3){
                $('.ObjectName').css("background-image", "url({!URLFOR($Resource.iconImages,'TreeEditor.png')})");
                
                $('#ListSecond').find('.objName').attr('id',$(getObjectNameArr[0]).attr('id'));
                 $('#ListThird').find('.objName').attr('id',$(getObjectNameArr[1]).attr('id'));
                  $('#ListFourth').find('.objName').attr('id',$(getObjectNameArr[2]).attr('id'));
                  
                  $('#ListSecond').find('.objName').text($(getObjectNameArr[0]).text());
                 $('#ListThird').find('.objName').text($(getObjectNameArr[1]).text());
                  $('#ListFourth').find('.objName').text($(getObjectNameArr[2]).text());
            }
            
            
        }  
        function fillSelect(){
            var countObj=0;
             var tempSelectElementDiv=$('.tempSelectRelatedListCSS') ;
            $(tempSelectElementDiv).find('select.select-secondary-element > option').each(function() {  
                countObj++;
                if($(this).text() == '----Select Child Object----'){
                    return false;
                }  
            });
            var idx=0,newHtml='',newHtmlgrp='';
            var sec=0;
            $(tempSelectElementDiv).find('select.select-secondary-element > option').each(function() { 
                idx++;
                if(countObj > idx){
                  // console.log(' here in if  lookup select val -' + $(this).val());
                    if(idx != 1){
                        newHtml += '<option name="lookup" value="' + $(this).val() + '">' + $(this).text() + ' </option>';
                    }
                    //$(this).remove();
                }
                else{ 
              //  console.log(' here in if  detail select val -' + $(this).val());
                    sec++;
                    if(sec != 1){
                        newHtmlgrp += '<option class="childoption2" name="detail" value="' + $(this).val() + '">' + $(this).text() + ' </option>';
                    }
                   // $(this).remove();
                }
            });
               console.log(' here in select'+newHtml);
               console.log(' here in select'+newHtmlgrp);
            //First List Fill
            $('select.dropFirst').empty();
            $('select.dropFirst').append('<option value="">----Select Object----</option>');
            $('select.dropFirst').append('<optgroup class="LookupOption" label="Lookup Objects" >' + newHtml + '</optgroup>' );
            $('select.dropFirst').append('<optgroup class="ChildOption" label="Child Objects" >' + newHtmlgrp + '</optgroup>' );
            $("select.dropFirst").select2("val", null); 
                
            //Second List Fill
            $('select.dropSecond').empty();
            $('select.dropSecond').append('<option value="">----Select Object----</option>');
            $('select.dropSecond').append('<optgroup class="LookupOption" label="Lookup Objects" >' + newHtml + '</optgroup>' );
            $('select.dropSecond').append('<optgroup class="ChildOption" label="Child Objects" >' + newHtmlgrp + '</optgroup>' );
            $("select.dropSecond").select2("val", null);
                
            //Third List Fill
            $('select.dropThird').empty();
            $('select.dropThird').append('<option value="">----Select Object----</option>');
            $('select.dropThird').append('<optgroup class="LookupOption" label="Lookup Objects" >' + newHtml + '</optgroup>' );
            $('select.dropThird').append('<optgroup class="ChildOption" label="Child Objects" >' + newHtmlgrp + '</optgroup>' );
            $("select.dropThird").select2("val", null);
                
        }     
        
        function verifyPackage(chk){        
            <apex:outputText rendered="{!packageTier == 'Base'}">
                    showUpgradePrompt('Record updates are only available in Professional or Enterprise editions of Fast Forms.');                         
                    chk.checked = false;
            </apex:outputText>
            <apex:outputText rendered="{!packageTier != 'Base'}">
                    addLabel();
                    resetSavedButton();
            </apex:outputText>
        }
         function clearFieldInfoPopupContent(liElement){
         if(!$(liElement).find('.sfff-field-info').hasClass('display-none'))
         {
         $(liElement).find('.sfff-field-info').addClass('display-none');
         }
         
          $(liElement).find('.field-info-tooltip').find('.fi-tooltip-text-f').html('');
       $(liElement).find('.field-info-tooltip').find('.fi-tooltip-text-r').html('');
       $(liElement).find('.field-info-tooltip').find('.fi-tooltip-text-h').html('');
         }
       function generateFieldInfoPopupContent(liElement){       
           var elementid= getFormattedElemId(liElement);
           var liId=$(liElement).attr('id');
           var isFieldHidden=false;
            if($('#'+liId).find('label.ff-label').hasClass("grayLabel"))
           {
          
             $('#'+liId).find('.field-info-tooltip').find('.fi-tooltip-text-h').append('<span class="fi-letter-icon">H</span>Field set as hidden ');
           }
          
           $(liElement).find('.field-info-tooltip').find('.fi-tooltip-text-f').append('<span class="fi-letter-icon">F</span>Field: '+elementid+'');
          if(elementid!='undefined' && elementid!='' && ruleObjectsData.length>0)
          {
           
           var rulestr=isRuleExistForId(elementid);
           if(rulestr!='undefined' && rulestr!='')
           {
          
           $(liElement).find('.field-info-tooltip').find('.fi-tooltip-text-r').append('<span class="fi-letter-icon">R</span>Rule: '+rulestr+'');
           }
           }
           
       }
       function isRuleExistsForIdNotInuse(elementid)
       {
          var ruleexists=[];
          if(ruleObjectsData.length==0)
          {
         
          }
          
            var returnstr='';
           if(ruleObjectsData!='undefined' && ruleObjectsData.length>0)
           {
              $.each(ruleObjectsData, function(index, jsonitem) {
              if(jsonitem[index]!='undefined')
              {
                  var ruleorder=jsonitem[index].ruleorder;
                   console.log(' ruleOrder index '+jsonitem[index].ruleorder );
                   console.log('  Rule fields data length -' +jsonitem[index].rulefields);
                      $.each(jsonitem[index].rulefields, function(index2, jsonrulefields) {
                       if(jsonrulefields[index2]!='undefined' && jsonrulefields[index2]==elementid)
                      {
                      if($.inArray(ruleorder, ruleexists)==-1)
                      {
                        ruleexists.push(ruleorder);
                       }
                        console.log(' ruleOrder '+ruleorder +' for id '+elementid);
                      }
                    });
                }
                });
                }
                
             var str='';
             if(ruleexists!='undefined' && ruleexists.length>0)
             {
             str= ruleexists.join(",");
              }
            return   str;
       }
       function isRuleExistForId(elementid)
       {
       var ruleexists=[];
         
         
               var ruleindex;
               if(ruleObjectsData.length>0)
               {
                for (ruleindex = 0; ruleindex < ruleObjectsData.length; ruleindex++) {
                    var ruleobject= ruleObjectsData[ruleindex][0]; 
                    var ruleorder=ruleobject.ruleorder;
                    
                    var ruleFields=ruleobject.rulefields; 
                      var ruleitemindex;
                      for (ruleitemindex = 0; ruleitemindex < ruleFields.length; ruleitemindex++) {
                    
                         if(ruleFields[ruleitemindex].rulefield!='undefined' && ruleFields[ruleitemindex].rulefield==elementid)
                         { 
                         ruleexists.push(ruleorder);
                         if($.inArray(ruleorder, ruleexists)==-1)
                          {
                            ruleexists.push(ruleorder);
                           }
                         }
                     }
                  
                  }
                }
                
                 var str='';
             if(ruleexists!='undefined' && ruleexists.length>0)
             {
             str= ruleexists.join(",");
              }
            return   str;
       }
 
       function goToNextTourStop()
       {
          if ($(".joyride-tip-guide").length > 0)
            $("#takeTour").foundation('joyride','go_next');
       }       
 
    </script>
 
    <link rel="stylesheet" href="{!URLFOR($Resource.select2,'select2.css')}" />
    <script src="{!URLFOR($Resource.select2,'select2.js')}"></script>
    <script src="{!URLFOR($Resource.jScroll,'js/jScrollPane.js')}"></script>
 </head>
 
  <script>
  
    function showNotification(elemid, textmsg)
    {
        $('#' + elemid).fadeIn(250);
        $('#' + elemid).find('.msg-text-div').html(textmsg);
    }
    function hideNotification(elemid)
    {
        $('#' + elemid).find('.msg-text-div').html('');
        $('#' + elemid).fadeOut(250);
    }
    function closeNotification(elemid)
    {
    console.log('here');
        $(elemid).parent().find('.msg-text-div').html('');
        $(elemid).parent().hide();
    }
    /*Changes draft button on autosave*/
    function draftchanges(val) {
 $('.publish-draft').removeClass('va-disabled');
    if (val) {
     
        $('#draftSaveState').fadeIn('fast');
        $('#draftSaveState').find('.draft-text').text('Draft Saving');
        $('#draftSaveState').removeClass('draft-saved');
        $('#draftSaveState').addClass('draft-saving');
    
      
      
    }
    else {
     
        $('#draftSaveState').fadeIn('fast');
        $('#draftSaveState').find('.draft-text').text('Draft Saved');
        $('#draftSaveState').removeClass('draft-saving');
      $('#draftSaveState').addClass('draft-saved');
    
    }
  }
  

    var lstRuleFields;

    function getRemoteRuleFieldsJs() {
        /*JAVASCRIPT Remoting Method to populate Email draft configuration xml */
        var ffrecordid = '{!$CurrentPage.parameters.id}';
        Visualforce.remoting.Manager.invokeAction(
            '{!URLENCODE($RemoteAction.FormEditorController.getRemoteRuleFields)}',
            ffrecordid,
            function(result, event) {
                if(event.status) {
                    
                    var decoded = $('<div/>').html(result[0]).text();
                    
                     lstRuleFields = parseRuleXMLForJSON(decoded);
            
                    console.log(' Rule order ' + result[1]);
         
                } else if(event.type === 'exception') {
                    console.log(" Exception- " + event.message + "<br/>\n<pre>" + event.where + "</pre>");
                } else {
                    console.log(" Exception 2- " + event.message);
                }
            },
            {
                escape: true
            }
        );
    }
    function getRemoteRuleFieldsInfoJs() {
     ruleObjectsData=[];
        /*JAVASCRIPT Remoting Method to populate Email draft configuration xml */
        var ffrecordid = '{!$CurrentPage.parameters.id}';
        Visualforce.remoting.Manager.invokeAction(
            '{!URLENCODE($RemoteAction.FormEditorController.getRemoteRuleFieldsInfo)}',
            ffrecordid,
            function(result, event) {
                if(event.status) {
                    
                    var decoded = $('<div/>').html(result[0]).text();
                    
                     for(i=0;i<result.length;i+=2) {
    
                         var rulexml= $('<div/>').html(result[i]).text();
                         
                         var ruleorder= ''+result[i+1];
                         console.log(' RULEORDER -'+ruleorder);
                         var ruledt=parseRuleInfoInJSON(ruleorder,rulexml);
                         if(ruledt.length>0)
                         {
                         ruleObjectsData.push(ruledt);
                          }
                    }
                } else if(event.type === 'exception') {
                    console.log(" Exception- " + event.message + "<br/>\n<pre>" + event.where + "</pre>");
                } else {
                    console.log(" Exception 2- " + event.message);
                }
            },
            {
                escape: true
            }
        );
       
    }
   // getRemoteRuleFieldsJs();

    
    function parseRuleXMLForJSON(xmlstr)
    {
        if(window.DOMParser)
        {
            parser = new DOMParser();
            xmlDoc = parser.parseFromString(xmlstr, "text/xml");
        }
        else // Internet Explorer
        {
            xmlDoc = new ActiveXObject("Microsoft.XMLDOM");
            xmlDoc.async = false;
            xmlDoc.loadXML(xmlstr);
        }

        return returnRuleJson(xmlDoc.getElementsByTagName("rule"));        
    }  
    function parseRuleInfoInJSON(ruleorder,xmlstr)
    {
        if(window.DOMParser)
        {
            parser = new DOMParser();
            xmlDoc = parser.parseFromString(xmlstr, "text/xml");
        }
        else // Internet Explorer
        {
            xmlDoc = new ActiveXObject("Microsoft.XMLDOM");
            xmlDoc.async = false;
            xmlDoc.loadXML(xmlstr);
        }
return returnRuleJsonObjectInfo(ruleorder, xmlDoc.getElementsByTagName("rule"));

           
    }    

function returnRuleJson(elem)
    {
        var data=[];
        var returnstr = '';

         $.each(elem, function(index, fieldElement){  
            if(fieldElement.childNodes.length>0)
            {

              $.each(fieldElement.getElementsByTagName("operand1"), function(index, item){
                data.push($(item).text());
              });
              $.each(fieldElement.getElementsByTagName("operand2"), function(index, item){
                if ($(item).attr('isdynamic') == 'true')
                    data.push($(item).text());                
              });
              $.each(fieldElement.getElementsByTagName("target"), function(index, item){
                if ($(item).attr('isdynamic') == 'true')
                    data.push($(item).text());                
              });
            }
         });          
        return data;
    }

    function returnRuleJsonObjectInfo(ruleorder,rulexmlelem)
    {
        var ruledata=[];
        var returnstr = '';
var fieldData=[];
         $.each(rulexmlelem, function(index, fieldElement){  
            if(fieldElement.childNodes.length>0)
            {

              $.each(fieldElement.getElementsByTagName("operand1"), function(index, item){
                fieldData.push(createJSONRuleObjField($(item).text()));     
              });
              $.each(fieldElement.getElementsByTagName("operand2"), function(index, item){
                if ($(item).attr('isdynamic') == 'true')
                   fieldData.push(createJSONRuleObjField($(item).text()));                  
              });
              $.each(fieldElement.getElementsByTagName("target"), function(index, item){
                if ($(item).attr('isdynamic') == 'true')
                    fieldData.push(createJSONRuleObjField($(item).text()));                
              });
              
              
            }
         }); 
         if(fieldData.length>0)
              {
              console.log('fieldData.length>0 ');
                 ruledata.push(createJSONRuleObj(ruleorder,fieldData));    
              }         
        return ruledata;
    }
    function createJSONRuleObj(ruleorder, rulexml) {
    
    var dataobj = { "ruleorder":ruleorder , "rulefields": rulexml };


    return dataobj;
}
function createJSONRuleObjField( rulefield) {
    var dataobj = { "rulefield":rulefield };


    return dataobj;
}
    function  toggleToFormEditor()
    {
    $('.sfff-editor-tabs .sfff-editor-tab').each(function(i, tabli) {
     $(tabli).removeClass('fade');
     $(tabli).removeClass('active');
    });
    $('.sfff-form-editor-content').removeClass('fade');
    $('.sfff-form-editor-content').removeClass('active');
    $('.sfff-rule-editor-content').removeClass('fade');
    $('.sfff-rule-editor-content').removeClass('active');
 
      
           // getRemoteRuleFieldsJs();
            getRemoteRuleFieldsInfoJs();
            
            setHover();
            $('#formEditorA').parents('.sfff-form-editor-li').addClass('active');
            $('#sfff-rule-editor').hide();             
            $('#sfff-form-editor').addClass('active');
            $('#sfff-form-editor').show();
             CallUnloadRuleEditor();
    }
    function toggleTab(elem){
        if ($(elem).attr('id') == 'formEditorA'){
            CallUnloadRuleEditor();
          //  getRemoteRuleFieldsJs();
          getRemoteRuleFieldsInfoJs();
            
            setHover();
            $('#sfff-rule-editor').hide();
            $('#sfff-form-editor').show();
        } else {     
            $('#sfff-rule-editor').show();
            $('#sfff-form-editor').hide();                    
            isChangesMadeInForm = true;
            autosaveTriggered();
           
            <apex:outputText rendered="{!packageTier != 'Base'}">
            callLoadRuleEditor();
            </apex:outputText>
           // resetSelect2();        
        }
    }
    function callLoadRuleEditor()
    {
    console.log('loadRuleEditorCall ');
    showMainRuleRepeater(false);
       loadRuleEditorCall(true);
    }
    function rerenderRuleEditorCall()
    {
     rerenderRuleEditor();
    }
    function CallUnloadRuleEditor()
    {
        console.log(' CallUnloadRuleEditor ');
unloadRuleEditorCall(false);
    }
    function showMainRuleRepeater(showRulediv)
{
  if(showRulediv)
      {
        console.log(' Show '+showRulediv);
        $('.ruleEditorWrapperCSS').show();

      }
      else
      {
        console.log(' HIDE '+showRulediv);
          $('.ruleEditorWrapperCSS').hide();
      }

 }

  </script>

    <ol data-joyride="data-joyride" id="takeTour" style="display:none">
      <li data-id="parentUlForm" data-options="tip_location:top">Welcome to the Fast Forms Form Editor. Here is where you select and organize the fields you want to make available in your form. <br /><br />To add fields to your form, simply click and drag any field from the menus to the right and drag it into your form below.<br /><br />You can pick from any of your form's primary or related object fields to add to your form.<br /><br /></li>        
      <li data-id="0sortableForLabelli" data-options="tip_location:right">Each of your form's fields and sections comes with a number of options available to you. To see these options, simply hover over the field or section, then click on the arrow to the right.<br /><br /></li>        
      <li data-id="FormatToolbar" data-options="tip_location:right;">Here we can select from a number of options for customizing our fields or sections. For sections, we can modify the label and set it to hidden by default. For fields, we can customize the field's label, set options such as read-only or required, add a default value, and customize the error message if a value is not provided by the user. <br /><br />Once we're done customizing our field and section options, we can close the drawer by clicking on the arrow icon above again.<br /><br /></li>   
      <li data-id="generalFieldBox" data-options="tip_location:top">Fast Forms also allows you to add other types of fields that are not associated to your form's objects, called <i>General Fields</i>.<br /><br />Click the arrow next to 'General Fields' to see the fields available to you.<br /><br /></li>         
      <li data-id="generalFieldBox" data-options="tip_location:top">Some of the fields available to you here include a Captcha field, which prevents spam from being submitted to your form, a Text field which allows you to add custom text anywhere in your form, and a File Upload field, which allows you to accept file uploads for your form submissions.<br /><br /></li>
      <li data-id="btnSaved" data-options="tip_location:top;next_button:false;">Ready to share your form with the world? Simply click the 'Publish Draft' button to see some of the Publishing Options available to you.<br /></li>                
    </ol> 

 <!--  Processing And Success dialog Start   -->
 <div id="dialogSucess" title="Processing" style="display:none;margin-top:18px">
    <div id="Processing" class="dialogFont">
        <br/>
        <br/><br/>
        <span>Please wait...</span>
        <span><img style="vertical-align: middle;" src="{!engineUrl}/styles/images/ajax-loader.gif"/></span>      
    </div>
    <div id="success" style="display:none;">
        <br/><br/><br/><img id="sucessImg" src="{!URLFOR($Resource.jquery_dialog,'jquery_dialog/images/success.png')}" style="vertical-align:middle;"/>
        <b>Your request successfully sent to server.</b>
         
    </div>
    <div id="failure" style="display:none;" class="dialogFont">
        <center>
        <span>There was an issue processing your request. <br />Please contact customer service for details.</span> <br />
        <input type="button" value="OK" class=".ui-dialog .ui-dialog-buttonpane button" style="margin-top:20px;font-size: 15px;font-weight: normal !important;" onClick="errorSave();return false;"/></center>       
    </div>    
 </div>
 <!-- Processing And Success dialog End-->
 <!-- Preivew dialog Start-->
 <div id="previewDialog" title="Preview" style="display:none;" class="contentPreview"> 
 </div>
   <div id="preview" class="preview">
  </div>
 <!-- Preivew  dialog End-->
 <!-- SaveFormInfo dialog Start-->
 <div id="SaveFormInfoDialog" title="Preview" style="display:none;" class="content"> 
 </div>
 
 <apex:form id="frm">
 
 


      <apex:outputPanel id="msgPanel">
          <apex:pageMessages ></apex:pageMessages>
      </apex:outputPanel>
      
     
      
           
      <apex:actionFunction immediate="true" name="addRelatedObjectThird" action="{!addRelatedObjectThird}" reRender="pnlForFieldsRepeat,msgPanel,valRender" status="status" oncomplete="resetSortable();createHtml();hideSection();listHideRenderDiv();">
             <apex:param assignTo="{!sobjectNameListThird}" name="sNameThirdLast" value=""/>
             <apex:param assignTo="{!sobjectNameListSecond}" name="sNameSecondLast" value=""/>
             <apex:param assignTo="{!sobjectNameListFirst}" name="sNameFirstLast" value=""/>
             <apex:param assignTo="{!sobjectNameThird}" name="sNameThirdName" value=""/>
             <apex:param assignTo="{!sobjectNameSecond}" name="sNameSecondName" value=""/>
             <apex:param assignTo="{!sobjectNameFirst}" name="sNameFirstName" value=""/>
              <apex:param assignTo="{!hiddenSelectedObjects}" name="hiddenSelectedObjects" value=""/>
      </apex:actionFunction>
      
      <apex:actionFunction immediate="true" name="saveChanges" action="{!saveFormSettingChanges}" reRender="formObjectConfigPanel,pnlForFieldsRepeat,msgPanel,valRender,formTitleO,formnameeditPanel,formbreadcrumbTitleO" status="status" oncomplete="toggleToFormEditor();resetSortable();createHtml();hideSection();listHideRenderDiv();">
             <apex:param assignTo="{!sobjectNameListThird}" name="sNameThirdLast" value=""/>
             <apex:param assignTo="{!sobjectNameListSecond}" name="sNameSecondLast" value=""/>
             <apex:param assignTo="{!sobjectNameListFirst}" name="sNameFirstLast" value=""/>
             <apex:param assignTo="{!sobjectNameThird}" name="sNameThirdName" value=""/>
             <apex:param assignTo="{!sobjectNameSecond}" name="sNameSecondName" value=""/>
             <apex:param assignTo="{!sobjectNameFirst}" name="sNameFirstName" value=""/>
              <apex:param assignTo="{!hiddenSelectedObjects}" name="hiddenSelectedObjects" value=""/>
               <apex:param assignTo="{!formName}" name="fname" value="fname"/> 
               <apex:param assignTo="{!TrackingEnabled}" name="trackingenabledparam" value=""/>
<apex:param assignTo="{!EmailNotificationEnabled}" name="emailnotificationenabledparam" value=""/> 
                <apex:param assignTo="{!EmailToNotify}" name="emailnotificationparam" value=""/>               
      </apex:actionFunction>
      
      <apex:actionFunction immediate="true" name="addRelatedObjectPrimary" action="{!addRelatedObjectThird}" reRender="pnlForFieldsRepeat,msgPanel" status="status" oncomplete="resetSortable();createHtml();hideSection();listHideRenderDiv();updatePrimary();">
             <apex:param assignTo="{!sobjectNameListThird}" name="sNameThirdLastPrimary" value="sNameThirdLastPrimary"/>
             <apex:param assignTo="{!sobjectNameListSecond}" name="sNameSecondLastPrimary" value="sNameSecondLastPrimary"/>
             <apex:param assignTo="{!sobjectNameListFirst}" name="sNameFirstLastPrimary" value="sNameFirstLastPrimary"/>
      </apex:actionFunction>
      
      
      <apex:actionFunction immediate="true"   name="loadRuleEditorCall" action="{!loadRuleEditorComponent}" reRender="msgPanel,ruleEditorWrapper" status="statusLoad" oncomplete="rerenderRuleEditorCall();">
             <apex:param name="toggleRule" value="true"/>
              
      </apex:actionFunction>
      <apex:actionFunction immediate="true"  name="unloadRuleEditorCall" action="{!loadRuleEditorComponent}" reRender="msgPanel,ruleEditorWrapper" status="status" oncomplete="">
             <apex:param name="toggleRule" value="false"/>
              
      </apex:actionFunction>
      
      <apex:actionFunction immediate="true" name="changePrimaryObject" action="{!changePrimaryObject}" reRender="formObjectConfigPanel,tempSelectRelatedList,pnlForFieldsRepeat,msgPanel,dropSelectFirst,dropSelectSecond,dropSelectThird,formTitleO,formnameeditPanel,formbreadcrumbTitleO" status="status" oncomplete="toggleToFormEditor();resetSelect();">
             <apex:param assignTo="{!sobjectName}" name="sNamesobjectName" value="sNamesobjectName"/>
              <apex:param assignTo="{!formName}" name="fname" value="fname"/> 
               <apex:param assignTo="{!TrackingEnabled}" name="trackingenabledparam" value=""/> 
               <apex:param assignTo="{!EmailNotificationEnabled}" name="emailnotificationenabledparam" value=""/>
                 <apex:param assignTo="{!EmailToNotify}" name="emailnotificationparam" value=""/> 
      </apex:actionFunction>
     
      
      <apex:actionFunction name="RelatedObjectEditor" action="{!RelatedObject}" reRender="dropSelectFirst,valRender" status="status" oncomplete="callSeletedEditor();return false;"/>
      <apex:actionFunction name="RelatedObjectEditorSecond" action="{!RelatedObject}" reRender="dropSelectSecond,valRender" status="status" oncomplete="callSeletedSecondEditor();return false;"/>
      <apex:actionFunction name="RelatedObjectEditorThird" action="{!RelatedObject}" reRender="dropSelectThird,valRender" status="status" oncomplete="callSeletedThirdEditor();return false;"/>
      
       <apex:actionFunction name="CallFirstRelatedObjectEditor" action="{!RelatedObject}" reRender="tempSelectRelatedList,dropSelectFirst,valRender" status="status" oncomplete="callSeletedEditor();CallRelatedObjectEditorIfNeeded(1);"/>
      <apex:actionFunction name="CallSecondRelatedObjectEditor" action="{!RelatedObject}" reRender="dropSelectSecond,valRender" status="status" oncomplete="callSeletedSecondEditor();CallRelatedObjectEditorIfNeeded(2);"/>
      <apex:actionFunction name="CallThirdRelatedObjectEditor" action="{!RelatedObject}" reRender="dropSelectThird,valRender" status="status" oncomplete="callSeletedThirdEditor();return false;"/>
      
      
      <apex:actionFunction name="saveMessage" action="{!saveMessage}" reRender="hidePopupPanel"/>
       
      <!--  to save form name from form setting when hit save changes -balinder nov 26 2014 -->
     <apex:actionFunction immediate="true" name="saveEditFormName" action="{!saveEditText}" reRender="validationMsgs,formTitleO,formnameeditPanel"   >
          <apex:param assignTo="{!formName}" name="fname" value="fname"/>  
           </apex:actionFunction>  
 <apex:actionFunction immediate="true" name="updateTrackSubmissionsOption" action="{!updateTrackSubmissionsOption}" reRender="validationMsgs,trackingEnabledPanel"   >
          <apex:param assignTo="{!TrackingEnabled}" name="trackingenabledparam" value="trackingenabledparam"/>  
           </apex:actionFunction> 
           
      
      <apex:actionFunction name="changeFields" action="{!changeFields}" reRender="tempSelectRelatedList,pnlForFieldsRepeat,pnlForLabelRepeat" status="status" oncomplete="deleteDuplicateLi();resetSortable();toggleSet();">
      </apex:actionFunction>
      <apex:actionFunction name="retrieveHtmlService" action="{!retrieveHtmlService}" reRender="pnelSelectedTemplate,pnelSobjectField,pnlLastSaved,pnlOutputUrl" status="status" oncomplete="retrieveHtmlServiceComplete();"/>
      <apex:actionFunction immediate="true" name="callSave" action="{!save}" reRender="pnelSelectedTemplate,pnelSobjectField,pnlLastSaved,pnlOutputUrl"  oncomplete="showPublishResponse();sendComplete();">
             <apex:param assignTo="{!sobjectNameFirst}" name="sObjNameFirstLast" value="sNameFirstLast"/>
             <apex:param assignTo="{!sobjectNameSecond}" name="sObjNameSecondLast" value="sNameSecondLast"/>
             <apex:param assignTo="{!sobjectNameThird}" name="sObjNameThirdLast" value="sNameThirdLast"/>
              <apex:param assignTo="{!sobjectNameListFirst}" name="sNameFirstLast" value="sNameFirstLast"/>
             <apex:param assignTo="{!sobjectNameListSecond}" name="sNameSecondLast" value="sNameSecondLast"/>
               <apex:param assignTo="{!sobjectNameListThird}" name="sNameThirdLast" value="sNameThirdLast"/>
             <apex:param assignTo="{!fieldsXml}" name="sObjfieldsXml" value="sObjfieldsXml"/>
             <apex:param assignTo="{!fieldsObjectXml}" name="sObjfieldsObjectXml" value="sObjfieldsObjectXml"/>
             <apex:param assignTo="{!finalResultHtml}" name="sObjfinalResultHtml" value="sObjfinalResultHtml"/>
             <apex:param assignTo="{!hiddenCkEditorValue}" name="sObjhiddenCkEditorValue" value="sObjhiddenCkEditorValue"/>
                <apex:param assignTo="{!hiddenSelectedObjects}" name="hiddenSelectedObjects" value="hiddenSelectedObjects"/>
      </apex:actionFunction>
      <apex:actionFunction immediate="true" name="callAutosave" action="{!autoSave}" reRender="" status="draftChangesStatus" oncomplete="draftchanges(false);">
             <apex:param assignTo="{!sobjectNameFirst}" name="sObjNameFirstLast" value="sNameFirstLast"/>
             <apex:param assignTo="{!sobjectNameSecond}" name="sObjNameSecondLast" value="sNameSecondLast"/>
             <apex:param assignTo="{!sobjectNameThird}" name="sObjNameThirdLast" value="sNameThirdLast"/>
              <apex:param assignTo="{!sobjectNameListFirst}" name="sNameFirstLast" value="sNameFirstLast"/>
             <apex:param assignTo="{!sobjectNameListSecond}" name="sNameSecondLast" value="sNameSecondLast"/>
               <apex:param assignTo="{!sobjectNameListThird}" name="sNameThirdLast" value="sNameThirdLast"/>
             <apex:param assignTo="{!fieldsXml}" name="sObjfieldsXml" value="sObjfieldsXml"/>
             <apex:param assignTo="{!fieldsObjectXml}" name="sObjfieldsObjectXml" value="sObjfieldsObjectXml"/>
             <apex:param assignTo="{!finalResultHtml}" name="sObjfinalResultHtml" value="sObjfinalResultHtml"/>
             <apex:param assignTo="{!hiddenCkEditorValue}" name="sObjhiddenCkEditorValue" value="sObjhiddenCkEditorValue"/>
                <apex:param assignTo="{!hiddenSelectedObjects}" name="hiddenSelectedObjects" value="hiddenSelectedObjects"/>
      </apex:actionFunction>  

          <apex:actionStatus id="draftChangesStatus" onstart="draftchanges(true);" onstop="draftchanges(false);" />
     <!--- Label  Dialog  -->
         <div id="dialog" title="New Label" style="display:none;">            
            
            <table width="100%" border="0" cellspacing="0" id="tblForRequirdBlock" style="margin-top: 10px;overflow: hidden;float:left;">
                <tr id="trForSectionInformation"  class="sectionTd">
                    <td   class="formatEdit">
                     <label class="sectionLbl" style="max-width:217px;padding-left:0px;color: #616161;font-size:14px;" >Hide Section:</label>
                       </td>
                    <td class="formatEditCol2">
                     <input class="css-checkbox" id="chkhideSectionField" type="checkbox" /><label class="css-label"  onclick="chkhideSection(this);"  for="chkhideSectionField"></label>
                    </td>
                 </tr>
                <tr id="trForDefaultValue" class="fieldTd">
                    <td id="defaultDiv" width="36.5%" class="formatEdit">                    
                    <label  style="padding-left:0px">Default value:</label>
                    
                    </td>
                    <td class="formatEditCol2"><input type="text" id="defaultValue"/>
                    </td>
                </tr>
                <tr id="trForHideField" class="fieldTd">
                    <td  class="formatEdit"><label  style="padding-left:0px" id="lblHideField">Hide field:</label>
                    </td>
                    <td class="formatEditCol2"><input type="checkbox" class="css-checkbox" id="hideField" onchange="checkHide(this);" /><label for="hideField" class="css-label"></label>
                    </td>
                </tr> 
                <tr id="trForReadOnlyField" class="fieldTd">
                    <td  class="formatEdit"><label  style="padding-left:0px" id="lblreadOnlyField">Read-only:</label>
                    </td>
                    <td class="formatEditCol2"> <input type="checkbox" class="css-checkbox" id="readOnlyField" onchange="checkReadOnly(this);"/><label for="readOnlyField" class="css-label"></label>
                    </td>
                </tr> 
                <tr id="trForUpsertField" class="fieldTd">
                    <td class="formatEdit"><label  style="padding-left:0px" id="lblHideField">Update existing Salesforce record matching this field value:</label>
                    </td>
                    <td class="formatEditCol2">
                    <input type="checkbox" class="css-checkbox" id="upsertField" onchange="verifyPackage(this);"/><label for="upsertField"  class="css-label"></label>
                    <a class="help-icon blue-tooltip"    >
                        <span class="blue-tooltip-text -mt90 -ml40">Check this box if you want to update an existing record that matches the value provided in this field. If a matching record is found, the record will get updated with the submitted information.</span>
                        <span class="draft-text"> <img style="margin-left:0px; float:inherit; margin-top:3px;" class="helpIconCode" height="20px" src="{!URLFOR($Resource.alpha,'blank.png')}"/></span>
                    </a>                      
                    </td>
                </tr>                          
                <tr id="trForLimitField" class="fieldTd">
                    <td  class="formatEdit"><label  style="padding-left:0px" id="lblLimitField">File upload limit:</label>
                    </td>
                    <td class="formatEditCol2"><input type="text" id="limitValue" onkeypress="return checkInput(event);" maxlength="2" onblur="checkRegInput();" onchange="addLabel();resetSavedButton();"/>
                    </td>
                </tr>
                <tr id="trForFileField" class="fieldTd">
                    <td  class="formatEdit"><label  style="padding-left:0px" id="lblAllowField">Allowed file types:</label>
                    </td>
                    <td class="formatEditCol2">
                        <input type="hidden" id="selectedfiletypes"/>
                            <div onclick="fancydropdowntoggle(this);"  class="fancyheader" >
                            <span style="display:inline-block;width:88%">All</span>
                            <img class="ExCol" src="{!URLFOR($Resource.iconImages,'SelectArrowDown.png')}" style="float:right;"/>
                            </div>
                            <div class="fancydropdown" style="clear:both;display:none;">
                                <input type="checkbox" id="imgType" value=".jpg,.png,.gif" class="css-checkbox flChk"/><label for="imgType" class="css-label" style="font-size:11px;">Image File (.jpg, .png, .gif)</label>
                                <input type="checkbox" id="docType" value=".doc,.docx" class="css-checkbox flChk"/><label for="docType" class="css-label" style="font-size:11px;">Word document (.doc, .docx)</label>
                                <input type="checkbox" id="xlsType" value=".xls,.xlsx,.csv" class="css-checkbox flChk"/><label for="xlsType" class="css-label" style="font-size:11px;">Excel spreadsheet (.xls, .xlsx, .csv)</label>
                                <input type="checkbox" id="pdfType" value=".pdf" class="css-checkbox flChk"/><label for="pdfType" class="css-label" style="font-size:11px;">Adobe Acrobat file (.pdf)</label>
                                <input type="checkbox" id="zipType" value=".zip" class="css-checkbox flChk"/><label for="zipType" class="css-label" style="font-size:11px;">Archive file (.zip)</label>
                                <input type="checkbox" id="multiType" value=".wmv,.mp3,.mp4,.avi" class="css-checkbox flChk"/><label for="multiType" class="css-label" style="font-size:11px;"> Media file (.wmv, .mp3, .mp4, .avi)</label><br/>
                            </div>                            
                            <div class="fancydropdownbottom" style="background-color:#f7f7f7;display:none;text-align:left;padding-left: 14px;">
                            Add Custom 
                            <br/>
                            <input type="text" id="customfltype" onchange="addLabel();resetSavedButton();" style="width:180px"/>
                            <br /><div class="txtInstruct">e.g. .abc, .def</div>
                            </div>
                    </td>
                </tr>
                  <tr id="trForUploadToChatterField"  class="fieldTd">
                    <td  class="formatEdit"><label style="padding-left:0px">Upload To Chatter:</label>            
                    </td>
                    <td class="formatEditCol2"><input type="checkbox" id="chkUploadToChatter" class="css-checkbox" onchange="checkUploadToChatter(this);"/><label for="chkUploadToChatter" class="css-label"></label>
  
            <a class="help-icon blue-tooltip"    >
                <span class="blue-tooltip-text -mt68 -ml40">Check this box to have files uploaded to your form stored as Chatter files instead of standard Notes and Attachments files.</span>
                <span class="draft-text"> <img style="margin-left:0px; float:inherit; margin-top:3px;" class="helpIconCode" height="20px" src="{!URLFOR($Resource.alpha,'blank.png')}"/></span>
            </a>                        
                        
                                         
                    </td>
                </tr>
                <tr class="fieldTd">
                    <td  class="formatEdit"><label style="padding-left:0px">Required:</label>            
                    </td>
                    <td class="formatEditCol2"><input type="checkbox" id="requiredChk" class="css-checkbox" onchange="checkReq(this);"/><label for="requiredChk" class="css-label"></label>
                    </td>
                </tr>
                <tr id="trForMsgField" class="fieldTd" style="display:none;">
                    <td  class="formatEdit"><label style="padding-left:0px" id="lblErrMsgForRequiredField">Error message to be shown<br />if they don&#39;t provide a value:</label>
                    </td>
                    <td class="formatEditCol2"><input type="text" id="errMsgForRequiredField" onchange="addLabel();resetSavedButton();"/>
                    </td>
                </tr>
             </table>
             <div style="float:right;margin-right: 24px;cursor: pointer;margin-top: -47px;"><img class="arrowUp" src="{!URLFOR($Resource.select2,'left_arrow.png')}" /></div>
            <br/>
           <input type="hidden" id="hiddenLiId"/>
           <input type="hidden" id="hiddenLiLabelId"/>
        </div>
    <!--- Label Dialog End -->
        
     <!--- Button  Dialog  -->
         <div id="buttonDialog" title="New Button" style="display:none;">
            <br/><br/>
            
            <table cellspacing="20px" cellpadding="0" width="100%" style="margin-left:-2%;background-color:#e6ecef;">
                <tr>
                    <td width="36%" style="padding-left: 0px;font-family: 'Open Sans', 'sans-serif';"><label   >Button text:</label>
                    </td>
                    <td><input type="text" id="btnTxt" onFocus="removeError(this);" style="margin-left:0.6%;" onchange="resetSavedButton();"/></td>
                </tr>
                <tr>
                    <td style="padding-left: 0px;font-family: 'Open Sans', 'sans-serif';"><label   >Footnote:</label></td>
                    <td><input style="margin-left:0.6%;"  type="text" id="btnFootnote" value="* Required" onchange="resetSavedButton();"/></td>
                </tr>
                <!-- tdForNotification Section -->
                <tr style="display:none;">
                    <td style="padding-left: 0px;font-family: 'Open Sans', 'sans-serif';" ><h2 style="margin-right:25px;color:black;">Submit behaviour:</h2>
                    </td>
                    <td><select id="submitBehaviorOptions" style="margin-left:0.6%;">
                            <option value="Display a message">Display a message</option>
                            <option value="Redirect Link">Redirect to a page</option>
                        </select>
                        
                    </td>
                </tr>
                <tr id="trBtnUrl">
                    <td style="padding-left: 0px;font-family: 'Open Sans', 'sans-serif';"><label>Redirect URL:</label>
                    <br/><div style="font-size:12px;font-weight:normal;">Redirects the user to this link after they submit their form</div>
                    </td>
                    <td><input type="text" id="btnUrl" style="margin-left:0.6%;float:left;" onchange="addLabel();resetSavedButton();"/>
                        <div style="float:left;margin-left:18px;" >
                            <a class="tooltip" href="#"><img style="margin-top: 7px;float:left;margin-left:3px;" class="helpIconCode"  height="25px" src="{!URLFOR($Resource.alpha,'blank.png')}"/><span><h6>This option will redirect the person filling out the form to another website after they submit their form</h6></span></a>
                        </div>
                        
                    </td>
                </tr>
                <tr id="trBtnMessage">
                    <td style="padding-left: 0px;font-family: 'Open Sans', 'sans-serif';"><label   vatt="PHONE">Thank you message:</label>
                    <br/><div style="font-size:12px;font-weight:normal;">This message will be shown to the user in a pop-up window after they submit their form</div>
                    </td>
                    <td>
                        <textarea id="BtnMessage" style="margin-left:0.6%;" onchange="addLabel();resetSavedButton();">Thank you for your submission!</textarea>
                    </td>
                </tr>
                <tr style="display:none">
                    <td colspan="2">
                        <center><input  id="saveBtn"  class="buttonClassMerge" type="button" value="Save" onclick="$('#saveBtn').parent().parent().parent().parent().parent().parent().parent().find('.editImg').click();return false;" />
                         </center>
                         <input type="hidden" id="hiddenLiButtonId"/>
                    </td>
                </tr>
            </table>
            <div style="float:right;margin-right: 8px;cursor: pointer;margin-top: -47px;"><img class="arrowbtnUp" src="{!URLFOR($Resource.select2,'left_arrow.png')}" /></div>
            <br/>
        </div>
          <apex:pageMessages id="validationMsgs" /> 
   <apex:pageMessages ></apex:pageMessages>
          <apex:actionStatus id="status">
                <apex:facet name="start">
                 <div id="load-status" > 
                    <div class="overlay"></div>
                        <div class="status">
                            <div class='dialogHeader'><div class='dialogIcon dialogIconWait'>&nbsp;</div></div><div class='dialogFont'><div class="primary">Loading, please wait...<br /><br /><br /></div></div>
                        </div>
                  </div>
               </apex:facet>
        </apex:actionStatus>
   <div Class="pbFields" style="display:none;">
   <apex:pageBlock id="pb" >     
         <apex:pageBlockSection columns="2">
              <apex:pageBlockSectionItem >
                  <apex:outputLabel value="Select Template"></apex:outputLabel>
                  <apex:outputPanel id="pnelSelectedTemplate">
                      <apex:selectList id="selectedPreFormID" styleClass="selValue" value="{!selectedPreFormID}" onchange="callRetrieveHtmlService();return false;"  multiselect="false" size="1">
                          <apex:selectOptions value="{!PreviousForms}"></apex:selectOptions> 
                      </apex:selectList>                     
                  </apex:outputPanel>
                  
              </apex:pageBlockSectionItem>
             
              <apex:outputLabel ></apex:outputLabel>
             <apex:pageBlockSectionItem >                 
                     <apex:outputLabel value="Select Object" styleClass=""></apex:outputLabel>
                     <apex:outputpanel id="pnelSobjectField">   
                         <apex:selectList styleClass="objectType" id="mergeTypeSelect" value="{!sobjectName}" onchange="changeFields(); return false;" multiselect="false" size="1">
                              <apex:selectOptions value="{!sobjectList}"></apex:selectOptions> 
                         </apex:selectList>
                         <apex:inputhidden value="{!hiddenCkEditorValue}" id="hiddenCkEditorValue" />
                         <apex:inputhidden value="{!finalResultHtml}" id="finalResultHtml" />
                         <apex:inputhidden value="{!fieldsXml}" id="fieldsXml" />
                         <apex:inputhidden value="{!fieldsObjectXml}" id="fieldsObjectXml" />
                         <apex:inputhidden value="{!is500InternalError}" id="is500InternalError" />
                     </apex:outputpanel>
              </apex:pageBlockSectionItem>
              <apex:outputLabel />
              <apex:pageBlockSectionItem >
                  <apex:outputLabel value="Form Name" styleClass="formName" ></apex:outputLabel>
                  <apex:outputPanel >
                  <div class="requiredInput">
                      <div class="requiredBlock"></div>
                      <apex:inputtext value="{!formName}" styleClass="formName" id="formName"/>
                  </div>
                  </apex:outputPanel>
              </apex:pageBlockSectionItem>
              <apex:outputLabel ></apex:outputLabel>             
              <apex:outputLabel />

         </apex:pageBlockSection>
         <br/><br/>
         
     </apex:pageBlock>
     </div>
     <!---New Form & Embed Code,Privew,Save & publish-->

      
      <c:TrialExpiryComponent id="trialExpCp" />
       <div class="mainHeader">
          <div class="mainHeaderInner">
        <div style=" ">
   
           <div class="bread-crumb"  >
             <div class="bread-crumb navbar">
                <div class="navbar-inner">
                    <div class="navcontainer">
                        <ul class="nav-wizard">
                            <li  >
                                <a id="breadcrumb-dashboard" href="{!$Site.BaseUrl}FormMenu">Dashboard</a>
                            </li>
                           
                                    <li class="li-arrow-seperator"></li>
                             <li class="active">
                                <span  id="breadcrumb-formeditor" style="padding: 0px 0px 0px 20px;"  >
                                <apex:outputPanel id="formbreadcrumbTitleO"  >
                              {!TruncatedFormName} 
                              </apex:outputPanel></span>
                            </li>
                        </ul>
                    </div>
                </div>
            </div>
             </div>
        
        </div>
            <div style="float: right;"><img src="{!URLFOR($Resource.logos,'color_logo.png')}" />
            </div>     
            
            <div class="help-text-r"><a target="_blank" href="http://visualantidote.com/sfffdocumentation" ><img src="{!URLFOR($Resource.helptext_image)}" /></a>
            </div>                        
        </div>
                                 
        
     </div>
     
      
        <apex:outputPanel id="editTextDiv" style="background-color:white;">
         
                <div  id="headerPanel"  class="form-information-wrapper-outer ">
                      <div class="form-information-wrapper grey-left-border10"> 
                        <apex:outputPanel id="formInformationPanel" layout="block"   styleClass="form-information">   
                              <apex:outputPanel id="formTitleO"  >
                              <h1  id="formTitle"  >{!form.Name}</h1>
                              </apex:outputPanel>
                             <apex:outputPanel id="formObjectConfigPanel" layout="block"   styleClass="ObjectName" style="margin-top:-1%;">
                                 
                                  <h4 style="line-height:12.5px">
                                  <span style="display:block">
                                  <i>Primary Object:</i>&nbsp;&nbsp;<span data-object="{!form.Object_Name__c}" class="{!form.Object_Name__c}" id="priName" style="margin-bottom: 4px;display: inline-block;">{!primaryObjectLabelMap[form.Object_Name__c]}</span> 
                                  </span>  <apex:repeat value="{!relatedObjectInfoList}"  var="f">
                                       <img src="{!URLFOR($Resource.iconImages,'TreeEditorSingle.png')}" style="margin-left: 113px;margin-top:-6px;float:left;clear:left"/>
                                       <span class="secName" style="float:left;clear:right;margin-top:4px;" id="{!f.CodeName}">{!f.DisplayName}</span> 
                                    </apex:repeat>
                                  </h4>
                            </apex:outputPanel>
                         </apex:outputPanel>
                        
                        
                        <div class="form-editor-title-box">
            <div class="form-actions publish-actions">
            <div class="action-icons-left">
            <span style="display:none" class="button-draft draft-event draft-mode blue-tooltip"    >
            <span class="blue-tooltip-text -mt40 -ml40">This form has changes that have not been published yet</span>
            <span class="draft-text">Draft</span>
            
             
             <apex:commandLink immediate="true" styleClass="delete-icon" action="{!doDiscardDraft}" value="" id="btnDiscardDraft2"/>
             </span>
             <div class="button-draft draft-event draft-saving italic-text blue-tooltip" id="draftSaveState" style="display:none"    >
               
               <span class="draft-text">Draft Saving</span>
              </div>
            <a id="btnSaved" href="javascript:void(0);" onClick="publishDraft(this);hideSection();" class="vabutton1 publish-draft {!IF(draftStatus!='' && draftStatus=='Unpublished' ,'','va-disabled')}"      > Publish Draft </a>
            </div>
            <div class="action-icons-right">
            <!--<a class="action-icon edit-icon blue-tooltip" href="#" id="previewHtml"  ><span>Edit</span></a>
            <a class="action-icon duplicate-icon blue-tooltip" href="#" id="previewHtml"  ><span>Duplicate</span></a>-->
           <a class="action-icon preview-icon blue-tooltip" href="{!$Site.BaseUrl}FormdraftPreview?id={!form.Id}" target="_blank"      ><span class="blue-tooltip-text">Preview</span></a>
           <a class="action-icon close-icon blue-tooltip" href="{!$Site.BaseUrl}FormMenu"    ><span class="blue-tooltip-text">Close</span></a>
            </div>
            </div>
            </div>
            <div class="form-settings-wrapper">
             <div class="form-settings-wrapper-inner">
            <div class="vabutton2" onClick="toggleFormSettingSection(true);return false;"   >
            <span class="btnText">Form Settings</span><span class="btnIcon"></span>
            </div>
            </div>             
            </div>
            
            
            
       
                        
             <div style="clear:both">  
               </div>
               </div>
            <div id="frmSetting" style="width: 100%;display:none;background-color:#c4d5e0;">
                <div class="expendSetting" style="padding: 50px 45px;width: 100%;height: auto;overflow: hidden; ">
               
                <div  class="form-setting-wrapper"  >
                   <div class="form-row-group pt50">
                      <div class="form-row">
                      <div class="col-label">
                         <label class="label-for">Form Name</label>
                         </div> 
                          <div class="col-inputs">
                          <apex:outputPanel id="formnameeditPanel"  >
                        <input id="formnameedit" class=""  type="text" value="{!form.Name}"   maxlength="80"   />
                        </apex:outputPanel>  
                      </div>
                      </div>
                      
                    
                      <div class="form-row">
                      <div class="col-label">
                         <label class="label-for">Primary Object</label>
                         </div> 
                          <div class="col-inputs  object-select-elements-block">
                         <div class="scroll-parent">
                                                 <apex:selectList styleclass="drop-selectEditor"  id="dropSelectPrimary"  onchange="changePrimaryObjectCall(this);return false;"    value="{!selectedFieldName}" multiselect="false" size="1">
                                                              <apex:selectOptions value="{!sobjectPreList}"></apex:selectOptions> 
                                                 </apex:selectList>
                                                 <!-- Select Redefine -->
                                            </div>
                                            <br/>
                             <div id="levelFirst" style="margin-left: 35px;margin-top: 42px;" class="secondary-object-block">
                                <div id="lineFirst" style="float: left;margin-left: -29px;margin-top: -37px;display:none"  class="add-object-line"><img src="{!URLFOR($Resource.iconImages,'LineDoted.png')}" /> </div>
                                <div id="hoverRel" onClick="callObjectShow();return false;" class="relatedDiv">+ Add Related Object </div>
                                <div class="scroll-parent" style="margin-left: -16px;display:none">
                                     <apex:selectList styleclass="dropFirst select-secondary-element" onchange="OnChangeRelatedObject(1,this);return false;" id="dropSelectFirst" style="display:none"  value="{!selectedRelatedFieldName}" multiselect="false" size="1">
                                                  <apex:selectOptions value="{!fieldRelatedList}"></apex:selectOptions> 
                                     </apex:selectList>
                                </div>
                                <div id="hoverRelImg"  style="float:left;margin-left: 10px;margin-top: 5px;display:none"  class="delete-object-box">
                                <img class="hoverRelImg" onClick="delRelated();return false;" src="{!URLFOR($Resource.alpha,'blank.png')}"/>
                                
                                 </div>
                             </div> 
                             <br/>
                             <div id="levelSecond" style="margin-left: 35px;margin-top: 42px;"  class="secondary-object-block">
                                <div id="lineSecond" style="float: left;margin-left: -29px;margin-top: -37px;;display:none" class="add-object-line">
                                <img src="{!URLFOR($Resource.iconImages,'LineDoted.png')}" /> </div>
                                <div id="hoverRelSecond" onClick="callObjectShowSecond();return false;" class="relatedDiv">+ Add Related Object </div>
                                <div class="scroll-parent" style="margin-left: -16px;display:none">
                                     <apex:selectList styleclass="dropSecond select-secondary-element" onchange="OnChangeRelatedObject(2,this);return false;" id="dropSelectSecond" style="display:none"  value="{!selectedRelatedFieldName}" multiselect="false" size="1">
                                                  <apex:selectOptions value="{!fieldRelatedList}"></apex:selectOptions> 
                                     </apex:selectList>
                                </div>
                                <div id="hoverRelSelectedSecondImg" style="float:left;margin-left: 10px;margin-top: 5px;display:none"  class="delete-object-box">
                                <img class="hoverRelSelectedSecondImg" onClick="delRelatedSecond();return false;" src="{!URLFOR($Resource.alpha,'blank.png')}"/>
                                </div>
                             </div> 
                             <br/>
                             <div id="levelThird" style="margin-left: 35px;margin-top: 42px;"  class="secondary-object-block">
                                <div id="lineThird" style="float: left;margin-left: -29px;margin-top: -37px;display:none"  class="add-object-line"><img src="{!URLFOR($Resource.iconImages,'LineDoted.png')}" /> </div>
                                <div id="hoverRelThird" onClick="callObjectShowThird();return false;" class="relatedDiv">+ Add Related Object </div>
                                <div class="scroll-parent" style="margin-left: -16px;display:none">
                                     <apex:selectList styleclass="dropThird select-secondary-element"  onchange="OnChangeRelatedObject(3,this);return false;" id="dropSelectThird" style="display:none"  value="{!selectedRelatedFieldName}" multiselect="false" size="1">
                                                  <apex:selectOptions value="{!fieldRelatedList}"></apex:selectOptions> 
                                     </apex:selectList>
                                </div>
                                <div id="hoverRelSelectedThirdImg" style="float:left;margin-left: 10px;margin-top: 5px;display:none"  class="delete-object-box">
                                <img class="hoverRelSelectedThirdImg" onClick="delRelatedThird();return false;" src="{!URLFOR($Resource.alpha,'blank.png')}"/>
                                 </div>
                            
                             </div>    
                      </div>
                      </div>
                       </div>
                       <span class="silver-line-separator"></span> 
                      <div class="form-row-group">
                    <!--  start submit and form confirmation -->  
                      <div class="form-row">
      <div class="col-label">
         <label class="label-for">Submit Label</label>
         </div> 
          <div class="col-inputs">
           <input type="text" id="txtbxSubmitButtonLabel" />
          
           </div> 
 </div> 
 <div class="form-row">
      <div class="col-label">
         <label class="label-for">Post-Submission Options</label>
         </div> 
          <div class="col-inputs">
                <div class="vertical-tab-container">
                                                <ul class="nav nav-tabs vertical-tabs">
                                                    <li class="active">
                                                    <a href="#formconfirmationRadio1" data-toggle="tab">
                                                    <span class="ff-radio-css"></span>Display a confirmation popup</a>
                                                    </li>
                                                    <li><a href="#formconfirmationRadio2" data-toggle="tab">
                                                    <span class="ff-radio-css"></span>Redirect users to a new page</a>
                                                    </li>

                                                </ul>
                                                <div class="tab-content vertical-tab-content">
                                                    <div class="tab-pane fade in active" id="formconfirmationRadio1">
                                                       <textarea id="txtareaThankyoumsg" rows="4"  ></textarea>
                                                    </div>
                                                    <div class="tab-pane fade" id="formconfirmationRadio2">

                                                       <input type="text" id="txtbxRedirectUrl" />

                                                    </div>
                                                </div>
                                            </div>
           </div> 
 </div> 
             <!--  ends submit and form confirmation --> 
         
         </div>     
          <span class="silver-line-separator"></span>         
             <div class="form-row-group">         
      <div class="form-row">
      <div class="col-label">
         <label class="label-for">Track submissions</label>
         </div> 
          <div class="col-inputs">
          <apex:outputPanel styleClass="sec-col" id="trackingEnabledPanel"  >
                                <apex:inputCheckbox styleClass="chkbxtrackingEnabled vff-checkbox" id="chkbxtrackingEnabled" value="{!form.VisualAntidote__TrackingEnabled__c}" selected="{!form.VisualAntidote__TrackingEnabled__c}"/>
                                <label class="vff-check-label" for="chkbxtrackingEnabled"></label>
                                <a class="help-icon blue-tooltip"    >
            <span class="blue-tooltip-text -mt45 -ml40">Check this box to track all your form's submissions in the Form Submissions tab.</span>
            <span class="draft-text"> <img style="margin-left:0px; float:inherit; margin-top:3px;" class="helpIconCode" height="20px" src="{!URLFOR($Resource.alpha,'blank.png')}"/></span>
            </a>
                            </apex:outputPanel>
      </div>
      </div>
      
   </div>
   
     
       <apex:outputPanel styleClass="form-row-group" id="emailNotificationsPanel"  >
          <div class="form-row">
           <div class="col-label">
           <apex:outputLabel styleClass="label-for" value="Notify me on error"  />
                </div>                
           <div class="col-inputs">
            <apex:inputCheckbox styleClass="chkbxemailNotifications vff-checkbox" id="chkbxemailNotifications" value="{!form.VisualAntidote__EnableEmailNotifications__c}" selected="{!form.VisualAntidote__EnableEmailNotifications__c}">
                                        <apex:actionSupport immediate="true"  event="onchange" reRender="validationMsgs,emailNotificationsPanel" action="{!emailNotificationUpdate}" />
                                    </apex:inputCheckbox>
                                    <label class="vff-check-label"  ></label>
                                    </div>
             </div>
            <div class="form-row">
              <div class="col-label">
                 <label class="label-for">
                  <apex:outputLabel style="width:120px;display:inline-block;" styleClass="first-col" value="Email Address"  rendered="{!EmailNotificationEnabled}"/>
                            </label>
                 </div> 
                  <div class="col-inputs">
                    <apex:outputPanel styleClass="sec-col"  id="emailNotificationsTextPanel"  rendered="{!EmailNotificationEnabled}">
                               <apex:inputText styleClass="inputTxtemailNotifications" value="{!EmailToNotify}" id="idinputTxtemailNotifications" rendered="{!EmailNotificationEnabled}"/>
                              </apex:outputPanel> 
                    </div>
              </div>
       </apex:outputPanel> 
  
                   </div>
                </div>
                <div  >
                 </div>
                <div style="clear:both;text-align:center;overflow: hidden;width: 100%;display: block;padding-bottom: 20px;" >
                <div style="float:right;margin-right: 25px;"><a href="javascript:void(0);" onClick="Saved();return false;" class="vabutton1 saveSetting display-inline-block">Save Changes</a></div>
                <div style="float:right;margin-right: 10px;"><a href="javascript:void(0);" onClick="UnSaved();return false;" class="vabutton2 display-inline-block">Cancel</a></div>                
                </div>
                 
               
            </div>
          <div style="clear:both">    </div>
         <div class="grey-left-border10">
                     </div>
                     </div>
         
     </apex:outputPanel>
    
    
     <div class="marginLRauto ohidden text-align-center">
     <div class="vff-success " id="successActionBox" style="display: none;">
                
                <div class="vff-success-msg msg-text-div" onclick="closeNotification(this);" style="display:block"> </div>
                </div>
    </div>
      
      
     
    <apex:outputPanel id="pb2" >
        
       <apex:outputPanel id="dragDropPnl">       
         <div id="mainDiv" >
            
                 <table class="marginLRauto" cellpadding="0" cellspacing="0" style=" width: 938px;margin:0px auto;padding-top:30px; " > 
                     <tr><td>
                        <ul class="nav nav-tabs sfff-editor-tabs"  >
                            <li   class="sfff-editor-tab sfff-form-editor-li active"><a id="formEditorA" href="#sfff-form-editor" aria-controls="sfff-form-editor" role="tab" data-toggle="tab" onclick="toggleTab(this)">Edit Form</a></li>
                            <li  class="sfff-editor-tab  sfff-rule-editor-li" ><a id="ruleEditorA" href="#sfff-rule-editor" aria-controls="sfff-rule-editor" role="tab" data-toggle="tab" onclick="toggleTab(this)">Edit Rules</a></li>                                 
                        </ul>                         
                     </td></tr>                 
                     <tr class="tab-pane fade in sfff-form-editor-content  active" id="sfff-form-editor">
                         
                         <td width="450" nowrap="nowrap" style="vertical-align: top;">
                          
                             <div id="labelAndFieldDiv"  >
                                 <ul style="list-style-type: none;" id="parentUlForm"></ul>
                             </div>
                         </td>
                        <td   width="300" style="vertical-align: top;padding-left: 22px;">
                            <div id="availableFieldBox" style="width:255px;">
                                <div id="availableFields" style="width:236px;display:none;">                            
                                                                          
                                </div>
                                <div style="height:459px;overflow:hidden;width:255px;" id="divForFields" >
                                      <apex:outputPanel id="pnlForFieldsRepeat"  layout="block"     >   
                                        <div id="ListFirst">
                                        <div class="availableHeaderDiv" id="availableHeaderDivFirst" style="/*height:21px;*/background-color:#FFF; "><span class="objName">{!form.Object_Name__c} <!-- Fields --></span>
                                            <img name="btnExpand" src="{!URLFOR($Resource.alpha,'blank.png')}" class="availableHeader togHover" align="middle" style="float: right;cursor:pointer;opacity: 0;"/>
                                        </div>                            
                                        <div id="ListFirstToggle" style="height: 319px;">                               
                                             <ul id="sortableForFields" class="dropfields" style="">
                                                <apex:repeat value="{!lstFieldsModel}" var="Field">
                                                    <li title="{!Field.tooltipMessage}" class="tooltip fieldLi ui-state-default" obj="{!sobjectName}" id="lblli{!sobjectName}{!Field.fieldName}" isRequired="{!Field.isRequired}"><div style="DISPLAY: block; float:left;width:200px;" id="divLabel{!Field.fieldId}" lblName="{!Field.fieldLabel}" > 
                                                    <span class="sfff-field-info display-none"><span    class="field-info-tooltip"  > <span class="field-info-icon">i</span><span class="field-info-tooltip-text"><span class="field-info-tooltip-text-inner"> <span class="fi-tooltip-text-o"><span class="fi-letter-icon">O</span>Object:{!sobjectName} </span><span class="fi-tooltip-text-f"> </span><span class="fi-tooltip-text-r"> </span><span class="fi-tooltip-text-h"> </span></span></span></span></span>
                                                            <label  VAOBJ="{!Field.referenceTargetField}" style="float:left;" VATT="{!Field.vatt}" id="lbl{!Field.fieldName}" class="ff-label {!IF(Field.isReference,'grayLabel','')}">{!Field.fieldLabel}</label><input type="hidden" value="{!Field.isRequired}"  id="isDefaultRequired{!Field.fieldName}"/><input type="hidden" class="{!IF(Field.isReference,'defReq','')}" value="{!Field.isRequired}" id="isUserSelectedRequired{!Field.fieldName}"/><input type="hidden" value="" id="errMsgForRequired{!Field.fieldName}"/><input type="hidden" value="" id="defaultValue{!Field.fieldName}"/><input type="hidden" value="{!Field.isReference}" id="hideField{!Field.fieldName}"/><input type="hidden" value="" id="isReadOnly{!Field.fieldName}"/><input type="hidden" value="{!Field.isReference == null}" id="upsertField{!Field.fieldName}"/></div><div style="DISPLAY: none;" class="fieldDiv" id="divField{!Field.fieldId}"><apex:outputtext value="{!Field.htmlField}" /></div></li>
                                                </apex:repeat>
                                            </ul> 
                                        </div>
                                        </div>                                       
                                        <div style="clear:both"></div>
                                        <apex:outputPanel layout="block" rendered="{!isSecond}"  styleClass="available-fields-block second-list" >
                                        <div id="ListSecond">
                                        <div class="availableHeaderDiv" style="background-color:#FFF;  ">                                        
                                        <span id="{!sobjectNameListFirst}" class="objName">{!sobjectNameFirst} </span>
                                        <!--<img src="{!URLFOR($Resource.iconImages,'collapse.png')}"  class="availableHeader" align="middle" style="cursor:pointer;float: right;opacity: 0;"/>-->
                                        <img name="btnExpand" src="{!URLFOR($Resource.alpha,'blank.png')}" class="availableHeader togHover" align="middle" style="float: right;cursor:pointer;opacity: 0;"/>
                                        </div>                            
                                        <div id="ListSecondToggle" style="height: 319px;">
                                            <ul id="sortableForFieldsNew" class="dropfields" style=""> 
                                                <apex:repeat value="{!lstFieldsMultiModel}" var="Field" rendered="{!isSecond}">
                                                            <li title="{!Field.tooltipMessage}" class="tooltip fieldLi ui-state-default" obj="{!sobjectNameFirst}"   id="lblli{!(Field.fieldSafeId)}" isRequired="{!Field.isRequired}"><div style="DISPLAY: block; float:left;width:200px;" id="divLabel{!Field.fieldId}" lblName="{!Field.fieldLabel}" > 
                                                          <span class="sfff-field-info display-none"><span    class="field-info-tooltip"  > <span class="field-info-icon">i</span><span class="field-info-tooltip-text"><span class="field-info-tooltip-text-inner"> <span class="fi-tooltip-text-o"><span class="fi-letter-icon">O</span>Object:{!sobjectNameFirst} </span><span class="fi-tooltip-text-f"> </span><span class="fi-tooltip-text-r"> </span><span class="fi-tooltip-text-h"> </span></span></span></span></span>
                                                      <label  VAOBJ="{!Field.referenceTargetField}"   style="float:left;" VATT="{!Field.vatt}" id="lbl{!Field.fieldName}" class="ff-label {!IF(Field.isReference,'grayLabel','')}">{!Field.fieldLabel}</label><input type="hidden" value="{!Field.isRequired}"  id="isDefaultRequired{!Field.fieldName}"/><input type="hidden" class="{!IF(Field.isReference,'defReq','')}" value="{!Field.isRequired}" id="isUserSelectedRequired{!Field.fieldName}"/><input type="hidden" value="" id="errMsgForRequired{!Field.fieldName}"/><input type="hidden" value="" id="defaultValue{!Field.fieldName}"/><input type="hidden" value="{!Field.isReference}" id="hideField{!Field.fieldName}"/><input type="hidden" value="" id="isReadOnly{!Field.fieldName}"/><input type="hidden" value="{!Field.isReference == null}" id="upsertField{!Field.fieldName}"/></div><div style="DISPLAY: none;" class="fieldDiv" id="divField{!Field.fieldId}"><apex:outputtext value="{!Field.htmlField}" /></div></li>
                                                </apex:repeat>
                                            </ul>
                                        </div>
                                        </div>
                                        
                                        </apex:outputPanel>
                                        <div style="clear:both"></div>
                                        <apex:outputPanel layout="block" rendered="{!isThird}"  styleClass="available-fields-block third-list" >
                                        <div id="ListThird">
                                        <div class="availableHeaderDiv" style="background-color:#FFF;  ">
                                        <span id="{!sobjectNameListSecond}" class="objName">{!sobjectNameSecond} <!-- Fields --></span>
                                        <!--<img src="{!URLFOR($Resource.iconImages,'collapse.png')}"  class="availableHeader" align="middle" style="cursor:pointer;float: right;opacity: 0;"/>-->
                                        <img name="btnExpand" src="{!URLFOR($Resource.alpha,'blank.png')}" class="availableHeader togHover" align="middle" style="float: right;cursor:pointer;opacity: 0;"/>
                                        </div>                            
                                        <div id="ListThirdToggle" style="height: 351px;">
                                            <ul id="sortableForFieldsThird" class="dropfields" style=""> 
                                                <apex:repeat value="{!lstFieldsMultiSecondModel}" var="Field" rendered="{!isThird}">
                                                            <li title="{!Field.tooltipMessage}" class="tooltip fieldLi ui-state-default" obj="{!sobjectNameSecond}" id="lblli{!(Field.fieldSafeId)}" isRequired="{!Field.isRequired}"><div style="DISPLAY: block; float:left;width:200px;" id="divLabel{!Field.fieldId}" lblName="{!Field.fieldLabel}" >
                                                            <span class="sfff-field-info display-none"><span    class="field-info-tooltip"  > <span class="field-info-icon">i</span><span class="field-info-tooltip-text"><span class="field-info-tooltip-text-inner"> <span class="fi-tooltip-text-o"><span class="fi-letter-icon">O</span>Object:{!sobjectNameSecond} </span><span class="fi-tooltip-text-f"> </span><span class="fi-tooltip-text-r"> </span><span class="fi-tooltip-text-h"> </span></span></span></span></span>
                                                    <label  VAOBJ="{!Field.referenceTargetField}"   style="float:left;" VATT="{!Field.vatt}" id="lbl{!Field.fieldName}" class="ff-label {!IF(Field.isReference,'grayLabel','')}">{!Field.fieldLabel}</label><input type="hidden" value="{!Field.isRequired}"  id="isDefaultRequired{!Field.fieldName}"/><input type="hidden" class="{!IF(Field.isReference,'defReq','')}" value="{!Field.isRequired}" id="isUserSelectedRequired{!Field.fieldName}"/><input type="hidden" value="" id="errMsgForRequired{!Field.fieldName}"/><input type="hidden" value="" id="defaultValue{!Field.fieldName}"/><input type="hidden" value="{!Field.isReference}" id="hideField{!Field.fieldName}"/><input type="hidden" value="" id="isReadOnly{!Field.fieldName}"/><input type="hidden" value="{!Field.isReference == null}" id="upsertField{!Field.fieldName}"/></div><div style="DISPLAY: none;" class="fieldDiv" id="divField{!Field.fieldId}"><apex:outputtext value="{!Field.htmlField}" /></div></li>
                                                </apex:repeat>
                                            </ul>
                                        </div>
                                        </div>
                                        </apex:outputPanel>
                                        <div style="clear:both"></div>
                                        <apex:outputPanel layout="block" rendered="{!isFourth}"  styleClass="available-fields-block fourth-list" >
                                        <div id="ListFourth">
                                        <div class="availableHeaderDiv" style=" background-color:#FFF; ">                                        
                                        <span id="{!sobjectNameListThird}" class="objName"> {!sobjectNameThird}<!-- Fields --></span>
                                        <!--<img src="{!URLFOR($Resource.iconImages,'collapse.png')}"  class="availableHeader" align="middle" style="cursor:pointer;float: right;opacity: 0;"/>-->
                                        <img name="btnExpand" src="{!URLFOR($Resource.alpha,'blank.png')}" class="availableHeader togHover" align="middle" style="float: right;cursor:pointer;opacity: 0;"/>
                                        </div>                            
                                        <div id="ListFourthToggle" style="height: 351px;">
                                            <ul id="sortableForFieldsFourth" class="dropfields" style=""> 
                                                <apex:repeat value="{!lstFieldsMultiThirdModel}" var="Field" rendered="{!isFourth}">
                                                            <li title="{!Field.tooltipMessage}" class="tooltip fieldLi ui-state-default" obj="{!sobjectNameThird}" id="lblli{!(Field.fieldSafeId)}" isRequired="{!Field.isRequired}"><div style="DISPLAY: block; float:left;width:200px;" id="divLabel{!Field.fieldId}" lblName="{!Field.fieldLabel}" > 
                                                           <span class="sfff-field-info display-none"><span    class="field-info-tooltip"  > <span class="field-info-icon">i</span><span class="field-info-tooltip-text"><span class="field-info-tooltip-text-inner"> <span class="fi-tooltip-text-o"><span class="fi-letter-icon">O</span> Object:{!sobjectNameThird}</span><span class="fi-tooltip-text-f"> </span><span class="fi-tooltip-text-r"> </span><span class="fi-tooltip-text-h"> </span></span></span></span></span>
                                                     <label   VAOBJ="{!Field.referenceTargetField}"  style="float:left;" VATT="{!Field.vatt}" id="lbl{!Field.fieldName}" class="ff-label {!IF(Field.isReference,'grayLabel','')}">{!Field.fieldLabel}</label><input type="hidden" value="{!Field.isRequired}"  id="isDefaultRequired{!Field.fieldName}"/><input type="hidden" class="{!IF(Field.isReference,'defReq','')}" value="{!Field.isRequired}" id="isUserSelectedRequired{!Field.fieldName}"/><input type="hidden" value="" id="errMsgForRequired{!Field.fieldName}"/><input type="hidden" value="" id="defaultValue{!Field.fieldName}"/><input type="hidden" value="{!Field.isReference}" id="hideField{!Field.fieldName}"/><input type="hidden" value="" id="isReadOnly{!Field.fieldName}"/><input type="hidden" value="{!Field.isReference == null}" id="upsertField{!Field.fieldName}"/></div><div style="DISPLAY: none;" class="fieldDiv" id="divField{!Field.fieldId}"><apex:outputtext value="{!Field.htmlField}" /></div></li>
                                                </apex:repeat>
                                            </ul>
                                        </div>
                                        </div>
                                        </apex:outputPanel>
                                     </apex:outputPanel>
                                      
                                 </div> 
                                 
                                 
                                 <div class="fieldsGapA" id="sectionAGap"></div>

                                 
                                
                            </div>  
                            
                            <!-- Aslam Changes -->
                            <div id="generalFieldBox" style="width:256px;margin-top:20px;">
                                <div id="generalFields" class="generalFields"   onclick="toggleGenFieldsSection();">                            
                                     <div class="objName" style="float:left">
                                     General Fields
                                     </div>
                                     <div style="float:right;padding-top: 3px;" >
                                         <img src="{!URLFOR($Resource.iconImages,'expand.png')}" id="gnFldImg" style="cursor:pointer;display:none"/>
                                         <div class="togHover gnFldImg" ></div>
                                     </div>
                                     
                                </div> 
                                                                                                     
                                 <div style="height:141px;overflow:hidden;width:256px;display:none;box-shadow: -1px 1px 2px 1px rgba(4,4,4,.12);" id="divForGenFields" >
                                      <apex:outputPanel id="pnlForGeneralFieldsRepeat" >                                  
                                         <ul id="generalSortableForFields" class="dropfields" style="">
                                             <li title="Text" class="tooltip fieldLi ui-state-default"  id="lblliGENERALTEXT" isRequired="false">
                                                 <div style="DISPLAY: block; float:left;width:200px;" id="divLabelGENERALTEXT" lblName="Text" > 
                                                     <label style="float:left;" VATT="STRING" id="lblGENERALTEXT" class="ff-label ff-general-text-label">Text</label>
                                                     <input type="hidden" value="false"  id="isDefaultRequiredGENERALTEXT"/>
                                                     <input type="hidden" class="" value="false" id="isUserSelectedRequiredGENERALTEXT"/>
                                                     <input type="hidden" value="" id="errMsgForRequiredGENERALTEXT"/>
                                                     <input type="hidden" value="" id="defaultValueGENERALTEXT"/>
                                                     <input type="hidden" value="false" id="hideFieldGENERALTEXT"/>
                                                 </div>
                                                 <div style="visibility:hidden;DISPLAY: none;" class="fieldDiv" id="divFieldGENERALTEXT">
                                                          <input type="textbox" id="GENERALTEXT" name="GENERALTEXT" vatt="STRING" data-formatmessage="" data-maxlength="100" data-maxlengthmessage="Maximum 100 characters" maxlength="100" />
                                                 </div>
                                                 
                                             </li>                                             
                                             <li title="Captcha" class="tooltip fieldLi ui-state-default"  id="lblliCAPTCHA" isRequired="true">
                                                 <div style="DISPLAY: block; float:left;width:200px;" id="divLabelCAPTCHA" lblName="CAPTCHA Text" > 
                                                     <label style="float:left;" VATT="CAPTCHA" id="lblCAPTCHA" class="ff-label ff-captcha-label">Captcha</label>
                                                     <input type="hidden" value="true"  id="isDefaultRequiredCAPTCHA"/>
                                                     <input type="hidden" class="" value="true" id="isUserSelectedRequiredCAPTCHA"/>
                                                     <input type="hidden" value="" id="errMsgForRequiredCAPTCHA"/>
                                                     <input type="hidden" value="" id="defaultValueCAPTCHA"/>
                                                     <input type="hidden" value="false" id="hideFieldCAPTCHA"/>
                                                 </div>                                                 
                                                 <div style="DISPLAY: none;" class="fieldDiv" id="divFieldCAPTCHA">
                                                     <img src="http://www.powiat.chelm.pl/userfiles/captcha/9fa79129af6c581f26dc8d8c6d96906b.png" /><br/>
                                                     <input type="textbox" id="CAPTCHAINPUT" name="CAPTCHAINPUT" vatt="CAPTCHA" data-formatmessage="" data-maxlength="50" data-maxlengthmessage="Maximum 50 characters" maxlength="50" />
                                                     <div id="Captcha" name="Captcha" data-isrequired="true" data-requiredmessage="Please enter the text shown in the image above"></div>
                                                 </div>
                                             </li>
                                             
                                             <li title="File Upload" class="tooltip fieldLi ui-state-default"  id="lblliUPLOAD" isRequired="false">
                                                 <div style="DISPLAY: block; float:left;width:200px;" id="divLabelUPLOAD" lblName="File Text" > 
                                                     <label style="float:left;" VATT="STRING" id="lblUPLOAD" class="ff-label ff-fileupload-label">File Upload</label>
                                                     <input type="hidden" value="false"  id="isDefaultRequiredUPLOAD"/>
                                                     <input type="hidden" class="" value="true" id="isUserSelectedRequiredUPLOAD"/>
                                                     <input type="hidden" value="" id="errMsgForRequiredUPLOAD"/>
                                                     <input type="hidden" value="" id="defaultValueUPLOAD"/>
                                                     <input type="hidden" value="false" id="hideFieldUPLOAD"/>
                                                 </div>
                                                 <div style="DISPLAY: none;" class="fieldDiv" id="divFieldUPLOAD">
                                                     <div id="FileUploadAreaXX" name="FileUploadArea" vatt="FILEUPLOAD" class="ff-fileupload-drop-area" data-maxfiles="3" data-isrequired="false" data-requiredmessage="required" data-allowedfiletypes="" data-uploadtochatter="false">
                                                            <label id="FileUpload01_Select" for="FileUploadXX" class="ff-fileupload-select">Add File...</label>
                                                            <input type="file" name="FileUpload01" id="FileUpload01" style="filter:alpha(opacity: 0);position: absolute;top: 0;left: -99999px;"/>
                                                      </div>
                                                        
                                                     
                                                 </div>
                                             </li>
                                        </ul>  
                                     </apex:outputPanel>
                                      
                                 </div> 
                                 <div class="fieldsGapG" id="sectionGGap"></div>
                                  <div id="generalFields2"  class="generalFields"  style="height:10px;border-radius:0px 0px 10px 10px; padding-left:10px;padding-right:10px;">                            
                                     
                                </div> 
                                
                            </div>  

                         </td>
                    </tr>                     
                    <tr class="tab-pane sfff-rule-editor-content" id="sfff-rule-editor" style="display:none">
                        <td class="main-content-holder sfff-rule-editor-body">
                        <apex:actionStatus id="statusLoad">
      <apex:facet name="start">
       
        <div class="load-status-small"  style="margin:50px auto;" >
        
        <div class="dialogSmall"></div>
       <div class="primary"  >Loading, please wait... </div>

        
        </div>
     </apex:facet>
</apex:actionStatus>
                            <apex:outputText rendered="{!packageTier == 'Base'}">
                                <div style="padding:80px; text-align:center">
                                <h3>Conditional Rules are only available in Professional or Enterprise Editions of Fast Forms.</h3>
                                <br />
                                <br />
                                <div class="sfff-action-buttons"> <a class="vabutton1" href="http://visualantidote.com/fastforms#Subscribe" target="_blank">Upgrade Now!</a>
                                </div>
                                </div>
                            </apex:outputText>
                          <div class="ruleEditorWrapperCSS">
                            <apex:outputPanel id="ruleEditorWrapper" layout="block"   rendered="{! packageTier != 'Base'}">
                               <apex:outputPanel layout="block" rendered="{!loadRuleEditor}">
                               
                               <apex:dynamicComponent componentValue="{!DynamicRuleEditorComponent}" />
                               
                               </apex:outputPanel>
                            </apex:outputPanel>
                            </div>
                        </td>
                    </tr>
                </table>
      

                     <table width="100%">
                         <tr style="display:none;">
                             <td colspan="3" style="text-align:center;">
                                <P><b>To deploy this form on your website, copy and paste the following snippet of JavaScript into your website:
                                </b></P> 
                                <apex:outputPanel id="pnlOutputUrl">
                                    <center><div id="divUrlParamStr" style="width:400px;word-wrap:break-word;text-align:center;">&lt;script type='text/javascript' id="jsFastForms" src='<apex:outputlabel value="{!engineUrl}/Scripts/Main.js?d={!urlParamStr}" />'&gt;&lt;/script&gt;</div></center>
                                    <script>
                                        $("#copy_textarea").text($("#divUrlParamStr").text());
                                    </script>
                                </apex:outputPanel>  
                             </td>
                        </tr>
                        
                      <tr style="display:none;">
                          <td colspan="3" style="text-align:center;">
                              <table align="center">
                                  <tr>
                                      <td><input id="submitButton" class="buttonClass" type="button" value="Save" onclick="showSaveConfirm();"/>
                                      </td>
                                      <td> <input id="previewButton" class="buttonClass" type="button" value="Preview" onclick="save(true,false);" style="margin-left:4%;"/>
                                      </td>
                                  </tr>
                              </table>
                          </td>
                     </tr>
                 </table>
             </div>
      </apex:outputpanel>                 
     <apex:outputPanel id="tempSelectRelatedList"  styleClass="tempSelectRelatedListCSS" layout="block"  style="display:none; " >
     <apex:selectList styleclass="dropTemp select-secondary-element"         value="{!selectedRelatedFieldName}" multiselect="false" size="1">
                                                  <apex:selectOptions value="{!fieldRelatedList}"></apex:selectOptions> 
                                     </apex:selectList>
      </apex:outputpanel> 
      <div id="previewDiv" style="display:none;">
      </div>
      <div id="labelDiv" style="display:none;">
      </div>
      <div id="tempBlockQuotesHide" style="display:none;"/>
      <div id="tempLabelFieldDiv" style="display:none;">
      </div>
      <div id="tempDialogHtml" style="display:none;">
      </div>
      <div id="tempBtnDialogHtml" style="display:none;">
      </div>
      <!---Confirm Dialog for close form without save---->
      <div id="dialog-confirm" class="content"></div>
      
      <!---Dialog for error---->
      <div id="dialog-error"></div>      
      
    </apex:outputPanel>
     
    <apex:outputPanel id="hidePopupPanel">
        <input type="hidden" value="{!hidePopup}" id="hidePopup"/>
    </apex:outputPanel>
    <a href="#" class="go-top"><img src="{!URLFOR($Resource.iconImages,'backtotop.png')}"/></a>
    <apex:outputPanel id="valRender">
        <script>        
            <apex:repeat value="{!lookupFieldMap}" var="child">
                mapLookup["{!child}"]="{!lookupFieldMap[child]}";
            </apex:repeat>
        </script>
    </apex:outputPanel>
 </apex:form>
</apex:page>