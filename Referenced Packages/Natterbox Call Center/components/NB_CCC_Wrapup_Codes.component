<apex:component controller="natterbox.NB_CCC_Wrapup_Codes_Controller">
        
    <apex:attribute type="natterbox__nbCallCenterConfig__c"
        name="theObject" assignTo="{!theObject}" description="Selected Object"
        required="true" />
    <apex:attribute type="String" name="theField1" assignTo="{!theField1}"
        description="Selected Field1" required="true" />
    <apex:attribute type="String" name="theField2" assignTo="{!theField2}"
        description="Selected Field2" required="true" />
    <apex:attribute type="String" name="theField3" assignTo="{!theField3}"
        description="Selected Field3" required="true" />
    <apex:attribute type="String" name="theField4" assignTo="{!theField4}"
        description="Selected Field4" required="true" />
    <apex:attribute type="String" name="theField5" assignTo="{!theField5}"
        description="Selected Field5" required="true" />
    <apex:attribute type="String" name="theField6" assignTo="{!theField6}"
        description="Selected Field6" required="true" />
    <apex:attribute type="String" name="theField7" assignTo="{!theField7}"
        description="Selected Field7" required="true" />
    <apex:attribute type="String" name="theField8" assignTo="{!theField8}"
        description="Selected Field8" required="true" />        
    <apex:attribute name="location" assignTo="{!location}"
        description="This is the location for the component." type="String" />
    <apex:attribute name="mode" assignTo="{!mode}"
        description="This is the mode for the component." type="String" />
                
    <script type="text/javascript">
    j$ = jQuery.noConflict();
    
    function showUpdating{!location}() {
        j$("[id$=updatingImage{!location}]").css("visibility", "visible");
    }
    function hideUpdating{!location}() {
        j$("[id$=updatingImage{!location}]").css("visibility", "hidden");
    }    
</script>

    <apex:actionStatus id="updatingInbound"
        onstart="showUpdatingInbound();" onstop="hideUpdatingInbound();" />
    <apex:actionStatus id="updatingOutbound"
        onstart="showUpdatingOutbound();" onstop="hideUpdatingOutbound();" />
    <apex:pageBlock mode="edit">
        <div class="pbHeader">
            <table>
                <tr>
                    <td width="200">
                        <h2 class="mainTitle">Wrapup Codes ({!location})</h2>
                    </td>
                    <td width="50"><apex:commandButton action="{!addLine}"
                            value="New" rerender="SelectorContainer"
                            status="updating{!location}" rendered="{!mode != 'readonly'}" />
                    </td>
                    <td>
                    	<apex:image value="{!URLFOR($Resource.natterbox__jQuery, '/css/redmond/images/ajax-loader.gif')}"
                            style="visibility: hidden;float:right;" 
                            id="updatingImageInbound"
                            rendered="{!location=='Inbound'}" /> 
                        <apex:image value="{!URLFOR($Resource.natterbox__jQuery, '/css/redmond/images/ajax-loader.gif')}"
                            style="visibility: hidden;float:right;"
                            id="updatingImageOutbound" 
                            rendered="{!location=='Outbound'}" />
                    </td>                    
            	</tr>
            </table>
       </div>     
       <div class="pbHeader">        
            <table>
                <tr>
                    <td>
                    	<apex:outputLabel value="Locale Specific Labels "/>
                    	
						<apex:SelectList size="1" label="Add Locale" id="LocaleListOutbound"
							onChange="updateSelectedLocaleOutbound(this.value); return true;" rendered="{!location != 'Inbound'}">
							<apex:SelectOptions value="{!localeList}" />
							<apex:actionFunction name="updateSelectedLocaleOutbound" action="{!updateSelectedLocaleOutbound}" rerender="List">
						    	<apex:param name="selectedLocaleCode" value="" assignTo="{!selectedLocaleCode}"/>
							</apex:actionFunction>							
						</apex:SelectList>
						
						<apex:SelectList size="1" label="Add Locale" id="LocaleListInbound"
							onChange="updateSelectedLocaleInbound(this.value); return true;" rendered="{!location == 'Inbound'}">
							<apex:SelectOptions value="{!localeList}" />
							<apex:actionFunction name="updateSelectedLocaleInbound" action="{!updateSelectedLocaleInbound}" rerender="List">
						    	<apex:param name="selectedLocaleCode" value="" assignTo="{!selectedLocaleCode}"/>
							</apex:actionFunction>							
						</apex:SelectList>							
														
					</td>					
                    <td width="50"><apex:commandButton action="{!updateSelectedLocaleLabels}"
                            value="Add / Update" rerender="List,generalError,LocaleListInbound,LocaleListOutbound"
                            status="updating{!location}" rendered="{!mode != 'readonly'}" />
                    </td>
                    <td width="50"><apex:commandButton action="{!deleteSelectedLocaleLabels}"
                            value="Delete" rerender="List,LocaleListInbound,LocaleListOutbound"
                            status="updating{!location}" rendered="{!mode != 'readonly'}" />
                    </td>                    					                    
                </tr>
                <tr>
                	<td colspan="3">               
                		<apex:outputText id="generalError" value="{!generalError}" styleClass="errorMsg" />
                	</td>
                </tr>
            </table>
        </div>
        <apex:pageBlockTable id="List" value="{!items}" var="item"
            cellPadding="4" border="1" width="300">
            <apex:column headerValue="Action" width="70"
                rendered="{!mode != 'readonly'}">
                <apex:commandLink value="Edit" action="{!selectLine}"
                    rerender="SelectorContainer" status="updating{!location}">
                    <apex:param name="editIndent" value="{!item.indent}" assignTo="{!editIndent}" />
                    <apex:param name="editLabel" value="{!item.label}" assignTo="{!editLabel}" />
                    <apex:param name="editCode" value="{!item.code}" assignTo="{!editCode}" />
                    <apex:param name="editDefault" value="{!item.isDefault}" assignTo="{!editDefault}" />                        
                </apex:commandLink>
                &nbsp;|&nbsp;
                <apex:commandLink value="Del" action="{!deleteLine}"
                    rerender="SelectorContainer,List"
                    onClick="if (!confirmDelete('Press OK to delete this row.')) return;"
                    status="updating{!location}">
                    <apex:param name="editIndent" value="{!item.indent}" assignTo="{!editIndent}" />
                    <apex:param name="editLabel" value="{!item.label}" assignTo="{!editLabel}" />
                    <apex:param name="editCode" value="{!item.code}"  assignTo="{!editCode}" />
                    <apex:param name="editDefault" value="{!item.isDefault}" assignTo="{!editDefault}" />                        
                </apex:commandLink>
            </apex:column>
            <apex:column headerValue="Indent" width="50"
                rendered="{!mode != 'readonly'}">
                <apex:commandButton value="◀" action="{!indentLeft}" rerender="List"
                    style="height:20px" status="updating{!location}"
                    disabled="{!items.size < 2}">
                    <apex:param name="editIndent" value="{!item.indent}" assignTo="{!editIndent}" />
                    <apex:param name="editLabel" value="{!item.label}" assignTo="{!editLabel}" />
                    <apex:param name="editCode" value="{!item.code}" assignTo="{!editCode}" />
                    <apex:param name="editDefault" value="{!item.isDefault}" assignTo="{!editDefault}" />                            
                </apex:commandButton>
                <apex:commandButton value="▶" action="{!indentRight}" rerender="List"
                    style="height:20px" status="updating{!location}"
                    disabled="{!items.size < 2}">
                    <apex:param name="editIndent" value="{!item.indent}" assignTo="{!editIndent}" />
                    <apex:param name="editLabel" value="{!item.label}" assignTo="{!editLabel}" />
                    <apex:param name="editCode" value="{!item.code}" assignTo="{!editCode}" />
                    <apex:param name="editDefault" value="{!item.isDefault}" assignTo="{!editDefault}" />                              
                </apex:commandButton>
            </apex:column>
            <apex:column headerValue="Label" width="350" value="{!item.indent} {!item.label}" />
            <apex:column headerValue="Code" value="{!item.code}" />
            <apex:column headerValue="Default" value="{!item.isDefault}" />
            <apex:column headerValue="{!localeName}">
            	<apex:inputText value="{!item.selectedLocaleLabel}" rendered="{!mode != 'readonly'}"/>
            	<apex:outputText value="{!item.selectedLocaleLabel}" rendered="{!mode == 'readonly'}"/>
            </apex:column>
                        
            <apex:column headerValue="Move" width="50"
                rendered="{!mode != 'readonly'}">
                <apex:commandButton value="▲" action="{!jumpUp}" rerender="List"
                    style="height:20px" status="updating{!location}"
                    disabled="{!items.size < 2}">
                    <apex:param name="editIndent" value="{!item.indent}" assignTo="{!editIndent}" />
                    <apex:param name="editLabel" value="{!item.label}" assignTo="{!editLabel}" />
                    <apex:param name="editCode" value="{!item.code}" assignTo="{!editCode}" />
                    <apex:param name="editDefault" value="{!item.isDefault}" assignTo="{!editDefault}" />                              
                </apex:commandButton>
                <apex:commandButton value="▼" action="{!jumpDown}" rerender="List"
                    style="height:20px" status="updating{!location}"
                    disabled="{!items.size < 2}">
                    <apex:param name="editIndent" value="{!item.indent}" assignTo="{!editIndent}" />
                    <apex:param name="editLabel" value="{!item.label}" assignTo="{!editLabel}" />
                    <apex:param name="editCode" value="{!item.code}" assignTo="{!editCode}" />
                    <apex:param name="editDefault" value="{!item.isDefault}" assignTo="{!editDefault}" />                              
                </apex:commandButton>
            </apex:column>
        </apex:pageBlockTable>
        <apex:pageBlockSection id="SelectorContainer">
            <apex:pageBlockSection rendered="{!showSelector}" columns="4">
                <apex:outputLabel value="Set the Label:">
                    <apex:inputText value="{!selectedLabel}" />
                    <apex:outputText id="labelError" value="{!labelError}"
                        styleClass="errorMsg" />
                </apex:outputLabel>
                <apex:outputLabel value="Set the Code :">
                    <apex:inputText value="{!selectedCode}" id="codeblock" />
                    <apex:outputText id="codeError" value="{!codeError}"
                        styleClass="errorMsg" />
                </apex:outputLabel>
                <apex:outputLabel value="Default">
                        <apex:inputCheckbox value="{!selectedDefault}" />
                    </apex:outputLabel>
                <apex:outputPanel id="buttonsblock">
                    <table width="200">
                        <tr>
                            <td><apex:commandButton value="Update"
                                    action="{!updateSelection}"
                                    rerender="List,SelectorContainer,codeError,labelError,generalError"
                                    status="updating{!location}" disabled="{!updateDisabled}" />
                            </td>
                        </tr>
                        <tr>
                            <td><apex:commandButton value="Cancel"
                                    action="{!cancelSelection}" rerender="List,SelectorContainer"
                                    status="updating{!location}" />
                            </td>
                        </tr>
                        <tr>
                            <td></td>
                        </tr>

                    </table>
                </apex:outputPanel>
            </apex:pageBlockSection>
        </apex:pageBlockSection>
        <!-- just for debugging -->
        <!--  
        <apex:outputText id="codesString" value="{!fieldValue}"/>  
        -->              
    </apex:pageBlock>
</apex:component>